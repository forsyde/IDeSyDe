// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/scheduling/course_scheduling.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fscheduling_2fcourse_5fscheduling_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fscheduling_2fcourse_5fscheduling_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fscheduling_2fcourse_5fscheduling_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
namespace operations_research {
class ClassAssignment;
struct ClassAssignmentDefaultTypeInternal;
extern ClassAssignmentDefaultTypeInternal _ClassAssignment_default_instance_;
class Course;
struct CourseDefaultTypeInternal;
extern CourseDefaultTypeInternal _Course_default_instance_;
class CourseSchedulingModel;
struct CourseSchedulingModelDefaultTypeInternal;
extern CourseSchedulingModelDefaultTypeInternal _CourseSchedulingModel_default_instance_;
class CourseSchedulingResult;
struct CourseSchedulingResultDefaultTypeInternal;
extern CourseSchedulingResultDefaultTypeInternal _CourseSchedulingResult_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class Student;
struct StudentDefaultTypeInternal;
extern StudentDefaultTypeInternal _Student_default_instance_;
class StudentAssignment;
struct StudentAssignmentDefaultTypeInternal;
extern StudentAssignmentDefaultTypeInternal _StudentAssignment_default_instance_;
class Teacher;
struct TeacherDefaultTypeInternal;
extern TeacherDefaultTypeInternal _Teacher_default_instance_;
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
enum CourseSchedulingResultStatus : int {
  COURSE_SCHEDULING_RESULT_STATUS_UNSPECIFIED = 0,
  SOLVER_FEASIBLE = 1,
  SOLVER_OPTIMAL = 2,
  SOLVER_INFEASIBLE = 3,
  SOLVER_MODEL_INVALID = 4,
  SOLVER_NOT_SOLVED = 5,
  ABNORMAL = 6,
  CourseSchedulingResultStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CourseSchedulingResultStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CourseSchedulingResultStatus_IsValid(int value);
extern const uint32_t CourseSchedulingResultStatus_internal_data_[];
constexpr CourseSchedulingResultStatus CourseSchedulingResultStatus_MIN = static_cast<CourseSchedulingResultStatus>(0);
constexpr CourseSchedulingResultStatus CourseSchedulingResultStatus_MAX = static_cast<CourseSchedulingResultStatus>(6);
constexpr int CourseSchedulingResultStatus_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
CourseSchedulingResultStatus_descriptor();
template <typename T>
const std::string& CourseSchedulingResultStatus_Name(T value) {
  static_assert(std::is_same<T, CourseSchedulingResultStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CourseSchedulingResultStatus_Name().");
  return CourseSchedulingResultStatus_Name(static_cast<CourseSchedulingResultStatus>(value));
}
template <>
inline const std::string& CourseSchedulingResultStatus_Name(CourseSchedulingResultStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CourseSchedulingResultStatus_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool CourseSchedulingResultStatus_Parse(absl::string_view name, CourseSchedulingResultStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CourseSchedulingResultStatus>(
      CourseSchedulingResultStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Teacher final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.Teacher) */ {
 public:
  inline Teacher() : Teacher(nullptr) {}
  ~Teacher() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Teacher(::google::protobuf::internal::ConstantInitialized);

  inline Teacher(const Teacher& from)
      : Teacher(nullptr, from) {}
  Teacher(Teacher&& from) noexcept
    : Teacher() {
    *this = ::std::move(from);
  }

  inline Teacher& operator=(const Teacher& from) {
    CopyFrom(from);
    return *this;
  }
  inline Teacher& operator=(Teacher&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Teacher& default_instance() {
    return *internal_default_instance();
  }
  static inline const Teacher* internal_default_instance() {
    return reinterpret_cast<const Teacher*>(
               &_Teacher_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Teacher& a, Teacher& b) {
    a.Swap(&b);
  }
  inline void Swap(Teacher* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Teacher* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Teacher* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Teacher>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Teacher& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Teacher& from) {
    Teacher::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Teacher* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.Teacher";
  }
  protected:
  explicit Teacher(::google::protobuf::Arena* arena);
  Teacher(::google::protobuf::Arena* arena, const Teacher& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRestrictedTimeSlotsFieldNumber = 2,
    kDisplayNameFieldNumber = 1,
  };
  // repeated int32 restricted_time_slots = 2;
  int restricted_time_slots_size() const;
  private:
  int _internal_restricted_time_slots_size() const;

  public:
  void clear_restricted_time_slots() ;
  ::int32_t restricted_time_slots(int index) const;
  void set_restricted_time_slots(int index, ::int32_t value);
  void add_restricted_time_slots(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& restricted_time_slots() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_restricted_time_slots();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_restricted_time_slots() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_restricted_time_slots();

  public:
  // string display_name = 1;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.Teacher)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> restricted_time_slots_;
    mutable ::google::protobuf::internal::CachedSize _restricted_time_slots_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class StudentAssignment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.StudentAssignment) */ {
 public:
  inline StudentAssignment() : StudentAssignment(nullptr) {}
  ~StudentAssignment() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StudentAssignment(::google::protobuf::internal::ConstantInitialized);

  inline StudentAssignment(const StudentAssignment& from)
      : StudentAssignment(nullptr, from) {}
  StudentAssignment(StudentAssignment&& from) noexcept
    : StudentAssignment() {
    *this = ::std::move(from);
  }

  inline StudentAssignment& operator=(const StudentAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  inline StudentAssignment& operator=(StudentAssignment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StudentAssignment& default_instance() {
    return *internal_default_instance();
  }
  static inline const StudentAssignment* internal_default_instance() {
    return reinterpret_cast<const StudentAssignment*>(
               &_StudentAssignment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StudentAssignment& a, StudentAssignment& b) {
    a.Swap(&b);
  }
  inline void Swap(StudentAssignment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StudentAssignment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StudentAssignment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StudentAssignment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StudentAssignment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StudentAssignment& from) {
    StudentAssignment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StudentAssignment* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.StudentAssignment";
  }
  protected:
  explicit StudentAssignment(::google::protobuf::Arena* arena);
  StudentAssignment(::google::protobuf::Arena* arena, const StudentAssignment& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCourseIndicesFieldNumber = 2,
    kSectionIndicesFieldNumber = 3,
    kStudentIndexFieldNumber = 1,
  };
  // repeated int32 course_indices = 2;
  int course_indices_size() const;
  private:
  int _internal_course_indices_size() const;

  public:
  void clear_course_indices() ;
  ::int32_t course_indices(int index) const;
  void set_course_indices(int index, ::int32_t value);
  void add_course_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& course_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_course_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_course_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_course_indices();

  public:
  // repeated int32 section_indices = 3;
  int section_indices_size() const;
  private:
  int _internal_section_indices_size() const;

  public:
  void clear_section_indices() ;
  ::int32_t section_indices(int index) const;
  void set_section_indices(int index, ::int32_t value);
  void add_section_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& section_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_section_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_section_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_section_indices();

  public:
  // int32 student_index = 1;
  void clear_student_index() ;
  ::int32_t student_index() const;
  void set_student_index(::int32_t value);

  private:
  ::int32_t _internal_student_index() const;
  void _internal_set_student_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.StudentAssignment)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> course_indices_;
    mutable ::google::protobuf::internal::CachedSize _course_indices_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> section_indices_;
    mutable ::google::protobuf::internal::CachedSize _section_indices_cached_byte_size_;
    ::int32_t student_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class Student final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.Student) */ {
 public:
  inline Student() : Student(nullptr) {}
  ~Student() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Student(::google::protobuf::internal::ConstantInitialized);

  inline Student(const Student& from)
      : Student(nullptr, from) {}
  Student(Student&& from) noexcept
    : Student() {
    *this = ::std::move(from);
  }

  inline Student& operator=(const Student& from) {
    CopyFrom(from);
    return *this;
  }
  inline Student& operator=(Student&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Student& default_instance() {
    return *internal_default_instance();
  }
  static inline const Student* internal_default_instance() {
    return reinterpret_cast<const Student*>(
               &_Student_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Student& a, Student& b) {
    a.Swap(&b);
  }
  inline void Swap(Student* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Student* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Student* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Student>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Student& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Student& from) {
    Student::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Student* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.Student";
  }
  protected:
  explicit Student(::google::protobuf::Arena* arena);
  Student(::google::protobuf::Arena* arena, const Student& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCourseIndicesFieldNumber = 2,
    kDisplayNameFieldNumber = 1,
  };
  // repeated int32 course_indices = 2;
  int course_indices_size() const;
  private:
  int _internal_course_indices_size() const;

  public:
  void clear_course_indices() ;
  ::int32_t course_indices(int index) const;
  void set_course_indices(int index, ::int32_t value);
  void add_course_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& course_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_course_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_course_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_course_indices();

  public:
  // string display_name = 1;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.Student)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> course_indices_;
    mutable ::google::protobuf::internal::CachedSize _course_indices_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class Room final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Room(::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from)
      : Room(nullptr, from) {}
  Room(Room&& from) noexcept
    : Room() {
    *this = ::std::move(from);
  }

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
               &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Room& a, Room& b) {
    a.Swap(&b);
  }
  inline void Swap(Room* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Room& from) {
    Room::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Room* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.Room";
  }
  protected:
  explicit Room(::google::protobuf::Arena* arena);
  Room(::google::protobuf::Arena* arena, const Room& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisplayNameFieldNumber = 1,
    kCapacityFieldNumber = 2,
  };
  // string display_name = 1;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // int32 capacity = 2;
  void clear_capacity() ;
  ::int32_t capacity() const;
  void set_capacity(::int32_t value);

  private:
  ::int32_t _internal_capacity() const;
  void _internal_set_capacity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.Room)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    ::int32_t capacity_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class Course final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.Course) */ {
 public:
  inline Course() : Course(nullptr) {}
  ~Course() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Course(::google::protobuf::internal::ConstantInitialized);

  inline Course(const Course& from)
      : Course(nullptr, from) {}
  Course(Course&& from) noexcept
    : Course() {
    *this = ::std::move(from);
  }

  inline Course& operator=(const Course& from) {
    CopyFrom(from);
    return *this;
  }
  inline Course& operator=(Course&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Course& default_instance() {
    return *internal_default_instance();
  }
  static inline const Course* internal_default_instance() {
    return reinterpret_cast<const Course*>(
               &_Course_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Course& a, Course& b) {
    a.Swap(&b);
  }
  inline void Swap(Course* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Course* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Course* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Course>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Course& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Course& from) {
    Course::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Course* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.Course";
  }
  protected:
  explicit Course(::google::protobuf::Arena* arena);
  Course(::google::protobuf::Arena* arena, const Course& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeacherIndicesFieldNumber = 6,
    kTeacherSectionCountsFieldNumber = 7,
    kRoomIndicesFieldNumber = 8,
    kDisplayNameFieldNumber = 1,
    kMeetingsCountFieldNumber = 2,
    kMaxCapacityFieldNumber = 3,
    kMinCapacityFieldNumber = 4,
    kConsecutiveSlotsCountFieldNumber = 5,
  };
  // repeated int32 teacher_indices = 6;
  int teacher_indices_size() const;
  private:
  int _internal_teacher_indices_size() const;

  public:
  void clear_teacher_indices() ;
  ::int32_t teacher_indices(int index) const;
  void set_teacher_indices(int index, ::int32_t value);
  void add_teacher_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& teacher_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_teacher_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_teacher_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_teacher_indices();

  public:
  // repeated int32 teacher_section_counts = 7;
  int teacher_section_counts_size() const;
  private:
  int _internal_teacher_section_counts_size() const;

  public:
  void clear_teacher_section_counts() ;
  ::int32_t teacher_section_counts(int index) const;
  void set_teacher_section_counts(int index, ::int32_t value);
  void add_teacher_section_counts(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& teacher_section_counts() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_teacher_section_counts();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_teacher_section_counts() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_teacher_section_counts();

  public:
  // repeated int32 room_indices = 8;
  int room_indices_size() const;
  private:
  int _internal_room_indices_size() const;

  public:
  void clear_room_indices() ;
  ::int32_t room_indices(int index) const;
  void set_room_indices(int index, ::int32_t value);
  void add_room_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& room_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_room_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_room_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_room_indices();

  public:
  // string display_name = 1;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // int32 meetings_count = 2;
  void clear_meetings_count() ;
  ::int32_t meetings_count() const;
  void set_meetings_count(::int32_t value);

  private:
  ::int32_t _internal_meetings_count() const;
  void _internal_set_meetings_count(::int32_t value);

  public:
  // int32 max_capacity = 3;
  void clear_max_capacity() ;
  ::int32_t max_capacity() const;
  void set_max_capacity(::int32_t value);

  private:
  ::int32_t _internal_max_capacity() const;
  void _internal_set_max_capacity(::int32_t value);

  public:
  // int32 min_capacity = 4;
  void clear_min_capacity() ;
  ::int32_t min_capacity() const;
  void set_min_capacity(::int32_t value);

  private:
  ::int32_t _internal_min_capacity() const;
  void _internal_set_min_capacity(::int32_t value);

  public:
  // int32 consecutive_slots_count = 5;
  void clear_consecutive_slots_count() ;
  ::int32_t consecutive_slots_count() const;
  void set_consecutive_slots_count(::int32_t value);

  private:
  ::int32_t _internal_consecutive_slots_count() const;
  void _internal_set_consecutive_slots_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.Course)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> teacher_indices_;
    mutable ::google::protobuf::internal::CachedSize _teacher_indices_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> teacher_section_counts_;
    mutable ::google::protobuf::internal::CachedSize _teacher_section_counts_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> room_indices_;
    mutable ::google::protobuf::internal::CachedSize _room_indices_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    ::int32_t meetings_count_;
    ::int32_t max_capacity_;
    ::int32_t min_capacity_;
    ::int32_t consecutive_slots_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class ClassAssignment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.ClassAssignment) */ {
 public:
  inline ClassAssignment() : ClassAssignment(nullptr) {}
  ~ClassAssignment() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ClassAssignment(::google::protobuf::internal::ConstantInitialized);

  inline ClassAssignment(const ClassAssignment& from)
      : ClassAssignment(nullptr, from) {}
  ClassAssignment(ClassAssignment&& from) noexcept
    : ClassAssignment() {
    *this = ::std::move(from);
  }

  inline ClassAssignment& operator=(const ClassAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClassAssignment& operator=(ClassAssignment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClassAssignment& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClassAssignment* internal_default_instance() {
    return reinterpret_cast<const ClassAssignment*>(
               &_ClassAssignment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ClassAssignment& a, ClassAssignment& b) {
    a.Swap(&b);
  }
  inline void Swap(ClassAssignment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClassAssignment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClassAssignment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClassAssignment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClassAssignment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ClassAssignment& from) {
    ClassAssignment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClassAssignment* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.ClassAssignment";
  }
  protected:
  explicit ClassAssignment(::google::protobuf::Arena* arena);
  ClassAssignment(::google::protobuf::Arena* arena, const ClassAssignment& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeSlotsFieldNumber = 3,
    kRoomIndicesFieldNumber = 4,
    kCourseIndexFieldNumber = 1,
    kSectionNumberFieldNumber = 2,
  };
  // repeated int32 time_slots = 3;
  int time_slots_size() const;
  private:
  int _internal_time_slots_size() const;

  public:
  void clear_time_slots() ;
  ::int32_t time_slots(int index) const;
  void set_time_slots(int index, ::int32_t value);
  void add_time_slots(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& time_slots() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_time_slots();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_time_slots() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_time_slots();

  public:
  // repeated int32 room_indices = 4;
  int room_indices_size() const;
  private:
  int _internal_room_indices_size() const;

  public:
  void clear_room_indices() ;
  ::int32_t room_indices(int index) const;
  void set_room_indices(int index, ::int32_t value);
  void add_room_indices(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& room_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_room_indices();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_room_indices() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_room_indices();

  public:
  // int32 course_index = 1;
  void clear_course_index() ;
  ::int32_t course_index() const;
  void set_course_index(::int32_t value);

  private:
  ::int32_t _internal_course_index() const;
  void _internal_set_course_index(::int32_t value);

  public:
  // int32 section_number = 2;
  void clear_section_number() ;
  ::int32_t section_number() const;
  void set_section_number(::int32_t value);

  private:
  ::int32_t _internal_section_number() const;
  void _internal_set_section_number(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.ClassAssignment)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> time_slots_;
    mutable ::google::protobuf::internal::CachedSize _time_slots_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> room_indices_;
    mutable ::google::protobuf::internal::CachedSize _room_indices_cached_byte_size_;
    ::int32_t course_index_;
    ::int32_t section_number_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class CourseSchedulingResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.CourseSchedulingResult) */ {
 public:
  inline CourseSchedulingResult() : CourseSchedulingResult(nullptr) {}
  ~CourseSchedulingResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CourseSchedulingResult(::google::protobuf::internal::ConstantInitialized);

  inline CourseSchedulingResult(const CourseSchedulingResult& from)
      : CourseSchedulingResult(nullptr, from) {}
  CourseSchedulingResult(CourseSchedulingResult&& from) noexcept
    : CourseSchedulingResult() {
    *this = ::std::move(from);
  }

  inline CourseSchedulingResult& operator=(const CourseSchedulingResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CourseSchedulingResult& operator=(CourseSchedulingResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CourseSchedulingResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CourseSchedulingResult* internal_default_instance() {
    return reinterpret_cast<const CourseSchedulingResult*>(
               &_CourseSchedulingResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CourseSchedulingResult& a, CourseSchedulingResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CourseSchedulingResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CourseSchedulingResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CourseSchedulingResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CourseSchedulingResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CourseSchedulingResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CourseSchedulingResult& from) {
    CourseSchedulingResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CourseSchedulingResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.CourseSchedulingResult";
  }
  protected:
  explicit CourseSchedulingResult(::google::protobuf::Arena* arena);
  CourseSchedulingResult(::google::protobuf::Arena* arena, const CourseSchedulingResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassAssignmentsFieldNumber = 3,
    kStudentAssignmentsFieldNumber = 4,
    kMessageFieldNumber = 1,
    kSolverStatusFieldNumber = 2,
  };
  // repeated .operations_research.ClassAssignment class_assignments = 3;
  int class_assignments_size() const;
  private:
  int _internal_class_assignments_size() const;

  public:
  void clear_class_assignments() ;
  ::operations_research::ClassAssignment* mutable_class_assignments(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::ClassAssignment >*
      mutable_class_assignments();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>& _internal_class_assignments() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>* _internal_mutable_class_assignments();
  public:
  const ::operations_research::ClassAssignment& class_assignments(int index) const;
  ::operations_research::ClassAssignment* add_class_assignments();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::ClassAssignment >&
      class_assignments() const;
  // repeated .operations_research.StudentAssignment student_assignments = 4;
  int student_assignments_size() const;
  private:
  int _internal_student_assignments_size() const;

  public:
  void clear_student_assignments() ;
  ::operations_research::StudentAssignment* mutable_student_assignments(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::StudentAssignment >*
      mutable_student_assignments();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>& _internal_student_assignments() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>* _internal_mutable_student_assignments();
  public:
  const ::operations_research::StudentAssignment& student_assignments(int index) const;
  ::operations_research::StudentAssignment* add_student_assignments();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::StudentAssignment >&
      student_assignments() const;
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .operations_research.CourseSchedulingResultStatus solver_status = 2;
  void clear_solver_status() ;
  ::operations_research::CourseSchedulingResultStatus solver_status() const;
  void set_solver_status(::operations_research::CourseSchedulingResultStatus value);

  private:
  ::operations_research::CourseSchedulingResultStatus _internal_solver_status() const;
  void _internal_set_solver_status(::operations_research::CourseSchedulingResultStatus value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.CourseSchedulingResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::operations_research::ClassAssignment > class_assignments_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::StudentAssignment > student_assignments_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    int solver_status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};// -------------------------------------------------------------------

class CourseSchedulingModel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.CourseSchedulingModel) */ {
 public:
  inline CourseSchedulingModel() : CourseSchedulingModel(nullptr) {}
  ~CourseSchedulingModel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CourseSchedulingModel(::google::protobuf::internal::ConstantInitialized);

  inline CourseSchedulingModel(const CourseSchedulingModel& from)
      : CourseSchedulingModel(nullptr, from) {}
  CourseSchedulingModel(CourseSchedulingModel&& from) noexcept
    : CourseSchedulingModel() {
    *this = ::std::move(from);
  }

  inline CourseSchedulingModel& operator=(const CourseSchedulingModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CourseSchedulingModel& operator=(CourseSchedulingModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CourseSchedulingModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CourseSchedulingModel* internal_default_instance() {
    return reinterpret_cast<const CourseSchedulingModel*>(
               &_CourseSchedulingModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CourseSchedulingModel& a, CourseSchedulingModel& b) {
    a.Swap(&b);
  }
  inline void Swap(CourseSchedulingModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CourseSchedulingModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CourseSchedulingModel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CourseSchedulingModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CourseSchedulingModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CourseSchedulingModel& from) {
    CourseSchedulingModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CourseSchedulingModel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.CourseSchedulingModel";
  }
  protected:
  explicit CourseSchedulingModel(::google::protobuf::Arena* arena);
  CourseSchedulingModel(::google::protobuf::Arena* arena, const CourseSchedulingModel& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoursesFieldNumber = 4,
    kTeachersFieldNumber = 5,
    kStudentsFieldNumber = 6,
    kRoomsFieldNumber = 7,
    kDisplayNameFieldNumber = 1,
    kDaysCountFieldNumber = 2,
    kDailyTimeSlotCountFieldNumber = 3,
  };
  // repeated .operations_research.Course courses = 4;
  int courses_size() const;
  private:
  int _internal_courses_size() const;

  public:
  void clear_courses() ;
  ::operations_research::Course* mutable_courses(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::Course >*
      mutable_courses();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::Course>& _internal_courses() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::Course>* _internal_mutable_courses();
  public:
  const ::operations_research::Course& courses(int index) const;
  ::operations_research::Course* add_courses();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::Course >&
      courses() const;
  // repeated .operations_research.Teacher teachers = 5;
  int teachers_size() const;
  private:
  int _internal_teachers_size() const;

  public:
  void clear_teachers() ;
  ::operations_research::Teacher* mutable_teachers(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::Teacher >*
      mutable_teachers();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>& _internal_teachers() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>* _internal_mutable_teachers();
  public:
  const ::operations_research::Teacher& teachers(int index) const;
  ::operations_research::Teacher* add_teachers();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::Teacher >&
      teachers() const;
  // repeated .operations_research.Student students = 6;
  int students_size() const;
  private:
  int _internal_students_size() const;

  public:
  void clear_students() ;
  ::operations_research::Student* mutable_students(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::Student >*
      mutable_students();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::Student>& _internal_students() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::Student>* _internal_mutable_students();
  public:
  const ::operations_research::Student& students(int index) const;
  ::operations_research::Student* add_students();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::Student >&
      students() const;
  // repeated .operations_research.Room rooms = 7;
  int rooms_size() const;
  private:
  int _internal_rooms_size() const;

  public:
  void clear_rooms() ;
  ::operations_research::Room* mutable_rooms(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::Room >*
      mutable_rooms();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::Room>& _internal_rooms() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::Room>* _internal_mutable_rooms();
  public:
  const ::operations_research::Room& rooms(int index) const;
  ::operations_research::Room* add_rooms();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::Room >&
      rooms() const;
  // string display_name = 1;
  void clear_display_name() ;
  const std::string& display_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_display_name(Arg_&& arg, Args_... args);
  std::string* mutable_display_name();
  PROTOBUF_NODISCARD std::string* release_display_name();
  void set_allocated_display_name(std::string* value);

  private:
  const std::string& _internal_display_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
      const std::string& value);
  std::string* _internal_mutable_display_name();

  public:
  // int32 days_count = 2;
  void clear_days_count() ;
  ::int32_t days_count() const;
  void set_days_count(::int32_t value);

  private:
  ::int32_t _internal_days_count() const;
  void _internal_set_days_count(::int32_t value);

  public:
  // int32 daily_time_slot_count = 3;
  void clear_daily_time_slot_count() ;
  ::int32_t daily_time_slot_count() const;
  void set_daily_time_slot_count(::int32_t value);

  private:
  ::int32_t _internal_daily_time_slot_count() const;
  void _internal_set_daily_time_slot_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.CourseSchedulingModel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::operations_research::Course > courses_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::Teacher > teachers_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::Student > students_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::Room > rooms_;
    ::google::protobuf::internal::ArenaStringPtr display_name_;
    ::int32_t days_count_;
    ::int32_t daily_time_slot_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fscheduling_2fcourse_5fscheduling_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CourseSchedulingModel

// string display_name = 1;
inline void CourseSchedulingModel::clear_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& CourseSchedulingModel::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CourseSchedulingModel::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.CourseSchedulingModel.display_name)
}
inline std::string* CourseSchedulingModel::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingModel.display_name)
  return _s;
}
inline const std::string& CourseSchedulingModel::_internal_display_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.display_name_.Get();
}
inline void CourseSchedulingModel::_internal_set_display_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* CourseSchedulingModel::_internal_mutable_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* CourseSchedulingModel::release_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.CourseSchedulingModel.display_name)
  return _impl_.display_name_.Release();
}
inline void CourseSchedulingModel::set_allocated_display_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.CourseSchedulingModel.display_name)
}

// int32 days_count = 2;
inline void CourseSchedulingModel::clear_days_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.days_count_ = 0;
}
inline ::int32_t CourseSchedulingModel::days_count() const {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.days_count)
  return _internal_days_count();
}
inline void CourseSchedulingModel::set_days_count(::int32_t value) {
  _internal_set_days_count(value);
  // @@protoc_insertion_point(field_set:operations_research.CourseSchedulingModel.days_count)
}
inline ::int32_t CourseSchedulingModel::_internal_days_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.days_count_;
}
inline void CourseSchedulingModel::_internal_set_days_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.days_count_ = value;
}

// int32 daily_time_slot_count = 3;
inline void CourseSchedulingModel::clear_daily_time_slot_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.daily_time_slot_count_ = 0;
}
inline ::int32_t CourseSchedulingModel::daily_time_slot_count() const {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.daily_time_slot_count)
  return _internal_daily_time_slot_count();
}
inline void CourseSchedulingModel::set_daily_time_slot_count(::int32_t value) {
  _internal_set_daily_time_slot_count(value);
  // @@protoc_insertion_point(field_set:operations_research.CourseSchedulingModel.daily_time_slot_count)
}
inline ::int32_t CourseSchedulingModel::_internal_daily_time_slot_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.daily_time_slot_count_;
}
inline void CourseSchedulingModel::_internal_set_daily_time_slot_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.daily_time_slot_count_ = value;
}

// repeated .operations_research.Course courses = 4;
inline int CourseSchedulingModel::_internal_courses_size() const {
  return _internal_courses().size();
}
inline int CourseSchedulingModel::courses_size() const {
  return _internal_courses_size();
}
inline void CourseSchedulingModel::clear_courses() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.courses_.Clear();
}
inline ::operations_research::Course* CourseSchedulingModel::mutable_courses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingModel.courses)
  return _internal_mutable_courses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Course>* CourseSchedulingModel::mutable_courses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingModel.courses)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_courses();
}
inline const ::operations_research::Course& CourseSchedulingModel::courses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.courses)
  return _internal_courses().Get(index);
}
inline ::operations_research::Course* CourseSchedulingModel::add_courses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::Course* _add = _internal_mutable_courses()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingModel.courses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Course>& CourseSchedulingModel::courses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingModel.courses)
  return _internal_courses();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Course>&
CourseSchedulingModel::_internal_courses() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.courses_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Course>*
CourseSchedulingModel::_internal_mutable_courses() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.courses_;
}

// repeated .operations_research.Teacher teachers = 5;
inline int CourseSchedulingModel::_internal_teachers_size() const {
  return _internal_teachers().size();
}
inline int CourseSchedulingModel::teachers_size() const {
  return _internal_teachers_size();
}
inline void CourseSchedulingModel::clear_teachers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.teachers_.Clear();
}
inline ::operations_research::Teacher* CourseSchedulingModel::mutable_teachers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingModel.teachers)
  return _internal_mutable_teachers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>* CourseSchedulingModel::mutable_teachers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingModel.teachers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_teachers();
}
inline const ::operations_research::Teacher& CourseSchedulingModel::teachers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.teachers)
  return _internal_teachers().Get(index);
}
inline ::operations_research::Teacher* CourseSchedulingModel::add_teachers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::Teacher* _add = _internal_mutable_teachers()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingModel.teachers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>& CourseSchedulingModel::teachers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingModel.teachers)
  return _internal_teachers();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>&
CourseSchedulingModel::_internal_teachers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.teachers_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Teacher>*
CourseSchedulingModel::_internal_mutable_teachers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.teachers_;
}

// repeated .operations_research.Student students = 6;
inline int CourseSchedulingModel::_internal_students_size() const {
  return _internal_students().size();
}
inline int CourseSchedulingModel::students_size() const {
  return _internal_students_size();
}
inline void CourseSchedulingModel::clear_students() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.students_.Clear();
}
inline ::operations_research::Student* CourseSchedulingModel::mutable_students(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingModel.students)
  return _internal_mutable_students()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Student>* CourseSchedulingModel::mutable_students()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingModel.students)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_students();
}
inline const ::operations_research::Student& CourseSchedulingModel::students(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.students)
  return _internal_students().Get(index);
}
inline ::operations_research::Student* CourseSchedulingModel::add_students() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::Student* _add = _internal_mutable_students()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingModel.students)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Student>& CourseSchedulingModel::students() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingModel.students)
  return _internal_students();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Student>&
CourseSchedulingModel::_internal_students() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.students_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Student>*
CourseSchedulingModel::_internal_mutable_students() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.students_;
}

// repeated .operations_research.Room rooms = 7;
inline int CourseSchedulingModel::_internal_rooms_size() const {
  return _internal_rooms().size();
}
inline int CourseSchedulingModel::rooms_size() const {
  return _internal_rooms_size();
}
inline void CourseSchedulingModel::clear_rooms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rooms_.Clear();
}
inline ::operations_research::Room* CourseSchedulingModel::mutable_rooms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingModel.rooms)
  return _internal_mutable_rooms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Room>* CourseSchedulingModel::mutable_rooms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingModel.rooms)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rooms();
}
inline const ::operations_research::Room& CourseSchedulingModel::rooms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingModel.rooms)
  return _internal_rooms().Get(index);
}
inline ::operations_research::Room* CourseSchedulingModel::add_rooms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::Room* _add = _internal_mutable_rooms()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingModel.rooms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Room>& CourseSchedulingModel::rooms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingModel.rooms)
  return _internal_rooms();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::Room>&
CourseSchedulingModel::_internal_rooms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rooms_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::Room>*
CourseSchedulingModel::_internal_mutable_rooms() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rooms_;
}

// -------------------------------------------------------------------

// CourseSchedulingResult

// string message = 1;
inline void CourseSchedulingResult::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& CourseSchedulingResult::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingResult.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CourseSchedulingResult::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.CourseSchedulingResult.message)
}
inline std::string* CourseSchedulingResult::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingResult.message)
  return _s;
}
inline const std::string& CourseSchedulingResult::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void CourseSchedulingResult::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* CourseSchedulingResult::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* CourseSchedulingResult::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.CourseSchedulingResult.message)
  return _impl_.message_.Release();
}
inline void CourseSchedulingResult::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.CourseSchedulingResult.message)
}

// .operations_research.CourseSchedulingResultStatus solver_status = 2;
inline void CourseSchedulingResult::clear_solver_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.solver_status_ = 0;
}
inline ::operations_research::CourseSchedulingResultStatus CourseSchedulingResult::solver_status() const {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingResult.solver_status)
  return _internal_solver_status();
}
inline void CourseSchedulingResult::set_solver_status(::operations_research::CourseSchedulingResultStatus value) {
  _internal_set_solver_status(value);
  // @@protoc_insertion_point(field_set:operations_research.CourseSchedulingResult.solver_status)
}
inline ::operations_research::CourseSchedulingResultStatus CourseSchedulingResult::_internal_solver_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::operations_research::CourseSchedulingResultStatus>(_impl_.solver_status_);
}
inline void CourseSchedulingResult::_internal_set_solver_status(::operations_research::CourseSchedulingResultStatus value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.solver_status_ = value;
}

// repeated .operations_research.ClassAssignment class_assignments = 3;
inline int CourseSchedulingResult::_internal_class_assignments_size() const {
  return _internal_class_assignments().size();
}
inline int CourseSchedulingResult::class_assignments_size() const {
  return _internal_class_assignments_size();
}
inline void CourseSchedulingResult::clear_class_assignments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.class_assignments_.Clear();
}
inline ::operations_research::ClassAssignment* CourseSchedulingResult::mutable_class_assignments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingResult.class_assignments)
  return _internal_mutable_class_assignments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>* CourseSchedulingResult::mutable_class_assignments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingResult.class_assignments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_class_assignments();
}
inline const ::operations_research::ClassAssignment& CourseSchedulingResult::class_assignments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingResult.class_assignments)
  return _internal_class_assignments().Get(index);
}
inline ::operations_research::ClassAssignment* CourseSchedulingResult::add_class_assignments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::ClassAssignment* _add = _internal_mutable_class_assignments()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingResult.class_assignments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>& CourseSchedulingResult::class_assignments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingResult.class_assignments)
  return _internal_class_assignments();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>&
CourseSchedulingResult::_internal_class_assignments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.class_assignments_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::ClassAssignment>*
CourseSchedulingResult::_internal_mutable_class_assignments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.class_assignments_;
}

// repeated .operations_research.StudentAssignment student_assignments = 4;
inline int CourseSchedulingResult::_internal_student_assignments_size() const {
  return _internal_student_assignments().size();
}
inline int CourseSchedulingResult::student_assignments_size() const {
  return _internal_student_assignments_size();
}
inline void CourseSchedulingResult::clear_student_assignments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.student_assignments_.Clear();
}
inline ::operations_research::StudentAssignment* CourseSchedulingResult::mutable_student_assignments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.CourseSchedulingResult.student_assignments)
  return _internal_mutable_student_assignments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>* CourseSchedulingResult::mutable_student_assignments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.CourseSchedulingResult.student_assignments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_student_assignments();
}
inline const ::operations_research::StudentAssignment& CourseSchedulingResult::student_assignments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.CourseSchedulingResult.student_assignments)
  return _internal_student_assignments().Get(index);
}
inline ::operations_research::StudentAssignment* CourseSchedulingResult::add_student_assignments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::StudentAssignment* _add = _internal_mutable_student_assignments()->Add();
  // @@protoc_insertion_point(field_add:operations_research.CourseSchedulingResult.student_assignments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>& CourseSchedulingResult::student_assignments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.CourseSchedulingResult.student_assignments)
  return _internal_student_assignments();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>&
CourseSchedulingResult::_internal_student_assignments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.student_assignments_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::StudentAssignment>*
CourseSchedulingResult::_internal_mutable_student_assignments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.student_assignments_;
}

// -------------------------------------------------------------------

// ClassAssignment

// int32 course_index = 1;
inline void ClassAssignment::clear_course_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.course_index_ = 0;
}
inline ::int32_t ClassAssignment::course_index() const {
  // @@protoc_insertion_point(field_get:operations_research.ClassAssignment.course_index)
  return _internal_course_index();
}
inline void ClassAssignment::set_course_index(::int32_t value) {
  _internal_set_course_index(value);
  // @@protoc_insertion_point(field_set:operations_research.ClassAssignment.course_index)
}
inline ::int32_t ClassAssignment::_internal_course_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.course_index_;
}
inline void ClassAssignment::_internal_set_course_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.course_index_ = value;
}

// int32 section_number = 2;
inline void ClassAssignment::clear_section_number() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.section_number_ = 0;
}
inline ::int32_t ClassAssignment::section_number() const {
  // @@protoc_insertion_point(field_get:operations_research.ClassAssignment.section_number)
  return _internal_section_number();
}
inline void ClassAssignment::set_section_number(::int32_t value) {
  _internal_set_section_number(value);
  // @@protoc_insertion_point(field_set:operations_research.ClassAssignment.section_number)
}
inline ::int32_t ClassAssignment::_internal_section_number() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.section_number_;
}
inline void ClassAssignment::_internal_set_section_number(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.section_number_ = value;
}

// repeated int32 time_slots = 3;
inline int ClassAssignment::_internal_time_slots_size() const {
  return _internal_time_slots().size();
}
inline int ClassAssignment::time_slots_size() const {
  return _internal_time_slots_size();
}
inline void ClassAssignment::clear_time_slots() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_slots_.Clear();
}
inline ::int32_t ClassAssignment::time_slots(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.ClassAssignment.time_slots)
  return _internal_time_slots().Get(index);
}
inline void ClassAssignment::set_time_slots(int index, ::int32_t value) {
  _internal_mutable_time_slots()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.ClassAssignment.time_slots)
}
inline void ClassAssignment::add_time_slots(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_time_slots()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.ClassAssignment.time_slots)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ClassAssignment::time_slots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.ClassAssignment.time_slots)
  return _internal_time_slots();
}
inline ::google::protobuf::RepeatedField<::int32_t>* ClassAssignment::mutable_time_slots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.ClassAssignment.time_slots)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_time_slots();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ClassAssignment::_internal_time_slots()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_slots_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* ClassAssignment::_internal_mutable_time_slots() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.time_slots_;
}

// repeated int32 room_indices = 4;
inline int ClassAssignment::_internal_room_indices_size() const {
  return _internal_room_indices().size();
}
inline int ClassAssignment::room_indices_size() const {
  return _internal_room_indices_size();
}
inline void ClassAssignment::clear_room_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.room_indices_.Clear();
}
inline ::int32_t ClassAssignment::room_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.ClassAssignment.room_indices)
  return _internal_room_indices().Get(index);
}
inline void ClassAssignment::set_room_indices(int index, ::int32_t value) {
  _internal_mutable_room_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.ClassAssignment.room_indices)
}
inline void ClassAssignment::add_room_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_room_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.ClassAssignment.room_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ClassAssignment::room_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.ClassAssignment.room_indices)
  return _internal_room_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* ClassAssignment::mutable_room_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.ClassAssignment.room_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_room_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ClassAssignment::_internal_room_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.room_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* ClassAssignment::_internal_mutable_room_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.room_indices_;
}

// -------------------------------------------------------------------

// StudentAssignment

// int32 student_index = 1;
inline void StudentAssignment::clear_student_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.student_index_ = 0;
}
inline ::int32_t StudentAssignment::student_index() const {
  // @@protoc_insertion_point(field_get:operations_research.StudentAssignment.student_index)
  return _internal_student_index();
}
inline void StudentAssignment::set_student_index(::int32_t value) {
  _internal_set_student_index(value);
  // @@protoc_insertion_point(field_set:operations_research.StudentAssignment.student_index)
}
inline ::int32_t StudentAssignment::_internal_student_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.student_index_;
}
inline void StudentAssignment::_internal_set_student_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.student_index_ = value;
}

// repeated int32 course_indices = 2;
inline int StudentAssignment::_internal_course_indices_size() const {
  return _internal_course_indices().size();
}
inline int StudentAssignment::course_indices_size() const {
  return _internal_course_indices_size();
}
inline void StudentAssignment::clear_course_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.course_indices_.Clear();
}
inline ::int32_t StudentAssignment::course_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.StudentAssignment.course_indices)
  return _internal_course_indices().Get(index);
}
inline void StudentAssignment::set_course_indices(int index, ::int32_t value) {
  _internal_mutable_course_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.StudentAssignment.course_indices)
}
inline void StudentAssignment::add_course_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_course_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.StudentAssignment.course_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StudentAssignment::course_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.StudentAssignment.course_indices)
  return _internal_course_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* StudentAssignment::mutable_course_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.StudentAssignment.course_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_course_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StudentAssignment::_internal_course_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.course_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* StudentAssignment::_internal_mutable_course_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.course_indices_;
}

// repeated int32 section_indices = 3;
inline int StudentAssignment::_internal_section_indices_size() const {
  return _internal_section_indices().size();
}
inline int StudentAssignment::section_indices_size() const {
  return _internal_section_indices_size();
}
inline void StudentAssignment::clear_section_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.section_indices_.Clear();
}
inline ::int32_t StudentAssignment::section_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.StudentAssignment.section_indices)
  return _internal_section_indices().Get(index);
}
inline void StudentAssignment::set_section_indices(int index, ::int32_t value) {
  _internal_mutable_section_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.StudentAssignment.section_indices)
}
inline void StudentAssignment::add_section_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_section_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.StudentAssignment.section_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StudentAssignment::section_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.StudentAssignment.section_indices)
  return _internal_section_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* StudentAssignment::mutable_section_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.StudentAssignment.section_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_section_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& StudentAssignment::_internal_section_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.section_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* StudentAssignment::_internal_mutable_section_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.section_indices_;
}

// -------------------------------------------------------------------

// Course

// string display_name = 1;
inline void Course::clear_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& Course::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.Course.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Course::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.Course.display_name)
}
inline std::string* Course::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:operations_research.Course.display_name)
  return _s;
}
inline const std::string& Course::_internal_display_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.display_name_.Get();
}
inline void Course::_internal_set_display_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* Course::_internal_mutable_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* Course::release_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.Course.display_name)
  return _impl_.display_name_.Release();
}
inline void Course::set_allocated_display_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.Course.display_name)
}

// int32 meetings_count = 2;
inline void Course::clear_meetings_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.meetings_count_ = 0;
}
inline ::int32_t Course::meetings_count() const {
  // @@protoc_insertion_point(field_get:operations_research.Course.meetings_count)
  return _internal_meetings_count();
}
inline void Course::set_meetings_count(::int32_t value) {
  _internal_set_meetings_count(value);
  // @@protoc_insertion_point(field_set:operations_research.Course.meetings_count)
}
inline ::int32_t Course::_internal_meetings_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.meetings_count_;
}
inline void Course::_internal_set_meetings_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.meetings_count_ = value;
}

// int32 max_capacity = 3;
inline void Course::clear_max_capacity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_capacity_ = 0;
}
inline ::int32_t Course::max_capacity() const {
  // @@protoc_insertion_point(field_get:operations_research.Course.max_capacity)
  return _internal_max_capacity();
}
inline void Course::set_max_capacity(::int32_t value) {
  _internal_set_max_capacity(value);
  // @@protoc_insertion_point(field_set:operations_research.Course.max_capacity)
}
inline ::int32_t Course::_internal_max_capacity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_capacity_;
}
inline void Course::_internal_set_max_capacity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_capacity_ = value;
}

// int32 min_capacity = 4;
inline void Course::clear_min_capacity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_capacity_ = 0;
}
inline ::int32_t Course::min_capacity() const {
  // @@protoc_insertion_point(field_get:operations_research.Course.min_capacity)
  return _internal_min_capacity();
}
inline void Course::set_min_capacity(::int32_t value) {
  _internal_set_min_capacity(value);
  // @@protoc_insertion_point(field_set:operations_research.Course.min_capacity)
}
inline ::int32_t Course::_internal_min_capacity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_capacity_;
}
inline void Course::_internal_set_min_capacity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_capacity_ = value;
}

// int32 consecutive_slots_count = 5;
inline void Course::clear_consecutive_slots_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.consecutive_slots_count_ = 0;
}
inline ::int32_t Course::consecutive_slots_count() const {
  // @@protoc_insertion_point(field_get:operations_research.Course.consecutive_slots_count)
  return _internal_consecutive_slots_count();
}
inline void Course::set_consecutive_slots_count(::int32_t value) {
  _internal_set_consecutive_slots_count(value);
  // @@protoc_insertion_point(field_set:operations_research.Course.consecutive_slots_count)
}
inline ::int32_t Course::_internal_consecutive_slots_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.consecutive_slots_count_;
}
inline void Course::_internal_set_consecutive_slots_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.consecutive_slots_count_ = value;
}

// repeated int32 teacher_indices = 6;
inline int Course::_internal_teacher_indices_size() const {
  return _internal_teacher_indices().size();
}
inline int Course::teacher_indices_size() const {
  return _internal_teacher_indices_size();
}
inline void Course::clear_teacher_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.teacher_indices_.Clear();
}
inline ::int32_t Course::teacher_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.Course.teacher_indices)
  return _internal_teacher_indices().Get(index);
}
inline void Course::set_teacher_indices(int index, ::int32_t value) {
  _internal_mutable_teacher_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.Course.teacher_indices)
}
inline void Course::add_teacher_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_teacher_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.Course.teacher_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::teacher_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.Course.teacher_indices)
  return _internal_teacher_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::mutable_teacher_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.Course.teacher_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_teacher_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::_internal_teacher_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.teacher_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::_internal_mutable_teacher_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.teacher_indices_;
}

// repeated int32 teacher_section_counts = 7;
inline int Course::_internal_teacher_section_counts_size() const {
  return _internal_teacher_section_counts().size();
}
inline int Course::teacher_section_counts_size() const {
  return _internal_teacher_section_counts_size();
}
inline void Course::clear_teacher_section_counts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.teacher_section_counts_.Clear();
}
inline ::int32_t Course::teacher_section_counts(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.Course.teacher_section_counts)
  return _internal_teacher_section_counts().Get(index);
}
inline void Course::set_teacher_section_counts(int index, ::int32_t value) {
  _internal_mutable_teacher_section_counts()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.Course.teacher_section_counts)
}
inline void Course::add_teacher_section_counts(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_teacher_section_counts()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.Course.teacher_section_counts)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::teacher_section_counts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.Course.teacher_section_counts)
  return _internal_teacher_section_counts();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::mutable_teacher_section_counts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.Course.teacher_section_counts)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_teacher_section_counts();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::_internal_teacher_section_counts()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.teacher_section_counts_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::_internal_mutable_teacher_section_counts() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.teacher_section_counts_;
}

// repeated int32 room_indices = 8;
inline int Course::_internal_room_indices_size() const {
  return _internal_room_indices().size();
}
inline int Course::room_indices_size() const {
  return _internal_room_indices_size();
}
inline void Course::clear_room_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.room_indices_.Clear();
}
inline ::int32_t Course::room_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.Course.room_indices)
  return _internal_room_indices().Get(index);
}
inline void Course::set_room_indices(int index, ::int32_t value) {
  _internal_mutable_room_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.Course.room_indices)
}
inline void Course::add_room_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_room_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.Course.room_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::room_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.Course.room_indices)
  return _internal_room_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::mutable_room_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.Course.room_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_room_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Course::_internal_room_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.room_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Course::_internal_mutable_room_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.room_indices_;
}

// -------------------------------------------------------------------

// Teacher

// string display_name = 1;
inline void Teacher::clear_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& Teacher::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.Teacher.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Teacher::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.Teacher.display_name)
}
inline std::string* Teacher::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:operations_research.Teacher.display_name)
  return _s;
}
inline const std::string& Teacher::_internal_display_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.display_name_.Get();
}
inline void Teacher::_internal_set_display_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* Teacher::_internal_mutable_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* Teacher::release_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.Teacher.display_name)
  return _impl_.display_name_.Release();
}
inline void Teacher::set_allocated_display_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.Teacher.display_name)
}

// repeated int32 restricted_time_slots = 2;
inline int Teacher::_internal_restricted_time_slots_size() const {
  return _internal_restricted_time_slots().size();
}
inline int Teacher::restricted_time_slots_size() const {
  return _internal_restricted_time_slots_size();
}
inline void Teacher::clear_restricted_time_slots() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.restricted_time_slots_.Clear();
}
inline ::int32_t Teacher::restricted_time_slots(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.Teacher.restricted_time_slots)
  return _internal_restricted_time_slots().Get(index);
}
inline void Teacher::set_restricted_time_slots(int index, ::int32_t value) {
  _internal_mutable_restricted_time_slots()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.Teacher.restricted_time_slots)
}
inline void Teacher::add_restricted_time_slots(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_restricted_time_slots()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.Teacher.restricted_time_slots)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Teacher::restricted_time_slots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.Teacher.restricted_time_slots)
  return _internal_restricted_time_slots();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Teacher::mutable_restricted_time_slots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.Teacher.restricted_time_slots)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_restricted_time_slots();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Teacher::_internal_restricted_time_slots()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.restricted_time_slots_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Teacher::_internal_mutable_restricted_time_slots() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.restricted_time_slots_;
}

// -------------------------------------------------------------------

// Student

// string display_name = 1;
inline void Student::clear_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& Student::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.Student.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Student::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.Student.display_name)
}
inline std::string* Student::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:operations_research.Student.display_name)
  return _s;
}
inline const std::string& Student::_internal_display_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.display_name_.Get();
}
inline void Student::_internal_set_display_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* Student::_internal_mutable_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* Student::release_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.Student.display_name)
  return _impl_.display_name_.Release();
}
inline void Student::set_allocated_display_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.Student.display_name)
}

// repeated int32 course_indices = 2;
inline int Student::_internal_course_indices_size() const {
  return _internal_course_indices().size();
}
inline int Student::course_indices_size() const {
  return _internal_course_indices_size();
}
inline void Student::clear_course_indices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.course_indices_.Clear();
}
inline ::int32_t Student::course_indices(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.Student.course_indices)
  return _internal_course_indices().Get(index);
}
inline void Student::set_course_indices(int index, ::int32_t value) {
  _internal_mutable_course_indices()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.Student.course_indices)
}
inline void Student::add_course_indices(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_course_indices()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.Student.course_indices)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Student::course_indices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.Student.course_indices)
  return _internal_course_indices();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Student::mutable_course_indices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.Student.course_indices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_course_indices();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Student::_internal_course_indices()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.course_indices_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Student::_internal_mutable_course_indices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.course_indices_;
}

// -------------------------------------------------------------------

// Room

// string display_name = 1;
inline void Room::clear_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.ClearToEmpty();
}
inline const std::string& Room::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.Room.display_name)
  return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Room::set_display_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.Room.display_name)
}
inline std::string* Room::mutable_display_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_display_name();
  // @@protoc_insertion_point(field_mutable:operations_research.Room.display_name)
  return _s;
}
inline const std::string& Room::_internal_display_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.display_name_.Get();
}
inline void Room::_internal_set_display_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.display_name_.Set(value, GetArena());
}
inline std::string* Room::_internal_mutable_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.display_name_.Mutable( GetArena());
}
inline std::string* Room::release_display_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.Room.display_name)
  return _impl_.display_name_.Release();
}
inline void Room::set_allocated_display_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.display_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.display_name_.IsDefault()) {
          _impl_.display_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.Room.display_name)
}

// int32 capacity = 2;
inline void Room::clear_capacity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.capacity_ = 0;
}
inline ::int32_t Room::capacity() const {
  // @@protoc_insertion_point(field_get:operations_research.Room.capacity)
  return _internal_capacity();
}
inline void Room::set_capacity(::int32_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:operations_research.Room.capacity)
}
inline ::int32_t Room::_internal_capacity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.capacity_;
}
inline void Room::_internal_set_capacity(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.capacity_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace operations_research


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::operations_research::CourseSchedulingResultStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::operations_research::CourseSchedulingResultStatus>() {
  return ::operations_research::CourseSchedulingResultStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fscheduling_2fcourse_5fscheduling_2eproto_2epb_2eh
