// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/sparse_containers.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
namespace operations_research {
namespace math_opt {
class LinearExpressionProto;
struct LinearExpressionProtoDefaultTypeInternal;
extern LinearExpressionProtoDefaultTypeInternal _LinearExpressionProto_default_instance_;
class SparseBoolVectorProto;
struct SparseBoolVectorProtoDefaultTypeInternal;
extern SparseBoolVectorProtoDefaultTypeInternal _SparseBoolVectorProto_default_instance_;
class SparseDoubleMatrixProto;
struct SparseDoubleMatrixProtoDefaultTypeInternal;
extern SparseDoubleMatrixProtoDefaultTypeInternal _SparseDoubleMatrixProto_default_instance_;
class SparseDoubleVectorProto;
struct SparseDoubleVectorProtoDefaultTypeInternal;
extern SparseDoubleVectorProtoDefaultTypeInternal _SparseDoubleVectorProto_default_instance_;
class SparseInt32VectorProto;
struct SparseInt32VectorProtoDefaultTypeInternal;
extern SparseInt32VectorProtoDefaultTypeInternal _SparseInt32VectorProto_default_instance_;
class SparseVectorFilterProto;
struct SparseVectorFilterProtoDefaultTypeInternal;
extern SparseVectorFilterProtoDefaultTypeInternal _SparseVectorFilterProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace math_opt {

// ===================================================================


// -------------------------------------------------------------------

class SparseVectorFilterProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SparseVectorFilterProto) */ {
 public:
  inline SparseVectorFilterProto() : SparseVectorFilterProto(nullptr) {}
  ~SparseVectorFilterProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SparseVectorFilterProto(::google::protobuf::internal::ConstantInitialized);

  inline SparseVectorFilterProto(const SparseVectorFilterProto& from)
      : SparseVectorFilterProto(nullptr, from) {}
  SparseVectorFilterProto(SparseVectorFilterProto&& from) noexcept
    : SparseVectorFilterProto() {
    *this = ::std::move(from);
  }

  inline SparseVectorFilterProto& operator=(const SparseVectorFilterProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseVectorFilterProto& operator=(SparseVectorFilterProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseVectorFilterProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseVectorFilterProto* internal_default_instance() {
    return reinterpret_cast<const SparseVectorFilterProto*>(
               &_SparseVectorFilterProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SparseVectorFilterProto& a, SparseVectorFilterProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SparseVectorFilterProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseVectorFilterProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseVectorFilterProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SparseVectorFilterProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseVectorFilterProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SparseVectorFilterProto& from) {
    SparseVectorFilterProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseVectorFilterProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SparseVectorFilterProto";
  }
  protected:
  explicit SparseVectorFilterProto(::google::protobuf::Arena* arena);
  SparseVectorFilterProto(::google::protobuf::Arena* arena, const SparseVectorFilterProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilteredIdsFieldNumber = 3,
    kSkipZeroValuesFieldNumber = 1,
    kFilterByIdsFieldNumber = 2,
  };
  // repeated int64 filtered_ids = 3;
  int filtered_ids_size() const;
  private:
  int _internal_filtered_ids_size() const;

  public:
  void clear_filtered_ids() ;
  ::int64_t filtered_ids(int index) const;
  void set_filtered_ids(int index, ::int64_t value);
  void add_filtered_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& filtered_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_filtered_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_filtered_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_filtered_ids();

  public:
  // bool skip_zero_values = 1;
  void clear_skip_zero_values() ;
  bool skip_zero_values() const;
  void set_skip_zero_values(bool value);

  private:
  bool _internal_skip_zero_values() const;
  void _internal_set_skip_zero_values(bool value);

  public:
  // bool filter_by_ids = 2;
  void clear_filter_by_ids() ;
  bool filter_by_ids() const;
  void set_filter_by_ids(bool value);

  private:
  bool _internal_filter_by_ids() const;
  void _internal_set_filter_by_ids(bool value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SparseVectorFilterProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> filtered_ids_;
    mutable ::google::protobuf::internal::CachedSize _filtered_ids_cached_byte_size_;
    bool skip_zero_values_;
    bool filter_by_ids_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};// -------------------------------------------------------------------

class SparseInt32VectorProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SparseInt32VectorProto) */ {
 public:
  inline SparseInt32VectorProto() : SparseInt32VectorProto(nullptr) {}
  ~SparseInt32VectorProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SparseInt32VectorProto(::google::protobuf::internal::ConstantInitialized);

  inline SparseInt32VectorProto(const SparseInt32VectorProto& from)
      : SparseInt32VectorProto(nullptr, from) {}
  SparseInt32VectorProto(SparseInt32VectorProto&& from) noexcept
    : SparseInt32VectorProto() {
    *this = ::std::move(from);
  }

  inline SparseInt32VectorProto& operator=(const SparseInt32VectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseInt32VectorProto& operator=(SparseInt32VectorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseInt32VectorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseInt32VectorProto* internal_default_instance() {
    return reinterpret_cast<const SparseInt32VectorProto*>(
               &_SparseInt32VectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SparseInt32VectorProto& a, SparseInt32VectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SparseInt32VectorProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseInt32VectorProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseInt32VectorProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SparseInt32VectorProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseInt32VectorProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SparseInt32VectorProto& from) {
    SparseInt32VectorProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseInt32VectorProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SparseInt32VectorProto";
  }
  protected:
  explicit SparseInt32VectorProto(::google::protobuf::Arena* arena);
  SparseInt32VectorProto(::google::protobuf::Arena* arena, const SparseInt32VectorProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kValuesFieldNumber = 2,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated int32 values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::int32_t values(int index) const;
  void set_values(int index, ::int32_t value);
  void add_values(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& values() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SparseInt32VectorProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};// -------------------------------------------------------------------

class SparseDoubleVectorProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SparseDoubleVectorProto) */ {
 public:
  inline SparseDoubleVectorProto() : SparseDoubleVectorProto(nullptr) {}
  ~SparseDoubleVectorProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SparseDoubleVectorProto(::google::protobuf::internal::ConstantInitialized);

  inline SparseDoubleVectorProto(const SparseDoubleVectorProto& from)
      : SparseDoubleVectorProto(nullptr, from) {}
  SparseDoubleVectorProto(SparseDoubleVectorProto&& from) noexcept
    : SparseDoubleVectorProto() {
    *this = ::std::move(from);
  }

  inline SparseDoubleVectorProto& operator=(const SparseDoubleVectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseDoubleVectorProto& operator=(SparseDoubleVectorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseDoubleVectorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseDoubleVectorProto* internal_default_instance() {
    return reinterpret_cast<const SparseDoubleVectorProto*>(
               &_SparseDoubleVectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SparseDoubleVectorProto& a, SparseDoubleVectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SparseDoubleVectorProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseDoubleVectorProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseDoubleVectorProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SparseDoubleVectorProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseDoubleVectorProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SparseDoubleVectorProto& from) {
    SparseDoubleVectorProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseDoubleVectorProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SparseDoubleVectorProto";
  }
  protected:
  explicit SparseDoubleVectorProto(::google::protobuf::Arena* arena);
  SparseDoubleVectorProto(::google::protobuf::Arena* arena, const SparseDoubleVectorProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kValuesFieldNumber = 2,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated double values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField<double>& values() const;
  ::google::protobuf::RepeatedField<double>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_values() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SparseDoubleVectorProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};// -------------------------------------------------------------------

class SparseDoubleMatrixProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SparseDoubleMatrixProto) */ {
 public:
  inline SparseDoubleMatrixProto() : SparseDoubleMatrixProto(nullptr) {}
  ~SparseDoubleMatrixProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SparseDoubleMatrixProto(::google::protobuf::internal::ConstantInitialized);

  inline SparseDoubleMatrixProto(const SparseDoubleMatrixProto& from)
      : SparseDoubleMatrixProto(nullptr, from) {}
  SparseDoubleMatrixProto(SparseDoubleMatrixProto&& from) noexcept
    : SparseDoubleMatrixProto() {
    *this = ::std::move(from);
  }

  inline SparseDoubleMatrixProto& operator=(const SparseDoubleMatrixProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseDoubleMatrixProto& operator=(SparseDoubleMatrixProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseDoubleMatrixProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseDoubleMatrixProto* internal_default_instance() {
    return reinterpret_cast<const SparseDoubleMatrixProto*>(
               &_SparseDoubleMatrixProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SparseDoubleMatrixProto& a, SparseDoubleMatrixProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SparseDoubleMatrixProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseDoubleMatrixProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseDoubleMatrixProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SparseDoubleMatrixProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseDoubleMatrixProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SparseDoubleMatrixProto& from) {
    SparseDoubleMatrixProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseDoubleMatrixProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SparseDoubleMatrixProto";
  }
  protected:
  explicit SparseDoubleMatrixProto(::google::protobuf::Arena* arena);
  SparseDoubleMatrixProto(::google::protobuf::Arena* arena, const SparseDoubleMatrixProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRowIdsFieldNumber = 1,
    kColumnIdsFieldNumber = 2,
    kCoefficientsFieldNumber = 3,
  };
  // repeated int64 row_ids = 1;
  int row_ids_size() const;
  private:
  int _internal_row_ids_size() const;

  public:
  void clear_row_ids() ;
  ::int64_t row_ids(int index) const;
  void set_row_ids(int index, ::int64_t value);
  void add_row_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& row_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_row_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_row_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_row_ids();

  public:
  // repeated int64 column_ids = 2;
  int column_ids_size() const;
  private:
  int _internal_column_ids_size() const;

  public:
  void clear_column_ids() ;
  ::int64_t column_ids(int index) const;
  void set_column_ids(int index, ::int64_t value);
  void add_column_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& column_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_column_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_column_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_column_ids();

  public:
  // repeated double coefficients = 3;
  int coefficients_size() const;
  private:
  int _internal_coefficients_size() const;

  public:
  void clear_coefficients() ;
  double coefficients(int index) const;
  void set_coefficients(int index, double value);
  void add_coefficients(double value);
  const ::google::protobuf::RepeatedField<double>& coefficients() const;
  ::google::protobuf::RepeatedField<double>* mutable_coefficients();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_coefficients() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_coefficients();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SparseDoubleMatrixProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> row_ids_;
    mutable ::google::protobuf::internal::CachedSize _row_ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> column_ids_;
    mutable ::google::protobuf::internal::CachedSize _column_ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> coefficients_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};// -------------------------------------------------------------------

class SparseBoolVectorProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SparseBoolVectorProto) */ {
 public:
  inline SparseBoolVectorProto() : SparseBoolVectorProto(nullptr) {}
  ~SparseBoolVectorProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SparseBoolVectorProto(::google::protobuf::internal::ConstantInitialized);

  inline SparseBoolVectorProto(const SparseBoolVectorProto& from)
      : SparseBoolVectorProto(nullptr, from) {}
  SparseBoolVectorProto(SparseBoolVectorProto&& from) noexcept
    : SparseBoolVectorProto() {
    *this = ::std::move(from);
  }

  inline SparseBoolVectorProto& operator=(const SparseBoolVectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SparseBoolVectorProto& operator=(SparseBoolVectorProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SparseBoolVectorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SparseBoolVectorProto* internal_default_instance() {
    return reinterpret_cast<const SparseBoolVectorProto*>(
               &_SparseBoolVectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SparseBoolVectorProto& a, SparseBoolVectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SparseBoolVectorProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SparseBoolVectorProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SparseBoolVectorProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SparseBoolVectorProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SparseBoolVectorProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SparseBoolVectorProto& from) {
    SparseBoolVectorProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SparseBoolVectorProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SparseBoolVectorProto";
  }
  protected:
  explicit SparseBoolVectorProto(::google::protobuf::Arena* arena);
  SparseBoolVectorProto(::google::protobuf::Arena* arena, const SparseBoolVectorProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kValuesFieldNumber = 2,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated bool values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField<bool>& values() const;
  ::google::protobuf::RepeatedField<bool>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_values() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SparseBoolVectorProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<bool> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};// -------------------------------------------------------------------

class LinearExpressionProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.LinearExpressionProto) */ {
 public:
  inline LinearExpressionProto() : LinearExpressionProto(nullptr) {}
  ~LinearExpressionProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LinearExpressionProto(::google::protobuf::internal::ConstantInitialized);

  inline LinearExpressionProto(const LinearExpressionProto& from)
      : LinearExpressionProto(nullptr, from) {}
  LinearExpressionProto(LinearExpressionProto&& from) noexcept
    : LinearExpressionProto() {
    *this = ::std::move(from);
  }

  inline LinearExpressionProto& operator=(const LinearExpressionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearExpressionProto& operator=(LinearExpressionProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearExpressionProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearExpressionProto* internal_default_instance() {
    return reinterpret_cast<const LinearExpressionProto*>(
               &_LinearExpressionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LinearExpressionProto& a, LinearExpressionProto& b) {
    a.Swap(&b);
  }
  inline void Swap(LinearExpressionProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearExpressionProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearExpressionProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LinearExpressionProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearExpressionProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LinearExpressionProto& from) {
    LinearExpressionProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LinearExpressionProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.LinearExpressionProto";
  }
  protected:
  explicit LinearExpressionProto(::google::protobuf::Arena* arena);
  LinearExpressionProto(::google::protobuf::Arena* arena, const LinearExpressionProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kCoefficientsFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated double coefficients = 2;
  int coefficients_size() const;
  private:
  int _internal_coefficients_size() const;

  public:
  void clear_coefficients() ;
  double coefficients(int index) const;
  void set_coefficients(int index, double value);
  void add_coefficients(double value);
  const ::google::protobuf::RepeatedField<double>& coefficients() const;
  ::google::protobuf::RepeatedField<double>* mutable_coefficients();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_coefficients() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_coefficients();

  public:
  // double offset = 3;
  void clear_offset() ;
  double offset() const;
  void set_offset(double value);

  private:
  double _internal_offset() const;
  void _internal_set_offset(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.LinearExpressionProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> coefficients_;
    double offset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SparseDoubleVectorProto

// repeated int64 ids = 1;
inline int SparseDoubleVectorProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int SparseDoubleVectorProto::ids_size() const {
  return _internal_ids_size();
}
inline void SparseDoubleVectorProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t SparseDoubleVectorProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseDoubleVectorProto.ids)
  return _internal_ids().Get(index);
}
inline void SparseDoubleVectorProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseDoubleVectorProto.ids)
}
inline void SparseDoubleVectorProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseDoubleVectorProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleVectorProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseDoubleVectorProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleVectorProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseDoubleVectorProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleVectorProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleVectorProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated double values = 2;
inline int SparseDoubleVectorProto::_internal_values_size() const {
  return _internal_values().size();
}
inline int SparseDoubleVectorProto::values_size() const {
  return _internal_values_size();
}
inline void SparseDoubleVectorProto::clear_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.values_.Clear();
}
inline double SparseDoubleVectorProto::values(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseDoubleVectorProto.values)
  return _internal_values().Get(index);
}
inline void SparseDoubleVectorProto::set_values(int index, double value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseDoubleVectorProto.values)
}
inline void SparseDoubleVectorProto::add_values(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseDoubleVectorProto.values)
}
inline const ::google::protobuf::RepeatedField<double>& SparseDoubleVectorProto::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseDoubleVectorProto.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<double>* SparseDoubleVectorProto::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseDoubleVectorProto.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<double>& SparseDoubleVectorProto::_internal_values()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<double>* SparseDoubleVectorProto::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// SparseBoolVectorProto

// repeated int64 ids = 1;
inline int SparseBoolVectorProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int SparseBoolVectorProto::ids_size() const {
  return _internal_ids_size();
}
inline void SparseBoolVectorProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t SparseBoolVectorProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseBoolVectorProto.ids)
  return _internal_ids().Get(index);
}
inline void SparseBoolVectorProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseBoolVectorProto.ids)
}
inline void SparseBoolVectorProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseBoolVectorProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseBoolVectorProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseBoolVectorProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseBoolVectorProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseBoolVectorProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseBoolVectorProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseBoolVectorProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated bool values = 2;
inline int SparseBoolVectorProto::_internal_values_size() const {
  return _internal_values().size();
}
inline int SparseBoolVectorProto::values_size() const {
  return _internal_values_size();
}
inline void SparseBoolVectorProto::clear_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.values_.Clear();
}
inline bool SparseBoolVectorProto::values(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseBoolVectorProto.values)
  return _internal_values().Get(index);
}
inline void SparseBoolVectorProto::set_values(int index, bool value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseBoolVectorProto.values)
}
inline void SparseBoolVectorProto::add_values(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseBoolVectorProto.values)
}
inline const ::google::protobuf::RepeatedField<bool>& SparseBoolVectorProto::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseBoolVectorProto.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<bool>* SparseBoolVectorProto::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseBoolVectorProto.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<bool>& SparseBoolVectorProto::_internal_values()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<bool>* SparseBoolVectorProto::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// SparseInt32VectorProto

// repeated int64 ids = 1;
inline int SparseInt32VectorProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int SparseInt32VectorProto::ids_size() const {
  return _internal_ids_size();
}
inline void SparseInt32VectorProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t SparseInt32VectorProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseInt32VectorProto.ids)
  return _internal_ids().Get(index);
}
inline void SparseInt32VectorProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseInt32VectorProto.ids)
}
inline void SparseInt32VectorProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseInt32VectorProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseInt32VectorProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseInt32VectorProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseInt32VectorProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseInt32VectorProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseInt32VectorProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseInt32VectorProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated int32 values = 2;
inline int SparseInt32VectorProto::_internal_values_size() const {
  return _internal_values().size();
}
inline int SparseInt32VectorProto::values_size() const {
  return _internal_values_size();
}
inline void SparseInt32VectorProto::clear_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.values_.Clear();
}
inline ::int32_t SparseInt32VectorProto::values(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseInt32VectorProto.values)
  return _internal_values().Get(index);
}
inline void SparseInt32VectorProto::set_values(int index, ::int32_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseInt32VectorProto.values)
}
inline void SparseInt32VectorProto::add_values(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseInt32VectorProto.values)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& SparseInt32VectorProto::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseInt32VectorProto.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::int32_t>* SparseInt32VectorProto::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseInt32VectorProto.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& SparseInt32VectorProto::_internal_values()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* SparseInt32VectorProto::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// SparseVectorFilterProto

// bool skip_zero_values = 1;
inline void SparseVectorFilterProto::clear_skip_zero_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skip_zero_values_ = false;
}
inline bool SparseVectorFilterProto::skip_zero_values() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseVectorFilterProto.skip_zero_values)
  return _internal_skip_zero_values();
}
inline void SparseVectorFilterProto::set_skip_zero_values(bool value) {
  _internal_set_skip_zero_values(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseVectorFilterProto.skip_zero_values)
}
inline bool SparseVectorFilterProto::_internal_skip_zero_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skip_zero_values_;
}
inline void SparseVectorFilterProto::_internal_set_skip_zero_values(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skip_zero_values_ = value;
}

// bool filter_by_ids = 2;
inline void SparseVectorFilterProto::clear_filter_by_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filter_by_ids_ = false;
}
inline bool SparseVectorFilterProto::filter_by_ids() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseVectorFilterProto.filter_by_ids)
  return _internal_filter_by_ids();
}
inline void SparseVectorFilterProto::set_filter_by_ids(bool value) {
  _internal_set_filter_by_ids(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseVectorFilterProto.filter_by_ids)
}
inline bool SparseVectorFilterProto::_internal_filter_by_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filter_by_ids_;
}
inline void SparseVectorFilterProto::_internal_set_filter_by_ids(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filter_by_ids_ = value;
}

// repeated int64 filtered_ids = 3;
inline int SparseVectorFilterProto::_internal_filtered_ids_size() const {
  return _internal_filtered_ids().size();
}
inline int SparseVectorFilterProto::filtered_ids_size() const {
  return _internal_filtered_ids_size();
}
inline void SparseVectorFilterProto::clear_filtered_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filtered_ids_.Clear();
}
inline ::int64_t SparseVectorFilterProto::filtered_ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseVectorFilterProto.filtered_ids)
  return _internal_filtered_ids().Get(index);
}
inline void SparseVectorFilterProto::set_filtered_ids(int index, ::int64_t value) {
  _internal_mutable_filtered_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseVectorFilterProto.filtered_ids)
}
inline void SparseVectorFilterProto::add_filtered_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_filtered_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseVectorFilterProto.filtered_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseVectorFilterProto::filtered_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseVectorFilterProto.filtered_ids)
  return _internal_filtered_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseVectorFilterProto::mutable_filtered_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseVectorFilterProto.filtered_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_filtered_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseVectorFilterProto::_internal_filtered_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filtered_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseVectorFilterProto::_internal_mutable_filtered_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.filtered_ids_;
}

// -------------------------------------------------------------------

// SparseDoubleMatrixProto

// repeated int64 row_ids = 1;
inline int SparseDoubleMatrixProto::_internal_row_ids_size() const {
  return _internal_row_ids().size();
}
inline int SparseDoubleMatrixProto::row_ids_size() const {
  return _internal_row_ids_size();
}
inline void SparseDoubleMatrixProto::clear_row_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.row_ids_.Clear();
}
inline ::int64_t SparseDoubleMatrixProto::row_ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseDoubleMatrixProto.row_ids)
  return _internal_row_ids().Get(index);
}
inline void SparseDoubleMatrixProto::set_row_ids(int index, ::int64_t value) {
  _internal_mutable_row_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseDoubleMatrixProto.row_ids)
}
inline void SparseDoubleMatrixProto::add_row_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_row_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseDoubleMatrixProto.row_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleMatrixProto::row_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseDoubleMatrixProto.row_ids)
  return _internal_row_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleMatrixProto::mutable_row_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseDoubleMatrixProto.row_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_row_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleMatrixProto::_internal_row_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.row_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleMatrixProto::_internal_mutable_row_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.row_ids_;
}

// repeated int64 column_ids = 2;
inline int SparseDoubleMatrixProto::_internal_column_ids_size() const {
  return _internal_column_ids().size();
}
inline int SparseDoubleMatrixProto::column_ids_size() const {
  return _internal_column_ids_size();
}
inline void SparseDoubleMatrixProto::clear_column_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.column_ids_.Clear();
}
inline ::int64_t SparseDoubleMatrixProto::column_ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseDoubleMatrixProto.column_ids)
  return _internal_column_ids().Get(index);
}
inline void SparseDoubleMatrixProto::set_column_ids(int index, ::int64_t value) {
  _internal_mutable_column_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseDoubleMatrixProto.column_ids)
}
inline void SparseDoubleMatrixProto::add_column_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_column_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseDoubleMatrixProto.column_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleMatrixProto::column_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseDoubleMatrixProto.column_ids)
  return _internal_column_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleMatrixProto::mutable_column_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseDoubleMatrixProto.column_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_column_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& SparseDoubleMatrixProto::_internal_column_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.column_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* SparseDoubleMatrixProto::_internal_mutable_column_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.column_ids_;
}

// repeated double coefficients = 3;
inline int SparseDoubleMatrixProto::_internal_coefficients_size() const {
  return _internal_coefficients().size();
}
inline int SparseDoubleMatrixProto::coefficients_size() const {
  return _internal_coefficients_size();
}
inline void SparseDoubleMatrixProto::clear_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.coefficients_.Clear();
}
inline double SparseDoubleMatrixProto::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SparseDoubleMatrixProto.coefficients)
  return _internal_coefficients().Get(index);
}
inline void SparseDoubleMatrixProto::set_coefficients(int index, double value) {
  _internal_mutable_coefficients()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SparseDoubleMatrixProto.coefficients)
}
inline void SparseDoubleMatrixProto::add_coefficients(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_coefficients()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SparseDoubleMatrixProto.coefficients)
}
inline const ::google::protobuf::RepeatedField<double>& SparseDoubleMatrixProto::coefficients() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SparseDoubleMatrixProto.coefficients)
  return _internal_coefficients();
}
inline ::google::protobuf::RepeatedField<double>* SparseDoubleMatrixProto::mutable_coefficients()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SparseDoubleMatrixProto.coefficients)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_coefficients();
}
inline const ::google::protobuf::RepeatedField<double>& SparseDoubleMatrixProto::_internal_coefficients()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.coefficients_;
}
inline ::google::protobuf::RepeatedField<double>* SparseDoubleMatrixProto::_internal_mutable_coefficients() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.coefficients_;
}

// -------------------------------------------------------------------

// LinearExpressionProto

// repeated int64 ids = 1;
inline int LinearExpressionProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int LinearExpressionProto::ids_size() const {
  return _internal_ids_size();
}
inline void LinearExpressionProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t LinearExpressionProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearExpressionProto.ids)
  return _internal_ids().Get(index);
}
inline void LinearExpressionProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearExpressionProto.ids)
}
inline void LinearExpressionProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearExpressionProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& LinearExpressionProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearExpressionProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* LinearExpressionProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearExpressionProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& LinearExpressionProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* LinearExpressionProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated double coefficients = 2;
inline int LinearExpressionProto::_internal_coefficients_size() const {
  return _internal_coefficients().size();
}
inline int LinearExpressionProto::coefficients_size() const {
  return _internal_coefficients_size();
}
inline void LinearExpressionProto::clear_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.coefficients_.Clear();
}
inline double LinearExpressionProto::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearExpressionProto.coefficients)
  return _internal_coefficients().Get(index);
}
inline void LinearExpressionProto::set_coefficients(int index, double value) {
  _internal_mutable_coefficients()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearExpressionProto.coefficients)
}
inline void LinearExpressionProto::add_coefficients(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_coefficients()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearExpressionProto.coefficients)
}
inline const ::google::protobuf::RepeatedField<double>& LinearExpressionProto::coefficients() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearExpressionProto.coefficients)
  return _internal_coefficients();
}
inline ::google::protobuf::RepeatedField<double>* LinearExpressionProto::mutable_coefficients()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearExpressionProto.coefficients)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_coefficients();
}
inline const ::google::protobuf::RepeatedField<double>& LinearExpressionProto::_internal_coefficients()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.coefficients_;
}
inline ::google::protobuf::RepeatedField<double>* LinearExpressionProto::_internal_mutable_coefficients() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.coefficients_;
}

// double offset = 3;
inline void LinearExpressionProto::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = 0;
}
inline double LinearExpressionProto::offset() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearExpressionProto.offset)
  return _internal_offset();
}
inline void LinearExpressionProto::set_offset(double value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearExpressionProto.offset)
}
inline double LinearExpressionProto::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void LinearExpressionProto::_internal_set_offset(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fsparse_5fcontainers_2eproto_2epb_2eh
