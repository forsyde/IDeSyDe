// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/packing/multiple_dimensions_bin_packing.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto;
namespace operations_research {
namespace packing {
class MultipleDimensionsBinPackingItem;
struct MultipleDimensionsBinPackingItemDefaultTypeInternal;
extern MultipleDimensionsBinPackingItemDefaultTypeInternal _MultipleDimensionsBinPackingItem_default_instance_;
class MultipleDimensionsBinPackingProblem;
struct MultipleDimensionsBinPackingProblemDefaultTypeInternal;
extern MultipleDimensionsBinPackingProblemDefaultTypeInternal _MultipleDimensionsBinPackingProblem_default_instance_;
class MultipleDimensionsBinPackingShape;
struct MultipleDimensionsBinPackingShapeDefaultTypeInternal;
extern MultipleDimensionsBinPackingShapeDefaultTypeInternal _MultipleDimensionsBinPackingShape_default_instance_;
}  // namespace packing
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace packing {

// ===================================================================


// -------------------------------------------------------------------

class MultipleDimensionsBinPackingShape final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.packing.MultipleDimensionsBinPackingShape) */ {
 public:
  inline MultipleDimensionsBinPackingShape() : MultipleDimensionsBinPackingShape(nullptr) {}
  ~MultipleDimensionsBinPackingShape() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MultipleDimensionsBinPackingShape(::google::protobuf::internal::ConstantInitialized);

  inline MultipleDimensionsBinPackingShape(const MultipleDimensionsBinPackingShape& from)
      : MultipleDimensionsBinPackingShape(nullptr, from) {}
  MultipleDimensionsBinPackingShape(MultipleDimensionsBinPackingShape&& from) noexcept
    : MultipleDimensionsBinPackingShape() {
    *this = ::std::move(from);
  }

  inline MultipleDimensionsBinPackingShape& operator=(const MultipleDimensionsBinPackingShape& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultipleDimensionsBinPackingShape& operator=(MultipleDimensionsBinPackingShape&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultipleDimensionsBinPackingShape& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultipleDimensionsBinPackingShape* internal_default_instance() {
    return reinterpret_cast<const MultipleDimensionsBinPackingShape*>(
               &_MultipleDimensionsBinPackingShape_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MultipleDimensionsBinPackingShape& a, MultipleDimensionsBinPackingShape& b) {
    a.Swap(&b);
  }
  inline void Swap(MultipleDimensionsBinPackingShape* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultipleDimensionsBinPackingShape* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultipleDimensionsBinPackingShape* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MultipleDimensionsBinPackingShape>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultipleDimensionsBinPackingShape& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MultipleDimensionsBinPackingShape& from) {
    MultipleDimensionsBinPackingShape::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MultipleDimensionsBinPackingShape* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.packing.MultipleDimensionsBinPackingShape";
  }
  protected:
  explicit MultipleDimensionsBinPackingShape(::google::protobuf::Arena* arena);
  MultipleDimensionsBinPackingShape(::google::protobuf::Arena* arena, const MultipleDimensionsBinPackingShape& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionsFieldNumber = 1,
  };
  // repeated int64 dimensions = 1;
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;

  public:
  void clear_dimensions() ;
  ::int64_t dimensions(int index) const;
  void set_dimensions(int index, ::int64_t value);
  void add_dimensions(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& dimensions() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_dimensions();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_dimensions() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_dimensions();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.packing.MultipleDimensionsBinPackingShape)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> dimensions_;
    mutable ::google::protobuf::internal::CachedSize _dimensions_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto;
};// -------------------------------------------------------------------

class MultipleDimensionsBinPackingItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.packing.MultipleDimensionsBinPackingItem) */ {
 public:
  inline MultipleDimensionsBinPackingItem() : MultipleDimensionsBinPackingItem(nullptr) {}
  ~MultipleDimensionsBinPackingItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MultipleDimensionsBinPackingItem(::google::protobuf::internal::ConstantInitialized);

  inline MultipleDimensionsBinPackingItem(const MultipleDimensionsBinPackingItem& from)
      : MultipleDimensionsBinPackingItem(nullptr, from) {}
  MultipleDimensionsBinPackingItem(MultipleDimensionsBinPackingItem&& from) noexcept
    : MultipleDimensionsBinPackingItem() {
    *this = ::std::move(from);
  }

  inline MultipleDimensionsBinPackingItem& operator=(const MultipleDimensionsBinPackingItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultipleDimensionsBinPackingItem& operator=(MultipleDimensionsBinPackingItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultipleDimensionsBinPackingItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultipleDimensionsBinPackingItem* internal_default_instance() {
    return reinterpret_cast<const MultipleDimensionsBinPackingItem*>(
               &_MultipleDimensionsBinPackingItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MultipleDimensionsBinPackingItem& a, MultipleDimensionsBinPackingItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MultipleDimensionsBinPackingItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultipleDimensionsBinPackingItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultipleDimensionsBinPackingItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MultipleDimensionsBinPackingItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultipleDimensionsBinPackingItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MultipleDimensionsBinPackingItem& from) {
    MultipleDimensionsBinPackingItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MultipleDimensionsBinPackingItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.packing.MultipleDimensionsBinPackingItem";
  }
  protected:
  explicit MultipleDimensionsBinPackingItem(::google::protobuf::Arena* arena);
  MultipleDimensionsBinPackingItem(::google::protobuf::Arena* arena, const MultipleDimensionsBinPackingItem& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapesFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated .operations_research.packing.MultipleDimensionsBinPackingShape shapes = 1;
  int shapes_size() const;
  private:
  int _internal_shapes_size() const;

  public:
  void clear_shapes() ;
  ::operations_research::packing::MultipleDimensionsBinPackingShape* mutable_shapes(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingShape >*
      mutable_shapes();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>& _internal_shapes() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>* _internal_mutable_shapes();
  public:
  const ::operations_research::packing::MultipleDimensionsBinPackingShape& shapes(int index) const;
  ::operations_research::packing::MultipleDimensionsBinPackingShape* add_shapes();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingShape >&
      shapes() const;
  // int64 value = 2;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.packing.MultipleDimensionsBinPackingItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingShape > shapes_;
    ::int64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto;
};// -------------------------------------------------------------------

class MultipleDimensionsBinPackingProblem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.packing.MultipleDimensionsBinPackingProblem) */ {
 public:
  inline MultipleDimensionsBinPackingProblem() : MultipleDimensionsBinPackingProblem(nullptr) {}
  ~MultipleDimensionsBinPackingProblem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MultipleDimensionsBinPackingProblem(::google::protobuf::internal::ConstantInitialized);

  inline MultipleDimensionsBinPackingProblem(const MultipleDimensionsBinPackingProblem& from)
      : MultipleDimensionsBinPackingProblem(nullptr, from) {}
  MultipleDimensionsBinPackingProblem(MultipleDimensionsBinPackingProblem&& from) noexcept
    : MultipleDimensionsBinPackingProblem() {
    *this = ::std::move(from);
  }

  inline MultipleDimensionsBinPackingProblem& operator=(const MultipleDimensionsBinPackingProblem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultipleDimensionsBinPackingProblem& operator=(MultipleDimensionsBinPackingProblem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultipleDimensionsBinPackingProblem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultipleDimensionsBinPackingProblem* internal_default_instance() {
    return reinterpret_cast<const MultipleDimensionsBinPackingProblem*>(
               &_MultipleDimensionsBinPackingProblem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MultipleDimensionsBinPackingProblem& a, MultipleDimensionsBinPackingProblem& b) {
    a.Swap(&b);
  }
  inline void Swap(MultipleDimensionsBinPackingProblem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultipleDimensionsBinPackingProblem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultipleDimensionsBinPackingProblem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MultipleDimensionsBinPackingProblem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultipleDimensionsBinPackingProblem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MultipleDimensionsBinPackingProblem& from) {
    MultipleDimensionsBinPackingProblem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MultipleDimensionsBinPackingProblem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.packing.MultipleDimensionsBinPackingProblem";
  }
  protected:
  explicit MultipleDimensionsBinPackingProblem(::google::protobuf::Arena* arena);
  MultipleDimensionsBinPackingProblem(::google::protobuf::Arena* arena, const MultipleDimensionsBinPackingProblem& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kBoxShapeFieldNumber = 1,
  };
  // repeated .operations_research.packing.MultipleDimensionsBinPackingItem items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::operations_research::packing::MultipleDimensionsBinPackingItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingItem >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>* _internal_mutable_items();
  public:
  const ::operations_research::packing::MultipleDimensionsBinPackingItem& items(int index) const;
  ::operations_research::packing::MultipleDimensionsBinPackingItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingItem >&
      items() const;
  // .operations_research.packing.MultipleDimensionsBinPackingShape box_shape = 1;
  bool has_box_shape() const;
  void clear_box_shape() ;
  const ::operations_research::packing::MultipleDimensionsBinPackingShape& box_shape() const;
  PROTOBUF_NODISCARD ::operations_research::packing::MultipleDimensionsBinPackingShape* release_box_shape();
  ::operations_research::packing::MultipleDimensionsBinPackingShape* mutable_box_shape();
  void set_allocated_box_shape(::operations_research::packing::MultipleDimensionsBinPackingShape* value);
  void unsafe_arena_set_allocated_box_shape(::operations_research::packing::MultipleDimensionsBinPackingShape* value);
  ::operations_research::packing::MultipleDimensionsBinPackingShape* unsafe_arena_release_box_shape();

  private:
  const ::operations_research::packing::MultipleDimensionsBinPackingShape& _internal_box_shape() const;
  ::operations_research::packing::MultipleDimensionsBinPackingShape* _internal_mutable_box_shape();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.packing.MultipleDimensionsBinPackingProblem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::packing::MultipleDimensionsBinPackingItem > items_;
    ::operations_research::packing::MultipleDimensionsBinPackingShape* box_shape_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MultipleDimensionsBinPackingShape

// repeated int64 dimensions = 1;
inline int MultipleDimensionsBinPackingShape::_internal_dimensions_size() const {
  return _internal_dimensions().size();
}
inline int MultipleDimensionsBinPackingShape::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void MultipleDimensionsBinPackingShape::clear_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dimensions_.Clear();
}
inline ::int64_t MultipleDimensionsBinPackingShape::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.packing.MultipleDimensionsBinPackingShape.dimensions)
  return _internal_dimensions().Get(index);
}
inline void MultipleDimensionsBinPackingShape::set_dimensions(int index, ::int64_t value) {
  _internal_mutable_dimensions()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.packing.MultipleDimensionsBinPackingShape.dimensions)
}
inline void MultipleDimensionsBinPackingShape::add_dimensions(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dimensions()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.packing.MultipleDimensionsBinPackingShape.dimensions)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& MultipleDimensionsBinPackingShape::dimensions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.packing.MultipleDimensionsBinPackingShape.dimensions)
  return _internal_dimensions();
}
inline ::google::protobuf::RepeatedField<::int64_t>* MultipleDimensionsBinPackingShape::mutable_dimensions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.packing.MultipleDimensionsBinPackingShape.dimensions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dimensions();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& MultipleDimensionsBinPackingShape::_internal_dimensions()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dimensions_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* MultipleDimensionsBinPackingShape::_internal_mutable_dimensions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dimensions_;
}

// -------------------------------------------------------------------

// MultipleDimensionsBinPackingItem

// repeated .operations_research.packing.MultipleDimensionsBinPackingShape shapes = 1;
inline int MultipleDimensionsBinPackingItem::_internal_shapes_size() const {
  return _internal_shapes().size();
}
inline int MultipleDimensionsBinPackingItem::shapes_size() const {
  return _internal_shapes_size();
}
inline void MultipleDimensionsBinPackingItem::clear_shapes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.shapes_.Clear();
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingItem::mutable_shapes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.packing.MultipleDimensionsBinPackingItem.shapes)
  return _internal_mutable_shapes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>* MultipleDimensionsBinPackingItem::mutable_shapes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.packing.MultipleDimensionsBinPackingItem.shapes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_shapes();
}
inline const ::operations_research::packing::MultipleDimensionsBinPackingShape& MultipleDimensionsBinPackingItem::shapes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.packing.MultipleDimensionsBinPackingItem.shapes)
  return _internal_shapes().Get(index);
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingItem::add_shapes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::packing::MultipleDimensionsBinPackingShape* _add = _internal_mutable_shapes()->Add();
  // @@protoc_insertion_point(field_add:operations_research.packing.MultipleDimensionsBinPackingItem.shapes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>& MultipleDimensionsBinPackingItem::shapes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.packing.MultipleDimensionsBinPackingItem.shapes)
  return _internal_shapes();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>&
MultipleDimensionsBinPackingItem::_internal_shapes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.shapes_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingShape>*
MultipleDimensionsBinPackingItem::_internal_mutable_shapes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.shapes_;
}

// int64 value = 2;
inline void MultipleDimensionsBinPackingItem::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t MultipleDimensionsBinPackingItem::value() const {
  // @@protoc_insertion_point(field_get:operations_research.packing.MultipleDimensionsBinPackingItem.value)
  return _internal_value();
}
inline void MultipleDimensionsBinPackingItem::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:operations_research.packing.MultipleDimensionsBinPackingItem.value)
}
inline ::int64_t MultipleDimensionsBinPackingItem::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void MultipleDimensionsBinPackingItem::_internal_set_value(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// MultipleDimensionsBinPackingProblem

// .operations_research.packing.MultipleDimensionsBinPackingShape box_shape = 1;
inline bool MultipleDimensionsBinPackingProblem::has_box_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.box_shape_ != nullptr);
  return value;
}
inline void MultipleDimensionsBinPackingProblem::clear_box_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.box_shape_ != nullptr) _impl_.box_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::operations_research::packing::MultipleDimensionsBinPackingShape& MultipleDimensionsBinPackingProblem::_internal_box_shape() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::packing::MultipleDimensionsBinPackingShape* p = _impl_.box_shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::packing::MultipleDimensionsBinPackingShape&>(::operations_research::packing::_MultipleDimensionsBinPackingShape_default_instance_);
}
inline const ::operations_research::packing::MultipleDimensionsBinPackingShape& MultipleDimensionsBinPackingProblem::box_shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.packing.MultipleDimensionsBinPackingProblem.box_shape)
  return _internal_box_shape();
}
inline void MultipleDimensionsBinPackingProblem::unsafe_arena_set_allocated_box_shape(::operations_research::packing::MultipleDimensionsBinPackingShape* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.box_shape_);
  }
  _impl_.box_shape_ = reinterpret_cast<::operations_research::packing::MultipleDimensionsBinPackingShape*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.packing.MultipleDimensionsBinPackingProblem.box_shape)
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingProblem::release_box_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::packing::MultipleDimensionsBinPackingShape* released = _impl_.box_shape_;
  _impl_.box_shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingProblem::unsafe_arena_release_box_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.packing.MultipleDimensionsBinPackingProblem.box_shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::packing::MultipleDimensionsBinPackingShape* temp = _impl_.box_shape_;
  _impl_.box_shape_ = nullptr;
  return temp;
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingProblem::_internal_mutable_box_shape() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.box_shape_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::packing::MultipleDimensionsBinPackingShape>(GetArena());
    _impl_.box_shape_ = reinterpret_cast<::operations_research::packing::MultipleDimensionsBinPackingShape*>(p);
  }
  return _impl_.box_shape_;
}
inline ::operations_research::packing::MultipleDimensionsBinPackingShape* MultipleDimensionsBinPackingProblem::mutable_box_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::packing::MultipleDimensionsBinPackingShape* _msg = _internal_mutable_box_shape();
  // @@protoc_insertion_point(field_mutable:operations_research.packing.MultipleDimensionsBinPackingProblem.box_shape)
  return _msg;
}
inline void MultipleDimensionsBinPackingProblem::set_allocated_box_shape(::operations_research::packing::MultipleDimensionsBinPackingShape* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::packing::MultipleDimensionsBinPackingShape*>(_impl_.box_shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::packing::MultipleDimensionsBinPackingShape*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.box_shape_ = reinterpret_cast<::operations_research::packing::MultipleDimensionsBinPackingShape*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.packing.MultipleDimensionsBinPackingProblem.box_shape)
}

// repeated .operations_research.packing.MultipleDimensionsBinPackingItem items = 2;
inline int MultipleDimensionsBinPackingProblem::_internal_items_size() const {
  return _internal_items().size();
}
inline int MultipleDimensionsBinPackingProblem::items_size() const {
  return _internal_items_size();
}
inline void MultipleDimensionsBinPackingProblem::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::operations_research::packing::MultipleDimensionsBinPackingItem* MultipleDimensionsBinPackingProblem::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.packing.MultipleDimensionsBinPackingProblem.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>* MultipleDimensionsBinPackingProblem::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.packing.MultipleDimensionsBinPackingProblem.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::operations_research::packing::MultipleDimensionsBinPackingItem& MultipleDimensionsBinPackingProblem::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.packing.MultipleDimensionsBinPackingProblem.items)
  return _internal_items().Get(index);
}
inline ::operations_research::packing::MultipleDimensionsBinPackingItem* MultipleDimensionsBinPackingProblem::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::packing::MultipleDimensionsBinPackingItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:operations_research.packing.MultipleDimensionsBinPackingProblem.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>& MultipleDimensionsBinPackingProblem::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.packing.MultipleDimensionsBinPackingProblem.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>&
MultipleDimensionsBinPackingProblem::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::packing::MultipleDimensionsBinPackingItem>*
MultipleDimensionsBinPackingProblem::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace packing
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fpacking_2fmultiple_5fdimensions_5fbin_5fpacking_2eproto_2epb_2eh
