// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/pdlp/solvers.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fpdlp_2fsolvers_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fpdlp_2fsolvers_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "ortools/glop/parameters.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fpdlp_2fsolvers_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fpdlp_2fsolvers_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fpdlp_2fsolvers_2eproto;
namespace operations_research {
namespace pdlp {
class AdaptiveLinesearchParams;
struct AdaptiveLinesearchParamsDefaultTypeInternal;
extern AdaptiveLinesearchParamsDefaultTypeInternal _AdaptiveLinesearchParams_default_instance_;
class MalitskyPockParams;
struct MalitskyPockParamsDefaultTypeInternal;
extern MalitskyPockParamsDefaultTypeInternal _MalitskyPockParams_default_instance_;
class PrimalDualHybridGradientParams;
struct PrimalDualHybridGradientParamsDefaultTypeInternal;
extern PrimalDualHybridGradientParamsDefaultTypeInternal _PrimalDualHybridGradientParams_default_instance_;
class PrimalDualHybridGradientParams_PresolveOptions;
struct PrimalDualHybridGradientParams_PresolveOptionsDefaultTypeInternal;
extern PrimalDualHybridGradientParams_PresolveOptionsDefaultTypeInternal _PrimalDualHybridGradientParams_PresolveOptions_default_instance_;
class TerminationCriteria;
struct TerminationCriteriaDefaultTypeInternal;
extern TerminationCriteriaDefaultTypeInternal _TerminationCriteria_default_instance_;
class TerminationCriteria_DetailedOptimalityCriteria;
struct TerminationCriteria_DetailedOptimalityCriteriaDefaultTypeInternal;
extern TerminationCriteria_DetailedOptimalityCriteriaDefaultTypeInternal _TerminationCriteria_DetailedOptimalityCriteria_default_instance_;
class TerminationCriteria_SimpleOptimalityCriteria;
struct TerminationCriteria_SimpleOptimalityCriteriaDefaultTypeInternal;
extern TerminationCriteria_SimpleOptimalityCriteriaDefaultTypeInternal _TerminationCriteria_SimpleOptimalityCriteria_default_instance_;
}  // namespace pdlp
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace pdlp {
enum PrimalDualHybridGradientParams_RestartStrategy : int {
  PrimalDualHybridGradientParams_RestartStrategy_RESTART_STRATEGY_UNSPECIFIED = 0,
  PrimalDualHybridGradientParams_RestartStrategy_NO_RESTARTS = 1,
  PrimalDualHybridGradientParams_RestartStrategy_EVERY_MAJOR_ITERATION = 2,
  PrimalDualHybridGradientParams_RestartStrategy_ADAPTIVE_HEURISTIC = 3,
  PrimalDualHybridGradientParams_RestartStrategy_ADAPTIVE_DISTANCE_BASED = 4,
};

bool PrimalDualHybridGradientParams_RestartStrategy_IsValid(int value);
extern const uint32_t PrimalDualHybridGradientParams_RestartStrategy_internal_data_[];
constexpr PrimalDualHybridGradientParams_RestartStrategy PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_MIN = static_cast<PrimalDualHybridGradientParams_RestartStrategy>(0);
constexpr PrimalDualHybridGradientParams_RestartStrategy PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_MAX = static_cast<PrimalDualHybridGradientParams_RestartStrategy>(4);
constexpr int PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
PrimalDualHybridGradientParams_RestartStrategy_descriptor();
template <typename T>
const std::string& PrimalDualHybridGradientParams_RestartStrategy_Name(T value) {
  static_assert(std::is_same<T, PrimalDualHybridGradientParams_RestartStrategy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RestartStrategy_Name().");
  return PrimalDualHybridGradientParams_RestartStrategy_Name(static_cast<PrimalDualHybridGradientParams_RestartStrategy>(value));
}
template <>
inline const std::string& PrimalDualHybridGradientParams_RestartStrategy_Name(PrimalDualHybridGradientParams_RestartStrategy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrimalDualHybridGradientParams_RestartStrategy_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool PrimalDualHybridGradientParams_RestartStrategy_Parse(absl::string_view name, PrimalDualHybridGradientParams_RestartStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrimalDualHybridGradientParams_RestartStrategy>(
      PrimalDualHybridGradientParams_RestartStrategy_descriptor(), name, value);
}
enum PrimalDualHybridGradientParams_LinesearchRule : int {
  PrimalDualHybridGradientParams_LinesearchRule_LINESEARCH_RULE_UNSPECIFIED = 0,
  PrimalDualHybridGradientParams_LinesearchRule_ADAPTIVE_LINESEARCH_RULE = 1,
  PrimalDualHybridGradientParams_LinesearchRule_MALITSKY_POCK_LINESEARCH_RULE = 2,
  PrimalDualHybridGradientParams_LinesearchRule_CONSTANT_STEP_SIZE_RULE = 3,
};

bool PrimalDualHybridGradientParams_LinesearchRule_IsValid(int value);
extern const uint32_t PrimalDualHybridGradientParams_LinesearchRule_internal_data_[];
constexpr PrimalDualHybridGradientParams_LinesearchRule PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_MIN = static_cast<PrimalDualHybridGradientParams_LinesearchRule>(0);
constexpr PrimalDualHybridGradientParams_LinesearchRule PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_MAX = static_cast<PrimalDualHybridGradientParams_LinesearchRule>(3);
constexpr int PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PrimalDualHybridGradientParams_LinesearchRule_descriptor();
template <typename T>
const std::string& PrimalDualHybridGradientParams_LinesearchRule_Name(T value) {
  static_assert(std::is_same<T, PrimalDualHybridGradientParams_LinesearchRule>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LinesearchRule_Name().");
  return PrimalDualHybridGradientParams_LinesearchRule_Name(static_cast<PrimalDualHybridGradientParams_LinesearchRule>(value));
}
template <>
inline const std::string& PrimalDualHybridGradientParams_LinesearchRule_Name(PrimalDualHybridGradientParams_LinesearchRule value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PrimalDualHybridGradientParams_LinesearchRule_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PrimalDualHybridGradientParams_LinesearchRule_Parse(absl::string_view name, PrimalDualHybridGradientParams_LinesearchRule* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrimalDualHybridGradientParams_LinesearchRule>(
      PrimalDualHybridGradientParams_LinesearchRule_descriptor(), name, value);
}
enum OptimalityNorm : int {
  OPTIMALITY_NORM_UNSPECIFIED = 0,
  OPTIMALITY_NORM_L_INF = 1,
  OPTIMALITY_NORM_L2 = 2,
  OPTIMALITY_NORM_L_INF_COMPONENTWISE = 3,
};

bool OptimalityNorm_IsValid(int value);
extern const uint32_t OptimalityNorm_internal_data_[];
constexpr OptimalityNorm OptimalityNorm_MIN = static_cast<OptimalityNorm>(0);
constexpr OptimalityNorm OptimalityNorm_MAX = static_cast<OptimalityNorm>(3);
constexpr int OptimalityNorm_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OptimalityNorm_descriptor();
template <typename T>
const std::string& OptimalityNorm_Name(T value) {
  static_assert(std::is_same<T, OptimalityNorm>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OptimalityNorm_Name().");
  return OptimalityNorm_Name(static_cast<OptimalityNorm>(value));
}
template <>
inline const std::string& OptimalityNorm_Name(OptimalityNorm value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OptimalityNorm_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OptimalityNorm_Parse(absl::string_view name, OptimalityNorm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OptimalityNorm>(
      OptimalityNorm_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TerminationCriteria_SimpleOptimalityCriteria final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria) */ {
 public:
  inline TerminationCriteria_SimpleOptimalityCriteria() : TerminationCriteria_SimpleOptimalityCriteria(nullptr) {}
  ~TerminationCriteria_SimpleOptimalityCriteria() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TerminationCriteria_SimpleOptimalityCriteria(::google::protobuf::internal::ConstantInitialized);

  inline TerminationCriteria_SimpleOptimalityCriteria(const TerminationCriteria_SimpleOptimalityCriteria& from)
      : TerminationCriteria_SimpleOptimalityCriteria(nullptr, from) {}
  TerminationCriteria_SimpleOptimalityCriteria(TerminationCriteria_SimpleOptimalityCriteria&& from) noexcept
    : TerminationCriteria_SimpleOptimalityCriteria() {
    *this = ::std::move(from);
  }

  inline TerminationCriteria_SimpleOptimalityCriteria& operator=(const TerminationCriteria_SimpleOptimalityCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  inline TerminationCriteria_SimpleOptimalityCriteria& operator=(TerminationCriteria_SimpleOptimalityCriteria&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TerminationCriteria_SimpleOptimalityCriteria& default_instance() {
    return *internal_default_instance();
  }
  static inline const TerminationCriteria_SimpleOptimalityCriteria* internal_default_instance() {
    return reinterpret_cast<const TerminationCriteria_SimpleOptimalityCriteria*>(
               &_TerminationCriteria_SimpleOptimalityCriteria_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TerminationCriteria_SimpleOptimalityCriteria& a, TerminationCriteria_SimpleOptimalityCriteria& b) {
    a.Swap(&b);
  }
  inline void Swap(TerminationCriteria_SimpleOptimalityCriteria* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TerminationCriteria_SimpleOptimalityCriteria* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TerminationCriteria_SimpleOptimalityCriteria* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TerminationCriteria_SimpleOptimalityCriteria>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TerminationCriteria_SimpleOptimalityCriteria& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TerminationCriteria_SimpleOptimalityCriteria& from) {
    TerminationCriteria_SimpleOptimalityCriteria::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TerminationCriteria_SimpleOptimalityCriteria* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria";
  }
  protected:
  explicit TerminationCriteria_SimpleOptimalityCriteria(::google::protobuf::Arena* arena);
  TerminationCriteria_SimpleOptimalityCriteria(::google::protobuf::Arena* arena, const TerminationCriteria_SimpleOptimalityCriteria& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEpsOptimalAbsoluteFieldNumber = 1,
    kEpsOptimalRelativeFieldNumber = 2,
  };
  // optional double eps_optimal_absolute = 1 [default = 1e-06];
  bool has_eps_optimal_absolute() const;
  void clear_eps_optimal_absolute() ;
  double eps_optimal_absolute() const;
  void set_eps_optimal_absolute(double value);

  private:
  double _internal_eps_optimal_absolute() const;
  void _internal_set_eps_optimal_absolute(double value);

  public:
  // optional double eps_optimal_relative = 2 [default = 1e-06];
  bool has_eps_optimal_relative() const;
  void clear_eps_optimal_relative() ;
  double eps_optimal_relative() const;
  void set_eps_optimal_relative(double value);

  private:
  double _internal_eps_optimal_relative() const;
  void _internal_set_eps_optimal_relative(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double eps_optimal_absolute_;
    double eps_optimal_relative_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class TerminationCriteria_DetailedOptimalityCriteria final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria) */ {
 public:
  inline TerminationCriteria_DetailedOptimalityCriteria() : TerminationCriteria_DetailedOptimalityCriteria(nullptr) {}
  ~TerminationCriteria_DetailedOptimalityCriteria() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TerminationCriteria_DetailedOptimalityCriteria(::google::protobuf::internal::ConstantInitialized);

  inline TerminationCriteria_DetailedOptimalityCriteria(const TerminationCriteria_DetailedOptimalityCriteria& from)
      : TerminationCriteria_DetailedOptimalityCriteria(nullptr, from) {}
  TerminationCriteria_DetailedOptimalityCriteria(TerminationCriteria_DetailedOptimalityCriteria&& from) noexcept
    : TerminationCriteria_DetailedOptimalityCriteria() {
    *this = ::std::move(from);
  }

  inline TerminationCriteria_DetailedOptimalityCriteria& operator=(const TerminationCriteria_DetailedOptimalityCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  inline TerminationCriteria_DetailedOptimalityCriteria& operator=(TerminationCriteria_DetailedOptimalityCriteria&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TerminationCriteria_DetailedOptimalityCriteria& default_instance() {
    return *internal_default_instance();
  }
  static inline const TerminationCriteria_DetailedOptimalityCriteria* internal_default_instance() {
    return reinterpret_cast<const TerminationCriteria_DetailedOptimalityCriteria*>(
               &_TerminationCriteria_DetailedOptimalityCriteria_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TerminationCriteria_DetailedOptimalityCriteria& a, TerminationCriteria_DetailedOptimalityCriteria& b) {
    a.Swap(&b);
  }
  inline void Swap(TerminationCriteria_DetailedOptimalityCriteria* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TerminationCriteria_DetailedOptimalityCriteria* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TerminationCriteria_DetailedOptimalityCriteria* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TerminationCriteria_DetailedOptimalityCriteria>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TerminationCriteria_DetailedOptimalityCriteria& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TerminationCriteria_DetailedOptimalityCriteria& from) {
    TerminationCriteria_DetailedOptimalityCriteria::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TerminationCriteria_DetailedOptimalityCriteria* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria";
  }
  protected:
  explicit TerminationCriteria_DetailedOptimalityCriteria(::google::protobuf::Arena* arena);
  TerminationCriteria_DetailedOptimalityCriteria(::google::protobuf::Arena* arena, const TerminationCriteria_DetailedOptimalityCriteria& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEpsOptimalPrimalResidualAbsoluteFieldNumber = 1,
    kEpsOptimalPrimalResidualRelativeFieldNumber = 2,
    kEpsOptimalDualResidualAbsoluteFieldNumber = 3,
    kEpsOptimalDualResidualRelativeFieldNumber = 4,
    kEpsOptimalObjectiveGapAbsoluteFieldNumber = 5,
    kEpsOptimalObjectiveGapRelativeFieldNumber = 6,
  };
  // optional double eps_optimal_primal_residual_absolute = 1 [default = 1e-06];
  bool has_eps_optimal_primal_residual_absolute() const;
  void clear_eps_optimal_primal_residual_absolute() ;
  double eps_optimal_primal_residual_absolute() const;
  void set_eps_optimal_primal_residual_absolute(double value);

  private:
  double _internal_eps_optimal_primal_residual_absolute() const;
  void _internal_set_eps_optimal_primal_residual_absolute(double value);

  public:
  // optional double eps_optimal_primal_residual_relative = 2 [default = 1e-06];
  bool has_eps_optimal_primal_residual_relative() const;
  void clear_eps_optimal_primal_residual_relative() ;
  double eps_optimal_primal_residual_relative() const;
  void set_eps_optimal_primal_residual_relative(double value);

  private:
  double _internal_eps_optimal_primal_residual_relative() const;
  void _internal_set_eps_optimal_primal_residual_relative(double value);

  public:
  // optional double eps_optimal_dual_residual_absolute = 3 [default = 1e-06];
  bool has_eps_optimal_dual_residual_absolute() const;
  void clear_eps_optimal_dual_residual_absolute() ;
  double eps_optimal_dual_residual_absolute() const;
  void set_eps_optimal_dual_residual_absolute(double value);

  private:
  double _internal_eps_optimal_dual_residual_absolute() const;
  void _internal_set_eps_optimal_dual_residual_absolute(double value);

  public:
  // optional double eps_optimal_dual_residual_relative = 4 [default = 1e-06];
  bool has_eps_optimal_dual_residual_relative() const;
  void clear_eps_optimal_dual_residual_relative() ;
  double eps_optimal_dual_residual_relative() const;
  void set_eps_optimal_dual_residual_relative(double value);

  private:
  double _internal_eps_optimal_dual_residual_relative() const;
  void _internal_set_eps_optimal_dual_residual_relative(double value);

  public:
  // optional double eps_optimal_objective_gap_absolute = 5 [default = 1e-06];
  bool has_eps_optimal_objective_gap_absolute() const;
  void clear_eps_optimal_objective_gap_absolute() ;
  double eps_optimal_objective_gap_absolute() const;
  void set_eps_optimal_objective_gap_absolute(double value);

  private:
  double _internal_eps_optimal_objective_gap_absolute() const;
  void _internal_set_eps_optimal_objective_gap_absolute(double value);

  public:
  // optional double eps_optimal_objective_gap_relative = 6 [default = 1e-06];
  bool has_eps_optimal_objective_gap_relative() const;
  void clear_eps_optimal_objective_gap_relative() ;
  double eps_optimal_objective_gap_relative() const;
  void set_eps_optimal_objective_gap_relative(double value);

  private:
  double _internal_eps_optimal_objective_gap_relative() const;
  void _internal_set_eps_optimal_objective_gap_relative(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double eps_optimal_primal_residual_absolute_;
    double eps_optimal_primal_residual_relative_;
    double eps_optimal_dual_residual_absolute_;
    double eps_optimal_dual_residual_relative_;
    double eps_optimal_objective_gap_absolute_;
    double eps_optimal_objective_gap_relative_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class MalitskyPockParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.MalitskyPockParams) */ {
 public:
  inline MalitskyPockParams() : MalitskyPockParams(nullptr) {}
  ~MalitskyPockParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MalitskyPockParams(::google::protobuf::internal::ConstantInitialized);

  inline MalitskyPockParams(const MalitskyPockParams& from)
      : MalitskyPockParams(nullptr, from) {}
  MalitskyPockParams(MalitskyPockParams&& from) noexcept
    : MalitskyPockParams() {
    *this = ::std::move(from);
  }

  inline MalitskyPockParams& operator=(const MalitskyPockParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MalitskyPockParams& operator=(MalitskyPockParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MalitskyPockParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MalitskyPockParams* internal_default_instance() {
    return reinterpret_cast<const MalitskyPockParams*>(
               &_MalitskyPockParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MalitskyPockParams& a, MalitskyPockParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MalitskyPockParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MalitskyPockParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MalitskyPockParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MalitskyPockParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MalitskyPockParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MalitskyPockParams& from) {
    MalitskyPockParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MalitskyPockParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.MalitskyPockParams";
  }
  protected:
  explicit MalitskyPockParams(::google::protobuf::Arena* arena);
  MalitskyPockParams(::google::protobuf::Arena* arena, const MalitskyPockParams& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepSizeDownscalingFactorFieldNumber = 1,
    kLinesearchContractionFactorFieldNumber = 2,
    kStepSizeInterpolationFieldNumber = 3,
  };
  // optional double step_size_downscaling_factor = 1 [default = 0.7];
  bool has_step_size_downscaling_factor() const;
  void clear_step_size_downscaling_factor() ;
  double step_size_downscaling_factor() const;
  void set_step_size_downscaling_factor(double value);

  private:
  double _internal_step_size_downscaling_factor() const;
  void _internal_set_step_size_downscaling_factor(double value);

  public:
  // optional double linesearch_contraction_factor = 2 [default = 0.99];
  bool has_linesearch_contraction_factor() const;
  void clear_linesearch_contraction_factor() ;
  double linesearch_contraction_factor() const;
  void set_linesearch_contraction_factor(double value);

  private:
  double _internal_linesearch_contraction_factor() const;
  void _internal_set_linesearch_contraction_factor(double value);

  public:
  // optional double step_size_interpolation = 3 [default = 1];
  bool has_step_size_interpolation() const;
  void clear_step_size_interpolation() ;
  double step_size_interpolation() const;
  void set_step_size_interpolation(double value);

  private:
  double _internal_step_size_interpolation() const;
  void _internal_set_step_size_interpolation(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.MalitskyPockParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double step_size_downscaling_factor_;
    double linesearch_contraction_factor_;
    double step_size_interpolation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class AdaptiveLinesearchParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.AdaptiveLinesearchParams) */ {
 public:
  inline AdaptiveLinesearchParams() : AdaptiveLinesearchParams(nullptr) {}
  ~AdaptiveLinesearchParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AdaptiveLinesearchParams(::google::protobuf::internal::ConstantInitialized);

  inline AdaptiveLinesearchParams(const AdaptiveLinesearchParams& from)
      : AdaptiveLinesearchParams(nullptr, from) {}
  AdaptiveLinesearchParams(AdaptiveLinesearchParams&& from) noexcept
    : AdaptiveLinesearchParams() {
    *this = ::std::move(from);
  }

  inline AdaptiveLinesearchParams& operator=(const AdaptiveLinesearchParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdaptiveLinesearchParams& operator=(AdaptiveLinesearchParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdaptiveLinesearchParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdaptiveLinesearchParams* internal_default_instance() {
    return reinterpret_cast<const AdaptiveLinesearchParams*>(
               &_AdaptiveLinesearchParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AdaptiveLinesearchParams& a, AdaptiveLinesearchParams& b) {
    a.Swap(&b);
  }
  inline void Swap(AdaptiveLinesearchParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdaptiveLinesearchParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdaptiveLinesearchParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AdaptiveLinesearchParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdaptiveLinesearchParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AdaptiveLinesearchParams& from) {
    AdaptiveLinesearchParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdaptiveLinesearchParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.AdaptiveLinesearchParams";
  }
  protected:
  explicit AdaptiveLinesearchParams(::google::protobuf::Arena* arena);
  AdaptiveLinesearchParams(::google::protobuf::Arena* arena, const AdaptiveLinesearchParams& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepSizeReductionExponentFieldNumber = 1,
    kStepSizeGrowthExponentFieldNumber = 2,
  };
  // optional double step_size_reduction_exponent = 1 [default = 0.3];
  bool has_step_size_reduction_exponent() const;
  void clear_step_size_reduction_exponent() ;
  double step_size_reduction_exponent() const;
  void set_step_size_reduction_exponent(double value);

  private:
  double _internal_step_size_reduction_exponent() const;
  void _internal_set_step_size_reduction_exponent(double value);

  public:
  // optional double step_size_growth_exponent = 2 [default = 0.6];
  bool has_step_size_growth_exponent() const;
  void clear_step_size_growth_exponent() ;
  double step_size_growth_exponent() const;
  void set_step_size_growth_exponent(double value);

  private:
  double _internal_step_size_growth_exponent() const;
  void _internal_set_step_size_growth_exponent(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.AdaptiveLinesearchParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double step_size_reduction_exponent_;
    double step_size_growth_exponent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class TerminationCriteria final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.TerminationCriteria) */ {
 public:
  inline TerminationCriteria() : TerminationCriteria(nullptr) {}
  ~TerminationCriteria() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TerminationCriteria(::google::protobuf::internal::ConstantInitialized);

  inline TerminationCriteria(const TerminationCriteria& from)
      : TerminationCriteria(nullptr, from) {}
  TerminationCriteria(TerminationCriteria&& from) noexcept
    : TerminationCriteria() {
    *this = ::std::move(from);
  }

  inline TerminationCriteria& operator=(const TerminationCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  inline TerminationCriteria& operator=(TerminationCriteria&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TerminationCriteria& default_instance() {
    return *internal_default_instance();
  }
  enum OptimalityCriteriaCase {
    kSimpleOptimalityCriteria = 9,
    kDetailedOptimalityCriteria = 10,
    OPTIMALITY_CRITERIA_NOT_SET = 0,
  };

  static inline const TerminationCriteria* internal_default_instance() {
    return reinterpret_cast<const TerminationCriteria*>(
               &_TerminationCriteria_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TerminationCriteria& a, TerminationCriteria& b) {
    a.Swap(&b);
  }
  inline void Swap(TerminationCriteria* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TerminationCriteria* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TerminationCriteria* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TerminationCriteria>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TerminationCriteria& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TerminationCriteria& from) {
    TerminationCriteria::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TerminationCriteria* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.TerminationCriteria";
  }
  protected:
  explicit TerminationCriteria(::google::protobuf::Arena* arena);
  TerminationCriteria(::google::protobuf::Arena* arena, const TerminationCriteria& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using SimpleOptimalityCriteria = TerminationCriteria_SimpleOptimalityCriteria;
  using DetailedOptimalityCriteria = TerminationCriteria_DetailedOptimalityCriteria;

  // accessors -------------------------------------------------------

  enum : int {
    kEpsOptimalAbsoluteFieldNumber = 2,
    kEpsOptimalRelativeFieldNumber = 3,
    kEpsPrimalInfeasibleFieldNumber = 4,
    kOptimalityNormFieldNumber = 1,
    kIterationLimitFieldNumber = 7,
    kEpsDualInfeasibleFieldNumber = 5,
    kTimeSecLimitFieldNumber = 6,
    kKktMatrixPassLimitFieldNumber = 8,
    kSimpleOptimalityCriteriaFieldNumber = 9,
    kDetailedOptimalityCriteriaFieldNumber = 10,
  };
  // optional double eps_optimal_absolute = 2 [default = 1e-06, deprecated = true];
  [[deprecated]]  bool has_eps_optimal_absolute() const;
  [[deprecated]]  void clear_eps_optimal_absolute() ;
  [[deprecated]] double eps_optimal_absolute() const;
  [[deprecated]] void set_eps_optimal_absolute(double value);

  private:
  double _internal_eps_optimal_absolute() const;
  void _internal_set_eps_optimal_absolute(double value);

  public:
  // optional double eps_optimal_relative = 3 [default = 1e-06, deprecated = true];
  [[deprecated]]  bool has_eps_optimal_relative() const;
  [[deprecated]]  void clear_eps_optimal_relative() ;
  [[deprecated]] double eps_optimal_relative() const;
  [[deprecated]] void set_eps_optimal_relative(double value);

  private:
  double _internal_eps_optimal_relative() const;
  void _internal_set_eps_optimal_relative(double value);

  public:
  // optional double eps_primal_infeasible = 4 [default = 1e-08];
  bool has_eps_primal_infeasible() const;
  void clear_eps_primal_infeasible() ;
  double eps_primal_infeasible() const;
  void set_eps_primal_infeasible(double value);

  private:
  double _internal_eps_primal_infeasible() const;
  void _internal_set_eps_primal_infeasible(double value);

  public:
  // optional .operations_research.pdlp.OptimalityNorm optimality_norm = 1 [default = OPTIMALITY_NORM_L2];
  bool has_optimality_norm() const;
  void clear_optimality_norm() ;
  ::operations_research::pdlp::OptimalityNorm optimality_norm() const;
  void set_optimality_norm(::operations_research::pdlp::OptimalityNorm value);

  private:
  ::operations_research::pdlp::OptimalityNorm _internal_optimality_norm() const;
  void _internal_set_optimality_norm(::operations_research::pdlp::OptimalityNorm value);

  public:
  // optional int32 iteration_limit = 7 [default = 2147483647];
  bool has_iteration_limit() const;
  void clear_iteration_limit() ;
  ::int32_t iteration_limit() const;
  void set_iteration_limit(::int32_t value);

  private:
  ::int32_t _internal_iteration_limit() const;
  void _internal_set_iteration_limit(::int32_t value);

  public:
  // optional double eps_dual_infeasible = 5 [default = 1e-08];
  bool has_eps_dual_infeasible() const;
  void clear_eps_dual_infeasible() ;
  double eps_dual_infeasible() const;
  void set_eps_dual_infeasible(double value);

  private:
  double _internal_eps_dual_infeasible() const;
  void _internal_set_eps_dual_infeasible(double value);

  public:
  // optional double time_sec_limit = 6 [default = inf];
  bool has_time_sec_limit() const;
  void clear_time_sec_limit() ;
  double time_sec_limit() const;
  void set_time_sec_limit(double value);

  private:
  double _internal_time_sec_limit() const;
  void _internal_set_time_sec_limit(double value);

  public:
  // optional double kkt_matrix_pass_limit = 8 [default = inf];
  bool has_kkt_matrix_pass_limit() const;
  void clear_kkt_matrix_pass_limit() ;
  double kkt_matrix_pass_limit() const;
  void set_kkt_matrix_pass_limit(double value);

  private:
  double _internal_kkt_matrix_pass_limit() const;
  void _internal_set_kkt_matrix_pass_limit(double value);

  public:
  // .operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria simple_optimality_criteria = 9;
  bool has_simple_optimality_criteria() const;
  private:
  bool _internal_has_simple_optimality_criteria() const;

  public:
  void clear_simple_optimality_criteria() ;
  const ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria& simple_optimality_criteria() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* release_simple_optimality_criteria();
  ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* mutable_simple_optimality_criteria();
  void set_allocated_simple_optimality_criteria(::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* value);
  void unsafe_arena_set_allocated_simple_optimality_criteria(::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* value);
  ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* unsafe_arena_release_simple_optimality_criteria();

  private:
  const ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria& _internal_simple_optimality_criteria() const;
  ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* _internal_mutable_simple_optimality_criteria();

  public:
  // .operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria detailed_optimality_criteria = 10;
  bool has_detailed_optimality_criteria() const;
  private:
  bool _internal_has_detailed_optimality_criteria() const;

  public:
  void clear_detailed_optimality_criteria() ;
  const ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria& detailed_optimality_criteria() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* release_detailed_optimality_criteria();
  ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* mutable_detailed_optimality_criteria();
  void set_allocated_detailed_optimality_criteria(::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* value);
  void unsafe_arena_set_allocated_detailed_optimality_criteria(::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* value);
  ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* unsafe_arena_release_detailed_optimality_criteria();

  private:
  const ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria& _internal_detailed_optimality_criteria() const;
  ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* _internal_mutable_detailed_optimality_criteria();

  public:
  void clear_optimality_criteria();
  OptimalityCriteriaCase optimality_criteria_case() const;
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.TerminationCriteria)
 private:
  class _Internal;
  void set_has_simple_optimality_criteria();
  void set_has_detailed_optimality_criteria();

  inline bool has_optimality_criteria() const;
  inline void clear_has_optimality_criteria();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double eps_optimal_absolute_;
    double eps_optimal_relative_;
    double eps_primal_infeasible_;
    int optimality_norm_;
    ::int32_t iteration_limit_;
    double eps_dual_infeasible_;
    double time_sec_limit_;
    double kkt_matrix_pass_limit_;
    union OptimalityCriteriaUnion {
      constexpr OptimalityCriteriaUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* simple_optimality_criteria_;
      ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* detailed_optimality_criteria_;
    } optimality_criteria_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class PrimalDualHybridGradientParams_PresolveOptions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions) */ {
 public:
  inline PrimalDualHybridGradientParams_PresolveOptions() : PrimalDualHybridGradientParams_PresolveOptions(nullptr) {}
  ~PrimalDualHybridGradientParams_PresolveOptions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrimalDualHybridGradientParams_PresolveOptions(::google::protobuf::internal::ConstantInitialized);

  inline PrimalDualHybridGradientParams_PresolveOptions(const PrimalDualHybridGradientParams_PresolveOptions& from)
      : PrimalDualHybridGradientParams_PresolveOptions(nullptr, from) {}
  PrimalDualHybridGradientParams_PresolveOptions(PrimalDualHybridGradientParams_PresolveOptions&& from) noexcept
    : PrimalDualHybridGradientParams_PresolveOptions() {
    *this = ::std::move(from);
  }

  inline PrimalDualHybridGradientParams_PresolveOptions& operator=(const PrimalDualHybridGradientParams_PresolveOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrimalDualHybridGradientParams_PresolveOptions& operator=(PrimalDualHybridGradientParams_PresolveOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrimalDualHybridGradientParams_PresolveOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrimalDualHybridGradientParams_PresolveOptions* internal_default_instance() {
    return reinterpret_cast<const PrimalDualHybridGradientParams_PresolveOptions*>(
               &_PrimalDualHybridGradientParams_PresolveOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PrimalDualHybridGradientParams_PresolveOptions& a, PrimalDualHybridGradientParams_PresolveOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(PrimalDualHybridGradientParams_PresolveOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrimalDualHybridGradientParams_PresolveOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrimalDualHybridGradientParams_PresolveOptions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrimalDualHybridGradientParams_PresolveOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrimalDualHybridGradientParams_PresolveOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PrimalDualHybridGradientParams_PresolveOptions& from) {
    PrimalDualHybridGradientParams_PresolveOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrimalDualHybridGradientParams_PresolveOptions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions";
  }
  protected:
  explicit PrimalDualHybridGradientParams_PresolveOptions(::google::protobuf::Arena* arena);
  PrimalDualHybridGradientParams_PresolveOptions(::google::protobuf::Arena* arena, const PrimalDualHybridGradientParams_PresolveOptions& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGlopParametersFieldNumber = 2,
    kUseGlopFieldNumber = 1,
  };
  // optional .operations_research.glop.GlopParameters glop_parameters = 2;
  bool has_glop_parameters() const;
  void clear_glop_parameters() ;
  const ::operations_research::glop::GlopParameters& glop_parameters() const;
  PROTOBUF_NODISCARD ::operations_research::glop::GlopParameters* release_glop_parameters();
  ::operations_research::glop::GlopParameters* mutable_glop_parameters();
  void set_allocated_glop_parameters(::operations_research::glop::GlopParameters* value);
  void unsafe_arena_set_allocated_glop_parameters(::operations_research::glop::GlopParameters* value);
  ::operations_research::glop::GlopParameters* unsafe_arena_release_glop_parameters();

  private:
  const ::operations_research::glop::GlopParameters& _internal_glop_parameters() const;
  ::operations_research::glop::GlopParameters* _internal_mutable_glop_parameters();

  public:
  // optional bool use_glop = 1;
  bool has_use_glop() const;
  void clear_use_glop() ;
  bool use_glop() const;
  void set_use_glop(bool value);

  private:
  bool _internal_use_glop() const;
  void _internal_set_use_glop(bool value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::operations_research::glop::GlopParameters* glop_parameters_;
    bool use_glop_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};// -------------------------------------------------------------------

class PrimalDualHybridGradientParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.pdlp.PrimalDualHybridGradientParams) */ {
 public:
  inline PrimalDualHybridGradientParams() : PrimalDualHybridGradientParams(nullptr) {}
  ~PrimalDualHybridGradientParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrimalDualHybridGradientParams(::google::protobuf::internal::ConstantInitialized);

  inline PrimalDualHybridGradientParams(const PrimalDualHybridGradientParams& from)
      : PrimalDualHybridGradientParams(nullptr, from) {}
  PrimalDualHybridGradientParams(PrimalDualHybridGradientParams&& from) noexcept
    : PrimalDualHybridGradientParams() {
    *this = ::std::move(from);
  }

  inline PrimalDualHybridGradientParams& operator=(const PrimalDualHybridGradientParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrimalDualHybridGradientParams& operator=(PrimalDualHybridGradientParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrimalDualHybridGradientParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrimalDualHybridGradientParams* internal_default_instance() {
    return reinterpret_cast<const PrimalDualHybridGradientParams*>(
               &_PrimalDualHybridGradientParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PrimalDualHybridGradientParams& a, PrimalDualHybridGradientParams& b) {
    a.Swap(&b);
  }
  inline void Swap(PrimalDualHybridGradientParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrimalDualHybridGradientParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrimalDualHybridGradientParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrimalDualHybridGradientParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrimalDualHybridGradientParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PrimalDualHybridGradientParams& from) {
    PrimalDualHybridGradientParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrimalDualHybridGradientParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.pdlp.PrimalDualHybridGradientParams";
  }
  protected:
  explicit PrimalDualHybridGradientParams(::google::protobuf::Arena* arena);
  PrimalDualHybridGradientParams(::google::protobuf::Arena* arena, const PrimalDualHybridGradientParams& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using PresolveOptions = PrimalDualHybridGradientParams_PresolveOptions;

  using RestartStrategy = PrimalDualHybridGradientParams_RestartStrategy;
  static constexpr RestartStrategy RESTART_STRATEGY_UNSPECIFIED = PrimalDualHybridGradientParams_RestartStrategy_RESTART_STRATEGY_UNSPECIFIED;
  static constexpr RestartStrategy NO_RESTARTS = PrimalDualHybridGradientParams_RestartStrategy_NO_RESTARTS;
  static constexpr RestartStrategy EVERY_MAJOR_ITERATION = PrimalDualHybridGradientParams_RestartStrategy_EVERY_MAJOR_ITERATION;
  static constexpr RestartStrategy ADAPTIVE_HEURISTIC = PrimalDualHybridGradientParams_RestartStrategy_ADAPTIVE_HEURISTIC;
  static constexpr RestartStrategy ADAPTIVE_DISTANCE_BASED = PrimalDualHybridGradientParams_RestartStrategy_ADAPTIVE_DISTANCE_BASED;
  static inline bool RestartStrategy_IsValid(int value) {
    return PrimalDualHybridGradientParams_RestartStrategy_IsValid(value);
  }
  static constexpr RestartStrategy RestartStrategy_MIN = PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_MIN;
  static constexpr RestartStrategy RestartStrategy_MAX = PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_MAX;
  static constexpr int RestartStrategy_ARRAYSIZE = PrimalDualHybridGradientParams_RestartStrategy_RestartStrategy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* RestartStrategy_descriptor() {
    return PrimalDualHybridGradientParams_RestartStrategy_descriptor();
  }
  template <typename T>
  static inline const std::string& RestartStrategy_Name(T value) {
    return PrimalDualHybridGradientParams_RestartStrategy_Name(value);
  }
  static inline bool RestartStrategy_Parse(absl::string_view name, RestartStrategy* value) {
    return PrimalDualHybridGradientParams_RestartStrategy_Parse(name, value);
  }

  using LinesearchRule = PrimalDualHybridGradientParams_LinesearchRule;
  static constexpr LinesearchRule LINESEARCH_RULE_UNSPECIFIED = PrimalDualHybridGradientParams_LinesearchRule_LINESEARCH_RULE_UNSPECIFIED;
  static constexpr LinesearchRule ADAPTIVE_LINESEARCH_RULE = PrimalDualHybridGradientParams_LinesearchRule_ADAPTIVE_LINESEARCH_RULE;
  static constexpr LinesearchRule MALITSKY_POCK_LINESEARCH_RULE = PrimalDualHybridGradientParams_LinesearchRule_MALITSKY_POCK_LINESEARCH_RULE;
  static constexpr LinesearchRule CONSTANT_STEP_SIZE_RULE = PrimalDualHybridGradientParams_LinesearchRule_CONSTANT_STEP_SIZE_RULE;
  static inline bool LinesearchRule_IsValid(int value) {
    return PrimalDualHybridGradientParams_LinesearchRule_IsValid(value);
  }
  static constexpr LinesearchRule LinesearchRule_MIN = PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_MIN;
  static constexpr LinesearchRule LinesearchRule_MAX = PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_MAX;
  static constexpr int LinesearchRule_ARRAYSIZE = PrimalDualHybridGradientParams_LinesearchRule_LinesearchRule_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* LinesearchRule_descriptor() {
    return PrimalDualHybridGradientParams_LinesearchRule_descriptor();
  }
  template <typename T>
  static inline const std::string& LinesearchRule_Name(T value) {
    return PrimalDualHybridGradientParams_LinesearchRule_Name(value);
  }
  static inline bool LinesearchRule_Parse(absl::string_view name, LinesearchRule* value) {
    return PrimalDualHybridGradientParams_LinesearchRule_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRandomProjectionSeedsFieldNumber = 28,
    kTerminationCriteriaFieldNumber = 1,
    kPresolveOptionsFieldNumber = 16,
    kAdaptiveLinesearchParametersFieldNumber = 18,
    kMalitskyPockParametersFieldNumber = 19,
    kInitialPrimalWeightFieldNumber = 8,
    kRecordIterationStatsFieldNumber = 3,
    kUseDiagonalQpTrustRegionSolverFieldNumber = 23,
    kUseFeasibilityPolishingFieldNumber = 30,
    kVerbosityLevelFieldNumber = 26,
    kLogIntervalSecondsFieldNumber = 31,
    kNumShardsFieldNumber = 27,
    kL2NormRescalingFieldNumber = 10,
    kHandleSomePrimalGradientsOnFiniteBoundsAsResidualsFieldNumber = 29,
    kNumThreadsFieldNumber = 2,
    kMajorIterationFrequencyFieldNumber = 4,
    kTerminationCheckFrequencyFieldNumber = 5,
    kRestartStrategyFieldNumber = 6,
    kPrimalWeightUpdateSmoothingFieldNumber = 7,
    kLInfRuizIterationsFieldNumber = 9,
    kLinesearchRuleFieldNumber = 12,
    kSufficientReductionForRestartFieldNumber = 11,
    kNecessaryReductionForRestartFieldNumber = 17,
    kInfiniteConstraintBoundThresholdFieldNumber = 22,
    kDiagonalQpTrustRegionSolverToleranceFieldNumber = 24,
    kInitialStepSizeScalingFieldNumber = 25,
  };
  // repeated int32 random_projection_seeds = 28 [packed = true];
  int random_projection_seeds_size() const;
  private:
  int _internal_random_projection_seeds_size() const;

  public:
  void clear_random_projection_seeds() ;
  ::int32_t random_projection_seeds(int index) const;
  void set_random_projection_seeds(int index, ::int32_t value);
  void add_random_projection_seeds(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& random_projection_seeds() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_random_projection_seeds();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_random_projection_seeds() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_random_projection_seeds();

  public:
  // optional .operations_research.pdlp.TerminationCriteria termination_criteria = 1;
  bool has_termination_criteria() const;
  void clear_termination_criteria() ;
  const ::operations_research::pdlp::TerminationCriteria& termination_criteria() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::TerminationCriteria* release_termination_criteria();
  ::operations_research::pdlp::TerminationCriteria* mutable_termination_criteria();
  void set_allocated_termination_criteria(::operations_research::pdlp::TerminationCriteria* value);
  void unsafe_arena_set_allocated_termination_criteria(::operations_research::pdlp::TerminationCriteria* value);
  ::operations_research::pdlp::TerminationCriteria* unsafe_arena_release_termination_criteria();

  private:
  const ::operations_research::pdlp::TerminationCriteria& _internal_termination_criteria() const;
  ::operations_research::pdlp::TerminationCriteria* _internal_mutable_termination_criteria();

  public:
  // optional .operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions presolve_options = 16;
  bool has_presolve_options() const;
  void clear_presolve_options() ;
  const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions& presolve_options() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* release_presolve_options();
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* mutable_presolve_options();
  void set_allocated_presolve_options(::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* value);
  void unsafe_arena_set_allocated_presolve_options(::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* value);
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* unsafe_arena_release_presolve_options();

  private:
  const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions& _internal_presolve_options() const;
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* _internal_mutable_presolve_options();

  public:
  // optional .operations_research.pdlp.AdaptiveLinesearchParams adaptive_linesearch_parameters = 18;
  bool has_adaptive_linesearch_parameters() const;
  void clear_adaptive_linesearch_parameters() ;
  const ::operations_research::pdlp::AdaptiveLinesearchParams& adaptive_linesearch_parameters() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::AdaptiveLinesearchParams* release_adaptive_linesearch_parameters();
  ::operations_research::pdlp::AdaptiveLinesearchParams* mutable_adaptive_linesearch_parameters();
  void set_allocated_adaptive_linesearch_parameters(::operations_research::pdlp::AdaptiveLinesearchParams* value);
  void unsafe_arena_set_allocated_adaptive_linesearch_parameters(::operations_research::pdlp::AdaptiveLinesearchParams* value);
  ::operations_research::pdlp::AdaptiveLinesearchParams* unsafe_arena_release_adaptive_linesearch_parameters();

  private:
  const ::operations_research::pdlp::AdaptiveLinesearchParams& _internal_adaptive_linesearch_parameters() const;
  ::operations_research::pdlp::AdaptiveLinesearchParams* _internal_mutable_adaptive_linesearch_parameters();

  public:
  // optional .operations_research.pdlp.MalitskyPockParams malitsky_pock_parameters = 19;
  bool has_malitsky_pock_parameters() const;
  void clear_malitsky_pock_parameters() ;
  const ::operations_research::pdlp::MalitskyPockParams& malitsky_pock_parameters() const;
  PROTOBUF_NODISCARD ::operations_research::pdlp::MalitskyPockParams* release_malitsky_pock_parameters();
  ::operations_research::pdlp::MalitskyPockParams* mutable_malitsky_pock_parameters();
  void set_allocated_malitsky_pock_parameters(::operations_research::pdlp::MalitskyPockParams* value);
  void unsafe_arena_set_allocated_malitsky_pock_parameters(::operations_research::pdlp::MalitskyPockParams* value);
  ::operations_research::pdlp::MalitskyPockParams* unsafe_arena_release_malitsky_pock_parameters();

  private:
  const ::operations_research::pdlp::MalitskyPockParams& _internal_malitsky_pock_parameters() const;
  ::operations_research::pdlp::MalitskyPockParams* _internal_mutable_malitsky_pock_parameters();

  public:
  // optional double initial_primal_weight = 8;
  bool has_initial_primal_weight() const;
  void clear_initial_primal_weight() ;
  double initial_primal_weight() const;
  void set_initial_primal_weight(double value);

  private:
  double _internal_initial_primal_weight() const;
  void _internal_set_initial_primal_weight(double value);

  public:
  // optional bool record_iteration_stats = 3;
  bool has_record_iteration_stats() const;
  void clear_record_iteration_stats() ;
  bool record_iteration_stats() const;
  void set_record_iteration_stats(bool value);

  private:
  bool _internal_record_iteration_stats() const;
  void _internal_set_record_iteration_stats(bool value);

  public:
  // optional bool use_diagonal_qp_trust_region_solver = 23 [default = false];
  bool has_use_diagonal_qp_trust_region_solver() const;
  void clear_use_diagonal_qp_trust_region_solver() ;
  bool use_diagonal_qp_trust_region_solver() const;
  void set_use_diagonal_qp_trust_region_solver(bool value);

  private:
  bool _internal_use_diagonal_qp_trust_region_solver() const;
  void _internal_set_use_diagonal_qp_trust_region_solver(bool value);

  public:
  // optional bool use_feasibility_polishing = 30 [default = false];
  bool has_use_feasibility_polishing() const;
  void clear_use_feasibility_polishing() ;
  bool use_feasibility_polishing() const;
  void set_use_feasibility_polishing(bool value);

  private:
  bool _internal_use_feasibility_polishing() const;
  void _internal_set_use_feasibility_polishing(bool value);

  public:
  // optional int32 verbosity_level = 26 [default = 0];
  bool has_verbosity_level() const;
  void clear_verbosity_level() ;
  ::int32_t verbosity_level() const;
  void set_verbosity_level(::int32_t value);

  private:
  ::int32_t _internal_verbosity_level() const;
  void _internal_set_verbosity_level(::int32_t value);

  public:
  // optional double log_interval_seconds = 31 [default = 0];
  bool has_log_interval_seconds() const;
  void clear_log_interval_seconds() ;
  double log_interval_seconds() const;
  void set_log_interval_seconds(double value);

  private:
  double _internal_log_interval_seconds() const;
  void _internal_set_log_interval_seconds(double value);

  public:
  // optional int32 num_shards = 27 [default = 0];
  bool has_num_shards() const;
  void clear_num_shards() ;
  ::int32_t num_shards() const;
  void set_num_shards(::int32_t value);

  private:
  ::int32_t _internal_num_shards() const;
  void _internal_set_num_shards(::int32_t value);

  public:
  // optional bool l2_norm_rescaling = 10 [default = true];
  bool has_l2_norm_rescaling() const;
  void clear_l2_norm_rescaling() ;
  bool l2_norm_rescaling() const;
  void set_l2_norm_rescaling(bool value);

  private:
  bool _internal_l2_norm_rescaling() const;
  void _internal_set_l2_norm_rescaling(bool value);

  public:
  // optional bool handle_some_primal_gradients_on_finite_bounds_as_residuals = 29 [default = true];
  bool has_handle_some_primal_gradients_on_finite_bounds_as_residuals() const;
  void clear_handle_some_primal_gradients_on_finite_bounds_as_residuals() ;
  bool handle_some_primal_gradients_on_finite_bounds_as_residuals() const;
  void set_handle_some_primal_gradients_on_finite_bounds_as_residuals(bool value);

  private:
  bool _internal_handle_some_primal_gradients_on_finite_bounds_as_residuals() const;
  void _internal_set_handle_some_primal_gradients_on_finite_bounds_as_residuals(bool value);

  public:
  // optional int32 num_threads = 2 [default = 1];
  bool has_num_threads() const;
  void clear_num_threads() ;
  ::int32_t num_threads() const;
  void set_num_threads(::int32_t value);

  private:
  ::int32_t _internal_num_threads() const;
  void _internal_set_num_threads(::int32_t value);

  public:
  // optional int32 major_iteration_frequency = 4 [default = 64];
  bool has_major_iteration_frequency() const;
  void clear_major_iteration_frequency() ;
  ::int32_t major_iteration_frequency() const;
  void set_major_iteration_frequency(::int32_t value);

  private:
  ::int32_t _internal_major_iteration_frequency() const;
  void _internal_set_major_iteration_frequency(::int32_t value);

  public:
  // optional int32 termination_check_frequency = 5 [default = 64];
  bool has_termination_check_frequency() const;
  void clear_termination_check_frequency() ;
  ::int32_t termination_check_frequency() const;
  void set_termination_check_frequency(::int32_t value);

  private:
  ::int32_t _internal_termination_check_frequency() const;
  void _internal_set_termination_check_frequency(::int32_t value);

  public:
  // optional .operations_research.pdlp.PrimalDualHybridGradientParams.RestartStrategy restart_strategy = 6 [default = ADAPTIVE_HEURISTIC];
  bool has_restart_strategy() const;
  void clear_restart_strategy() ;
  ::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy restart_strategy() const;
  void set_restart_strategy(::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy value);

  private:
  ::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy _internal_restart_strategy() const;
  void _internal_set_restart_strategy(::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy value);

  public:
  // optional double primal_weight_update_smoothing = 7 [default = 0.5];
  bool has_primal_weight_update_smoothing() const;
  void clear_primal_weight_update_smoothing() ;
  double primal_weight_update_smoothing() const;
  void set_primal_weight_update_smoothing(double value);

  private:
  double _internal_primal_weight_update_smoothing() const;
  void _internal_set_primal_weight_update_smoothing(double value);

  public:
  // optional int32 l_inf_ruiz_iterations = 9 [default = 5];
  bool has_l_inf_ruiz_iterations() const;
  void clear_l_inf_ruiz_iterations() ;
  ::int32_t l_inf_ruiz_iterations() const;
  void set_l_inf_ruiz_iterations(::int32_t value);

  private:
  ::int32_t _internal_l_inf_ruiz_iterations() const;
  void _internal_set_l_inf_ruiz_iterations(::int32_t value);

  public:
  // optional .operations_research.pdlp.PrimalDualHybridGradientParams.LinesearchRule linesearch_rule = 12 [default = ADAPTIVE_LINESEARCH_RULE];
  bool has_linesearch_rule() const;
  void clear_linesearch_rule() ;
  ::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule linesearch_rule() const;
  void set_linesearch_rule(::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule value);

  private:
  ::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule _internal_linesearch_rule() const;
  void _internal_set_linesearch_rule(::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule value);

  public:
  // optional double sufficient_reduction_for_restart = 11 [default = 0.1];
  bool has_sufficient_reduction_for_restart() const;
  void clear_sufficient_reduction_for_restart() ;
  double sufficient_reduction_for_restart() const;
  void set_sufficient_reduction_for_restart(double value);

  private:
  double _internal_sufficient_reduction_for_restart() const;
  void _internal_set_sufficient_reduction_for_restart(double value);

  public:
  // optional double necessary_reduction_for_restart = 17 [default = 0.9];
  bool has_necessary_reduction_for_restart() const;
  void clear_necessary_reduction_for_restart() ;
  double necessary_reduction_for_restart() const;
  void set_necessary_reduction_for_restart(double value);

  private:
  double _internal_necessary_reduction_for_restart() const;
  void _internal_set_necessary_reduction_for_restart(double value);

  public:
  // optional double infinite_constraint_bound_threshold = 22 [default = inf];
  bool has_infinite_constraint_bound_threshold() const;
  void clear_infinite_constraint_bound_threshold() ;
  double infinite_constraint_bound_threshold() const;
  void set_infinite_constraint_bound_threshold(double value);

  private:
  double _internal_infinite_constraint_bound_threshold() const;
  void _internal_set_infinite_constraint_bound_threshold(double value);

  public:
  // optional double diagonal_qp_trust_region_solver_tolerance = 24 [default = 1e-08];
  bool has_diagonal_qp_trust_region_solver_tolerance() const;
  void clear_diagonal_qp_trust_region_solver_tolerance() ;
  double diagonal_qp_trust_region_solver_tolerance() const;
  void set_diagonal_qp_trust_region_solver_tolerance(double value);

  private:
  double _internal_diagonal_qp_trust_region_solver_tolerance() const;
  void _internal_set_diagonal_qp_trust_region_solver_tolerance(double value);

  public:
  // optional double initial_step_size_scaling = 25 [default = 1];
  bool has_initial_step_size_scaling() const;
  void clear_initial_step_size_scaling() ;
  double initial_step_size_scaling() const;
  void set_initial_step_size_scaling(double value);

  private:
  double _internal_initial_step_size_scaling() const;
  void _internal_set_initial_step_size_scaling(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.pdlp.PrimalDualHybridGradientParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 26, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> random_projection_seeds_;
    mutable ::google::protobuf::internal::CachedSize _random_projection_seeds_cached_byte_size_;
    ::operations_research::pdlp::TerminationCriteria* termination_criteria_;
    ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* presolve_options_;
    ::operations_research::pdlp::AdaptiveLinesearchParams* adaptive_linesearch_parameters_;
    ::operations_research::pdlp::MalitskyPockParams* malitsky_pock_parameters_;
    double initial_primal_weight_;
    bool record_iteration_stats_;
    bool use_diagonal_qp_trust_region_solver_;
    bool use_feasibility_polishing_;
    ::int32_t verbosity_level_;
    double log_interval_seconds_;
    ::int32_t num_shards_;
    bool l2_norm_rescaling_;
    bool handle_some_primal_gradients_on_finite_bounds_as_residuals_;
    ::int32_t num_threads_;
    ::int32_t major_iteration_frequency_;
    ::int32_t termination_check_frequency_;
    int restart_strategy_;
    double primal_weight_update_smoothing_;
    ::int32_t l_inf_ruiz_iterations_;
    int linesearch_rule_;
    double sufficient_reduction_for_restart_;
    double necessary_reduction_for_restart_;
    double infinite_constraint_bound_threshold_;
    double diagonal_qp_trust_region_solver_tolerance_;
    double initial_step_size_scaling_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fpdlp_2fsolvers_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TerminationCriteria_SimpleOptimalityCriteria

// optional double eps_optimal_absolute = 1 [default = 1e-06];
inline bool TerminationCriteria_SimpleOptimalityCriteria::has_eps_optimal_absolute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TerminationCriteria_SimpleOptimalityCriteria::clear_eps_optimal_absolute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_absolute_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double TerminationCriteria_SimpleOptimalityCriteria::eps_optimal_absolute() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria.eps_optimal_absolute)
  return _internal_eps_optimal_absolute();
}
inline void TerminationCriteria_SimpleOptimalityCriteria::set_eps_optimal_absolute(double value) {
  _internal_set_eps_optimal_absolute(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria.eps_optimal_absolute)
}
inline double TerminationCriteria_SimpleOptimalityCriteria::_internal_eps_optimal_absolute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_absolute_;
}
inline void TerminationCriteria_SimpleOptimalityCriteria::_internal_set_eps_optimal_absolute(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.eps_optimal_absolute_ = value;
}

// optional double eps_optimal_relative = 2 [default = 1e-06];
inline bool TerminationCriteria_SimpleOptimalityCriteria::has_eps_optimal_relative() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TerminationCriteria_SimpleOptimalityCriteria::clear_eps_optimal_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_relative_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double TerminationCriteria_SimpleOptimalityCriteria::eps_optimal_relative() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria.eps_optimal_relative)
  return _internal_eps_optimal_relative();
}
inline void TerminationCriteria_SimpleOptimalityCriteria::set_eps_optimal_relative(double value) {
  _internal_set_eps_optimal_relative(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria.eps_optimal_relative)
}
inline double TerminationCriteria_SimpleOptimalityCriteria::_internal_eps_optimal_relative() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_relative_;
}
inline void TerminationCriteria_SimpleOptimalityCriteria::_internal_set_eps_optimal_relative(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.eps_optimal_relative_ = value;
}

// -------------------------------------------------------------------

// TerminationCriteria_DetailedOptimalityCriteria

// optional double eps_optimal_primal_residual_absolute = 1 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_primal_residual_absolute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_primal_residual_absolute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_primal_residual_absolute_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_primal_residual_absolute() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_primal_residual_absolute)
  return _internal_eps_optimal_primal_residual_absolute();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_primal_residual_absolute(double value) {
  _internal_set_eps_optimal_primal_residual_absolute(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_primal_residual_absolute)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_primal_residual_absolute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_primal_residual_absolute_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_primal_residual_absolute(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.eps_optimal_primal_residual_absolute_ = value;
}

// optional double eps_optimal_primal_residual_relative = 2 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_primal_residual_relative() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_primal_residual_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_primal_residual_relative_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_primal_residual_relative() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_primal_residual_relative)
  return _internal_eps_optimal_primal_residual_relative();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_primal_residual_relative(double value) {
  _internal_set_eps_optimal_primal_residual_relative(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_primal_residual_relative)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_primal_residual_relative() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_primal_residual_relative_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_primal_residual_relative(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.eps_optimal_primal_residual_relative_ = value;
}

// optional double eps_optimal_dual_residual_absolute = 3 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_dual_residual_absolute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_dual_residual_absolute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_dual_residual_absolute_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_dual_residual_absolute() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_dual_residual_absolute)
  return _internal_eps_optimal_dual_residual_absolute();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_dual_residual_absolute(double value) {
  _internal_set_eps_optimal_dual_residual_absolute(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_dual_residual_absolute)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_dual_residual_absolute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_dual_residual_absolute_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_dual_residual_absolute(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.eps_optimal_dual_residual_absolute_ = value;
}

// optional double eps_optimal_dual_residual_relative = 4 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_dual_residual_relative() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_dual_residual_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_dual_residual_relative_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_dual_residual_relative() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_dual_residual_relative)
  return _internal_eps_optimal_dual_residual_relative();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_dual_residual_relative(double value) {
  _internal_set_eps_optimal_dual_residual_relative(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_dual_residual_relative)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_dual_residual_relative() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_dual_residual_relative_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_dual_residual_relative(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.eps_optimal_dual_residual_relative_ = value;
}

// optional double eps_optimal_objective_gap_absolute = 5 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_objective_gap_absolute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_objective_gap_absolute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_objective_gap_absolute_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_objective_gap_absolute() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_objective_gap_absolute)
  return _internal_eps_optimal_objective_gap_absolute();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_objective_gap_absolute(double value) {
  _internal_set_eps_optimal_objective_gap_absolute(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_objective_gap_absolute)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_objective_gap_absolute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_objective_gap_absolute_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_objective_gap_absolute(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.eps_optimal_objective_gap_absolute_ = value;
}

// optional double eps_optimal_objective_gap_relative = 6 [default = 1e-06];
inline bool TerminationCriteria_DetailedOptimalityCriteria::has_eps_optimal_objective_gap_relative() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::clear_eps_optimal_objective_gap_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_objective_gap_relative_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double TerminationCriteria_DetailedOptimalityCriteria::eps_optimal_objective_gap_relative() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_objective_gap_relative)
  return _internal_eps_optimal_objective_gap_relative();
}
inline void TerminationCriteria_DetailedOptimalityCriteria::set_eps_optimal_objective_gap_relative(double value) {
  _internal_set_eps_optimal_objective_gap_relative(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria.eps_optimal_objective_gap_relative)
}
inline double TerminationCriteria_DetailedOptimalityCriteria::_internal_eps_optimal_objective_gap_relative() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_objective_gap_relative_;
}
inline void TerminationCriteria_DetailedOptimalityCriteria::_internal_set_eps_optimal_objective_gap_relative(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.eps_optimal_objective_gap_relative_ = value;
}

// -------------------------------------------------------------------

// TerminationCriteria

// optional .operations_research.pdlp.OptimalityNorm optimality_norm = 1 [default = OPTIMALITY_NORM_L2];
inline bool TerminationCriteria::has_optimality_norm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TerminationCriteria::clear_optimality_norm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.optimality_norm_ = 2;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::operations_research::pdlp::OptimalityNorm TerminationCriteria::optimality_norm() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.optimality_norm)
  return _internal_optimality_norm();
}
inline void TerminationCriteria::set_optimality_norm(::operations_research::pdlp::OptimalityNorm value) {
  _internal_set_optimality_norm(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.optimality_norm)
}
inline ::operations_research::pdlp::OptimalityNorm TerminationCriteria::_internal_optimality_norm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::operations_research::pdlp::OptimalityNorm>(_impl_.optimality_norm_);
}
inline void TerminationCriteria::_internal_set_optimality_norm(::operations_research::pdlp::OptimalityNorm value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::operations_research::pdlp::OptimalityNorm_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.optimality_norm_ = value;
}

// .operations_research.pdlp.TerminationCriteria.SimpleOptimalityCriteria simple_optimality_criteria = 9;
inline bool TerminationCriteria::has_simple_optimality_criteria() const {
  return optimality_criteria_case() == kSimpleOptimalityCriteria;
}
inline bool TerminationCriteria::_internal_has_simple_optimality_criteria() const {
  return optimality_criteria_case() == kSimpleOptimalityCriteria;
}
inline void TerminationCriteria::set_has_simple_optimality_criteria() {
  _impl_._oneof_case_[0] = kSimpleOptimalityCriteria;
}
inline void TerminationCriteria::clear_simple_optimality_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (optimality_criteria_case() == kSimpleOptimalityCriteria) {
    if (GetArena() == nullptr) {
      delete _impl_.optimality_criteria_.simple_optimality_criteria_;
    }
    clear_has_optimality_criteria();
  }
}
inline ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* TerminationCriteria::release_simple_optimality_criteria() {
  // @@protoc_insertion_point(field_release:operations_research.pdlp.TerminationCriteria.simple_optimality_criteria)
  if (optimality_criteria_case() == kSimpleOptimalityCriteria) {
    clear_has_optimality_criteria();
    auto* temp = _impl_.optimality_criteria_.simple_optimality_criteria_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.optimality_criteria_.simple_optimality_criteria_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria& TerminationCriteria::_internal_simple_optimality_criteria() const {
  return optimality_criteria_case() == kSimpleOptimalityCriteria ? *_impl_.optimality_criteria_.simple_optimality_criteria_ : reinterpret_cast<::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria&>(::operations_research::pdlp::_TerminationCriteria_SimpleOptimalityCriteria_default_instance_);
}
inline const ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria& TerminationCriteria::simple_optimality_criteria() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.simple_optimality_criteria)
  return _internal_simple_optimality_criteria();
}
inline ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* TerminationCriteria::unsafe_arena_release_simple_optimality_criteria() {
  // @@protoc_insertion_point(field_unsafe_arena_release:operations_research.pdlp.TerminationCriteria.simple_optimality_criteria)
  if (optimality_criteria_case() == kSimpleOptimalityCriteria) {
    clear_has_optimality_criteria();
    auto* temp = _impl_.optimality_criteria_.simple_optimality_criteria_;
    _impl_.optimality_criteria_.simple_optimality_criteria_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TerminationCriteria::unsafe_arena_set_allocated_simple_optimality_criteria(::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_optimality_criteria();
  if (value) {
    set_has_simple_optimality_criteria();
    _impl_.optimality_criteria_.simple_optimality_criteria_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.TerminationCriteria.simple_optimality_criteria)
}
inline ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* TerminationCriteria::_internal_mutable_simple_optimality_criteria() {
  if (optimality_criteria_case() != kSimpleOptimalityCriteria) {
    clear_optimality_criteria();
    set_has_simple_optimality_criteria();
    _impl_.optimality_criteria_.simple_optimality_criteria_ = CreateMaybeMessage<::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria>(GetArena());
  }
  return _impl_.optimality_criteria_.simple_optimality_criteria_;
}
inline ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* TerminationCriteria::mutable_simple_optimality_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::TerminationCriteria_SimpleOptimalityCriteria* _msg = _internal_mutable_simple_optimality_criteria();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.TerminationCriteria.simple_optimality_criteria)
  return _msg;
}

// .operations_research.pdlp.TerminationCriteria.DetailedOptimalityCriteria detailed_optimality_criteria = 10;
inline bool TerminationCriteria::has_detailed_optimality_criteria() const {
  return optimality_criteria_case() == kDetailedOptimalityCriteria;
}
inline bool TerminationCriteria::_internal_has_detailed_optimality_criteria() const {
  return optimality_criteria_case() == kDetailedOptimalityCriteria;
}
inline void TerminationCriteria::set_has_detailed_optimality_criteria() {
  _impl_._oneof_case_[0] = kDetailedOptimalityCriteria;
}
inline void TerminationCriteria::clear_detailed_optimality_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (optimality_criteria_case() == kDetailedOptimalityCriteria) {
    if (GetArena() == nullptr) {
      delete _impl_.optimality_criteria_.detailed_optimality_criteria_;
    }
    clear_has_optimality_criteria();
  }
}
inline ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* TerminationCriteria::release_detailed_optimality_criteria() {
  // @@protoc_insertion_point(field_release:operations_research.pdlp.TerminationCriteria.detailed_optimality_criteria)
  if (optimality_criteria_case() == kDetailedOptimalityCriteria) {
    clear_has_optimality_criteria();
    auto* temp = _impl_.optimality_criteria_.detailed_optimality_criteria_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.optimality_criteria_.detailed_optimality_criteria_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria& TerminationCriteria::_internal_detailed_optimality_criteria() const {
  return optimality_criteria_case() == kDetailedOptimalityCriteria ? *_impl_.optimality_criteria_.detailed_optimality_criteria_ : reinterpret_cast<::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria&>(::operations_research::pdlp::_TerminationCriteria_DetailedOptimalityCriteria_default_instance_);
}
inline const ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria& TerminationCriteria::detailed_optimality_criteria() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.detailed_optimality_criteria)
  return _internal_detailed_optimality_criteria();
}
inline ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* TerminationCriteria::unsafe_arena_release_detailed_optimality_criteria() {
  // @@protoc_insertion_point(field_unsafe_arena_release:operations_research.pdlp.TerminationCriteria.detailed_optimality_criteria)
  if (optimality_criteria_case() == kDetailedOptimalityCriteria) {
    clear_has_optimality_criteria();
    auto* temp = _impl_.optimality_criteria_.detailed_optimality_criteria_;
    _impl_.optimality_criteria_.detailed_optimality_criteria_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TerminationCriteria::unsafe_arena_set_allocated_detailed_optimality_criteria(::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_optimality_criteria();
  if (value) {
    set_has_detailed_optimality_criteria();
    _impl_.optimality_criteria_.detailed_optimality_criteria_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.TerminationCriteria.detailed_optimality_criteria)
}
inline ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* TerminationCriteria::_internal_mutable_detailed_optimality_criteria() {
  if (optimality_criteria_case() != kDetailedOptimalityCriteria) {
    clear_optimality_criteria();
    set_has_detailed_optimality_criteria();
    _impl_.optimality_criteria_.detailed_optimality_criteria_ = CreateMaybeMessage<::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria>(GetArena());
  }
  return _impl_.optimality_criteria_.detailed_optimality_criteria_;
}
inline ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* TerminationCriteria::mutable_detailed_optimality_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::TerminationCriteria_DetailedOptimalityCriteria* _msg = _internal_mutable_detailed_optimality_criteria();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.TerminationCriteria.detailed_optimality_criteria)
  return _msg;
}

// optional double eps_optimal_absolute = 2 [default = 1e-06, deprecated = true];
inline bool TerminationCriteria::has_eps_optimal_absolute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TerminationCriteria::clear_eps_optimal_absolute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_absolute_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double TerminationCriteria::eps_optimal_absolute() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.eps_optimal_absolute)
  return _internal_eps_optimal_absolute();
}
inline void TerminationCriteria::set_eps_optimal_absolute(double value) {
  _internal_set_eps_optimal_absolute(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.eps_optimal_absolute)
}
inline double TerminationCriteria::_internal_eps_optimal_absolute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_absolute_;
}
inline void TerminationCriteria::_internal_set_eps_optimal_absolute(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.eps_optimal_absolute_ = value;
}

// optional double eps_optimal_relative = 3 [default = 1e-06, deprecated = true];
inline bool TerminationCriteria::has_eps_optimal_relative() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TerminationCriteria::clear_eps_optimal_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_optimal_relative_ = 1e-06;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double TerminationCriteria::eps_optimal_relative() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.eps_optimal_relative)
  return _internal_eps_optimal_relative();
}
inline void TerminationCriteria::set_eps_optimal_relative(double value) {
  _internal_set_eps_optimal_relative(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.eps_optimal_relative)
}
inline double TerminationCriteria::_internal_eps_optimal_relative() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_optimal_relative_;
}
inline void TerminationCriteria::_internal_set_eps_optimal_relative(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.eps_optimal_relative_ = value;
}

// optional double eps_primal_infeasible = 4 [default = 1e-08];
inline bool TerminationCriteria::has_eps_primal_infeasible() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TerminationCriteria::clear_eps_primal_infeasible() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_primal_infeasible_ = 1e-08;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double TerminationCriteria::eps_primal_infeasible() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.eps_primal_infeasible)
  return _internal_eps_primal_infeasible();
}
inline void TerminationCriteria::set_eps_primal_infeasible(double value) {
  _internal_set_eps_primal_infeasible(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.eps_primal_infeasible)
}
inline double TerminationCriteria::_internal_eps_primal_infeasible() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_primal_infeasible_;
}
inline void TerminationCriteria::_internal_set_eps_primal_infeasible(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.eps_primal_infeasible_ = value;
}

// optional double eps_dual_infeasible = 5 [default = 1e-08];
inline bool TerminationCriteria::has_eps_dual_infeasible() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TerminationCriteria::clear_eps_dual_infeasible() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eps_dual_infeasible_ = 1e-08;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double TerminationCriteria::eps_dual_infeasible() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.eps_dual_infeasible)
  return _internal_eps_dual_infeasible();
}
inline void TerminationCriteria::set_eps_dual_infeasible(double value) {
  _internal_set_eps_dual_infeasible(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.eps_dual_infeasible)
}
inline double TerminationCriteria::_internal_eps_dual_infeasible() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eps_dual_infeasible_;
}
inline void TerminationCriteria::_internal_set_eps_dual_infeasible(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.eps_dual_infeasible_ = value;
}

// optional double time_sec_limit = 6 [default = inf];
inline bool TerminationCriteria::has_time_sec_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TerminationCriteria::clear_time_sec_limit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_sec_limit_ = std::numeric_limits<double>::infinity();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double TerminationCriteria::time_sec_limit() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.time_sec_limit)
  return _internal_time_sec_limit();
}
inline void TerminationCriteria::set_time_sec_limit(double value) {
  _internal_set_time_sec_limit(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.time_sec_limit)
}
inline double TerminationCriteria::_internal_time_sec_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_sec_limit_;
}
inline void TerminationCriteria::_internal_set_time_sec_limit(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.time_sec_limit_ = value;
}

// optional int32 iteration_limit = 7 [default = 2147483647];
inline bool TerminationCriteria::has_iteration_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TerminationCriteria::clear_iteration_limit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.iteration_limit_ = 2147483647;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t TerminationCriteria::iteration_limit() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.iteration_limit)
  return _internal_iteration_limit();
}
inline void TerminationCriteria::set_iteration_limit(::int32_t value) {
  _internal_set_iteration_limit(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.iteration_limit)
}
inline ::int32_t TerminationCriteria::_internal_iteration_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iteration_limit_;
}
inline void TerminationCriteria::_internal_set_iteration_limit(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.iteration_limit_ = value;
}

// optional double kkt_matrix_pass_limit = 8 [default = inf];
inline bool TerminationCriteria::has_kkt_matrix_pass_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TerminationCriteria::clear_kkt_matrix_pass_limit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kkt_matrix_pass_limit_ = std::numeric_limits<double>::infinity();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double TerminationCriteria::kkt_matrix_pass_limit() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.TerminationCriteria.kkt_matrix_pass_limit)
  return _internal_kkt_matrix_pass_limit();
}
inline void TerminationCriteria::set_kkt_matrix_pass_limit(double value) {
  _internal_set_kkt_matrix_pass_limit(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.TerminationCriteria.kkt_matrix_pass_limit)
}
inline double TerminationCriteria::_internal_kkt_matrix_pass_limit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kkt_matrix_pass_limit_;
}
inline void TerminationCriteria::_internal_set_kkt_matrix_pass_limit(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.kkt_matrix_pass_limit_ = value;
}

inline bool TerminationCriteria::has_optimality_criteria() const {
  return optimality_criteria_case() != OPTIMALITY_CRITERIA_NOT_SET;
}
inline void TerminationCriteria::clear_has_optimality_criteria() {
  _impl_._oneof_case_[0] = OPTIMALITY_CRITERIA_NOT_SET;
}
inline TerminationCriteria::OptimalityCriteriaCase TerminationCriteria::optimality_criteria_case() const {
  return TerminationCriteria::OptimalityCriteriaCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// AdaptiveLinesearchParams

// optional double step_size_reduction_exponent = 1 [default = 0.3];
inline bool AdaptiveLinesearchParams::has_step_size_reduction_exponent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AdaptiveLinesearchParams::clear_step_size_reduction_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_size_reduction_exponent_ = 0.3;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double AdaptiveLinesearchParams::step_size_reduction_exponent() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.AdaptiveLinesearchParams.step_size_reduction_exponent)
  return _internal_step_size_reduction_exponent();
}
inline void AdaptiveLinesearchParams::set_step_size_reduction_exponent(double value) {
  _internal_set_step_size_reduction_exponent(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.AdaptiveLinesearchParams.step_size_reduction_exponent)
}
inline double AdaptiveLinesearchParams::_internal_step_size_reduction_exponent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_size_reduction_exponent_;
}
inline void AdaptiveLinesearchParams::_internal_set_step_size_reduction_exponent(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.step_size_reduction_exponent_ = value;
}

// optional double step_size_growth_exponent = 2 [default = 0.6];
inline bool AdaptiveLinesearchParams::has_step_size_growth_exponent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AdaptiveLinesearchParams::clear_step_size_growth_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_size_growth_exponent_ = 0.6;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double AdaptiveLinesearchParams::step_size_growth_exponent() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.AdaptiveLinesearchParams.step_size_growth_exponent)
  return _internal_step_size_growth_exponent();
}
inline void AdaptiveLinesearchParams::set_step_size_growth_exponent(double value) {
  _internal_set_step_size_growth_exponent(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.AdaptiveLinesearchParams.step_size_growth_exponent)
}
inline double AdaptiveLinesearchParams::_internal_step_size_growth_exponent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_size_growth_exponent_;
}
inline void AdaptiveLinesearchParams::_internal_set_step_size_growth_exponent(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.step_size_growth_exponent_ = value;
}

// -------------------------------------------------------------------

// MalitskyPockParams

// optional double step_size_downscaling_factor = 1 [default = 0.7];
inline bool MalitskyPockParams::has_step_size_downscaling_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MalitskyPockParams::clear_step_size_downscaling_factor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_size_downscaling_factor_ = 0.7;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double MalitskyPockParams::step_size_downscaling_factor() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.MalitskyPockParams.step_size_downscaling_factor)
  return _internal_step_size_downscaling_factor();
}
inline void MalitskyPockParams::set_step_size_downscaling_factor(double value) {
  _internal_set_step_size_downscaling_factor(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.MalitskyPockParams.step_size_downscaling_factor)
}
inline double MalitskyPockParams::_internal_step_size_downscaling_factor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_size_downscaling_factor_;
}
inline void MalitskyPockParams::_internal_set_step_size_downscaling_factor(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.step_size_downscaling_factor_ = value;
}

// optional double linesearch_contraction_factor = 2 [default = 0.99];
inline bool MalitskyPockParams::has_linesearch_contraction_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MalitskyPockParams::clear_linesearch_contraction_factor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.linesearch_contraction_factor_ = 0.99;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double MalitskyPockParams::linesearch_contraction_factor() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.MalitskyPockParams.linesearch_contraction_factor)
  return _internal_linesearch_contraction_factor();
}
inline void MalitskyPockParams::set_linesearch_contraction_factor(double value) {
  _internal_set_linesearch_contraction_factor(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.MalitskyPockParams.linesearch_contraction_factor)
}
inline double MalitskyPockParams::_internal_linesearch_contraction_factor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linesearch_contraction_factor_;
}
inline void MalitskyPockParams::_internal_set_linesearch_contraction_factor(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.linesearch_contraction_factor_ = value;
}

// optional double step_size_interpolation = 3 [default = 1];
inline bool MalitskyPockParams::has_step_size_interpolation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void MalitskyPockParams::clear_step_size_interpolation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_size_interpolation_ = 1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double MalitskyPockParams::step_size_interpolation() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.MalitskyPockParams.step_size_interpolation)
  return _internal_step_size_interpolation();
}
inline void MalitskyPockParams::set_step_size_interpolation(double value) {
  _internal_set_step_size_interpolation(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.MalitskyPockParams.step_size_interpolation)
}
inline double MalitskyPockParams::_internal_step_size_interpolation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_size_interpolation_;
}
inline void MalitskyPockParams::_internal_set_step_size_interpolation(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.step_size_interpolation_ = value;
}

// -------------------------------------------------------------------

// PrimalDualHybridGradientParams_PresolveOptions

// optional bool use_glop = 1;
inline bool PrimalDualHybridGradientParams_PresolveOptions::has_use_glop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams_PresolveOptions::clear_use_glop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.use_glop_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PrimalDualHybridGradientParams_PresolveOptions::use_glop() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.use_glop)
  return _internal_use_glop();
}
inline void PrimalDualHybridGradientParams_PresolveOptions::set_use_glop(bool value) {
  _internal_set_use_glop(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.use_glop)
}
inline bool PrimalDualHybridGradientParams_PresolveOptions::_internal_use_glop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.use_glop_;
}
inline void PrimalDualHybridGradientParams_PresolveOptions::_internal_set_use_glop(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.use_glop_ = value;
}

// optional .operations_research.glop.GlopParameters glop_parameters = 2;
inline bool PrimalDualHybridGradientParams_PresolveOptions::has_glop_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.glop_parameters_ != nullptr);
  return value;
}
inline const ::operations_research::glop::GlopParameters& PrimalDualHybridGradientParams_PresolveOptions::_internal_glop_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::glop::GlopParameters* p = _impl_.glop_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::glop::GlopParameters&>(::operations_research::glop::_GlopParameters_default_instance_);
}
inline const ::operations_research::glop::GlopParameters& PrimalDualHybridGradientParams_PresolveOptions::glop_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.glop_parameters)
  return _internal_glop_parameters();
}
inline void PrimalDualHybridGradientParams_PresolveOptions::unsafe_arena_set_allocated_glop_parameters(::operations_research::glop::GlopParameters* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.glop_parameters_);
  }
  _impl_.glop_parameters_ = reinterpret_cast<::operations_research::glop::GlopParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.glop_parameters)
}
inline ::operations_research::glop::GlopParameters* PrimalDualHybridGradientParams_PresolveOptions::release_glop_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::glop::GlopParameters* released = _impl_.glop_parameters_;
  _impl_.glop_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::glop::GlopParameters* PrimalDualHybridGradientParams_PresolveOptions::unsafe_arena_release_glop_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.glop_parameters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::glop::GlopParameters* temp = _impl_.glop_parameters_;
  _impl_.glop_parameters_ = nullptr;
  return temp;
}
inline ::operations_research::glop::GlopParameters* PrimalDualHybridGradientParams_PresolveOptions::_internal_mutable_glop_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.glop_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::glop::GlopParameters>(GetArena());
    _impl_.glop_parameters_ = reinterpret_cast<::operations_research::glop::GlopParameters*>(p);
  }
  return _impl_.glop_parameters_;
}
inline ::operations_research::glop::GlopParameters* PrimalDualHybridGradientParams_PresolveOptions::mutable_glop_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::glop::GlopParameters* _msg = _internal_mutable_glop_parameters();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.glop_parameters)
  return _msg;
}
inline void PrimalDualHybridGradientParams_PresolveOptions::set_allocated_glop_parameters(::operations_research::glop::GlopParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.glop_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.glop_parameters_ = reinterpret_cast<::operations_research::glop::GlopParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions.glop_parameters)
}

// -------------------------------------------------------------------

// PrimalDualHybridGradientParams

// optional .operations_research.pdlp.TerminationCriteria termination_criteria = 1;
inline bool PrimalDualHybridGradientParams::has_termination_criteria() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.termination_criteria_ != nullptr);
  return value;
}
inline void PrimalDualHybridGradientParams::clear_termination_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.termination_criteria_ != nullptr) _impl_.termination_criteria_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::operations_research::pdlp::TerminationCriteria& PrimalDualHybridGradientParams::_internal_termination_criteria() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::pdlp::TerminationCriteria* p = _impl_.termination_criteria_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::pdlp::TerminationCriteria&>(::operations_research::pdlp::_TerminationCriteria_default_instance_);
}
inline const ::operations_research::pdlp::TerminationCriteria& PrimalDualHybridGradientParams::termination_criteria() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.termination_criteria)
  return _internal_termination_criteria();
}
inline void PrimalDualHybridGradientParams::unsafe_arena_set_allocated_termination_criteria(::operations_research::pdlp::TerminationCriteria* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.termination_criteria_);
  }
  _impl_.termination_criteria_ = reinterpret_cast<::operations_research::pdlp::TerminationCriteria*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.termination_criteria)
}
inline ::operations_research::pdlp::TerminationCriteria* PrimalDualHybridGradientParams::release_termination_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::pdlp::TerminationCriteria* released = _impl_.termination_criteria_;
  _impl_.termination_criteria_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::pdlp::TerminationCriteria* PrimalDualHybridGradientParams::unsafe_arena_release_termination_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.pdlp.PrimalDualHybridGradientParams.termination_criteria)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::pdlp::TerminationCriteria* temp = _impl_.termination_criteria_;
  _impl_.termination_criteria_ = nullptr;
  return temp;
}
inline ::operations_research::pdlp::TerminationCriteria* PrimalDualHybridGradientParams::_internal_mutable_termination_criteria() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.termination_criteria_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::pdlp::TerminationCriteria>(GetArena());
    _impl_.termination_criteria_ = reinterpret_cast<::operations_research::pdlp::TerminationCriteria*>(p);
  }
  return _impl_.termination_criteria_;
}
inline ::operations_research::pdlp::TerminationCriteria* PrimalDualHybridGradientParams::mutable_termination_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::TerminationCriteria* _msg = _internal_mutable_termination_criteria();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.PrimalDualHybridGradientParams.termination_criteria)
  return _msg;
}
inline void PrimalDualHybridGradientParams::set_allocated_termination_criteria(::operations_research::pdlp::TerminationCriteria* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::pdlp::TerminationCriteria*>(_impl_.termination_criteria_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::pdlp::TerminationCriteria*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.termination_criteria_ = reinterpret_cast<::operations_research::pdlp::TerminationCriteria*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.termination_criteria)
}

// optional int32 num_threads = 2 [default = 1];
inline bool PrimalDualHybridGradientParams::has_num_threads() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_num_threads() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.num_threads_ = 1;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t PrimalDualHybridGradientParams::num_threads() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.num_threads)
  return _internal_num_threads();
}
inline void PrimalDualHybridGradientParams::set_num_threads(::int32_t value) {
  _internal_set_num_threads(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.num_threads)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_num_threads() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_threads_;
}
inline void PrimalDualHybridGradientParams::_internal_set_num_threads(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.num_threads_ = value;
}

// optional int32 num_shards = 27 [default = 0];
inline bool PrimalDualHybridGradientParams::has_num_shards() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_num_shards() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.num_shards_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t PrimalDualHybridGradientParams::num_shards() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.num_shards)
  return _internal_num_shards();
}
inline void PrimalDualHybridGradientParams::set_num_shards(::int32_t value) {
  _internal_set_num_shards(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.num_shards)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_num_shards() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_shards_;
}
inline void PrimalDualHybridGradientParams::_internal_set_num_shards(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.num_shards_ = value;
}

// optional bool record_iteration_stats = 3;
inline bool PrimalDualHybridGradientParams::has_record_iteration_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_record_iteration_stats() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_iteration_stats_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool PrimalDualHybridGradientParams::record_iteration_stats() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.record_iteration_stats)
  return _internal_record_iteration_stats();
}
inline void PrimalDualHybridGradientParams::set_record_iteration_stats(bool value) {
  _internal_set_record_iteration_stats(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.record_iteration_stats)
}
inline bool PrimalDualHybridGradientParams::_internal_record_iteration_stats() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_iteration_stats_;
}
inline void PrimalDualHybridGradientParams::_internal_set_record_iteration_stats(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.record_iteration_stats_ = value;
}

// optional int32 verbosity_level = 26 [default = 0];
inline bool PrimalDualHybridGradientParams::has_verbosity_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_verbosity_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.verbosity_level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t PrimalDualHybridGradientParams::verbosity_level() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.verbosity_level)
  return _internal_verbosity_level();
}
inline void PrimalDualHybridGradientParams::set_verbosity_level(::int32_t value) {
  _internal_set_verbosity_level(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.verbosity_level)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_verbosity_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.verbosity_level_;
}
inline void PrimalDualHybridGradientParams::_internal_set_verbosity_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.verbosity_level_ = value;
}

// optional double log_interval_seconds = 31 [default = 0];
inline bool PrimalDualHybridGradientParams::has_log_interval_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_log_interval_seconds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_interval_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline double PrimalDualHybridGradientParams::log_interval_seconds() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.log_interval_seconds)
  return _internal_log_interval_seconds();
}
inline void PrimalDualHybridGradientParams::set_log_interval_seconds(double value) {
  _internal_set_log_interval_seconds(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.log_interval_seconds)
}
inline double PrimalDualHybridGradientParams::_internal_log_interval_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_interval_seconds_;
}
inline void PrimalDualHybridGradientParams::_internal_set_log_interval_seconds(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.log_interval_seconds_ = value;
}

// optional int32 major_iteration_frequency = 4 [default = 64];
inline bool PrimalDualHybridGradientParams::has_major_iteration_frequency() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_major_iteration_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.major_iteration_frequency_ = 64;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t PrimalDualHybridGradientParams::major_iteration_frequency() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.major_iteration_frequency)
  return _internal_major_iteration_frequency();
}
inline void PrimalDualHybridGradientParams::set_major_iteration_frequency(::int32_t value) {
  _internal_set_major_iteration_frequency(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.major_iteration_frequency)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_major_iteration_frequency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.major_iteration_frequency_;
}
inline void PrimalDualHybridGradientParams::_internal_set_major_iteration_frequency(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.major_iteration_frequency_ = value;
}

// optional int32 termination_check_frequency = 5 [default = 64];
inline bool PrimalDualHybridGradientParams::has_termination_check_frequency() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_termination_check_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.termination_check_frequency_ = 64;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::int32_t PrimalDualHybridGradientParams::termination_check_frequency() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.termination_check_frequency)
  return _internal_termination_check_frequency();
}
inline void PrimalDualHybridGradientParams::set_termination_check_frequency(::int32_t value) {
  _internal_set_termination_check_frequency(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.termination_check_frequency)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_termination_check_frequency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.termination_check_frequency_;
}
inline void PrimalDualHybridGradientParams::_internal_set_termination_check_frequency(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.termination_check_frequency_ = value;
}

// optional .operations_research.pdlp.PrimalDualHybridGradientParams.RestartStrategy restart_strategy = 6 [default = ADAPTIVE_HEURISTIC];
inline bool PrimalDualHybridGradientParams::has_restart_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_restart_strategy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.restart_strategy_ = 3;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy PrimalDualHybridGradientParams::restart_strategy() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.restart_strategy)
  return _internal_restart_strategy();
}
inline void PrimalDualHybridGradientParams::set_restart_strategy(::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy value) {
  _internal_set_restart_strategy(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.restart_strategy)
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy PrimalDualHybridGradientParams::_internal_restart_strategy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy>(_impl_.restart_strategy_);
}
inline void PrimalDualHybridGradientParams::_internal_set_restart_strategy(::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy_IsValid(value));
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.restart_strategy_ = value;
}

// optional double primal_weight_update_smoothing = 7 [default = 0.5];
inline bool PrimalDualHybridGradientParams::has_primal_weight_update_smoothing() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_primal_weight_update_smoothing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primal_weight_update_smoothing_ = 0.5;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline double PrimalDualHybridGradientParams::primal_weight_update_smoothing() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.primal_weight_update_smoothing)
  return _internal_primal_weight_update_smoothing();
}
inline void PrimalDualHybridGradientParams::set_primal_weight_update_smoothing(double value) {
  _internal_set_primal_weight_update_smoothing(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.primal_weight_update_smoothing)
}
inline double PrimalDualHybridGradientParams::_internal_primal_weight_update_smoothing() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.primal_weight_update_smoothing_;
}
inline void PrimalDualHybridGradientParams::_internal_set_primal_weight_update_smoothing(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.primal_weight_update_smoothing_ = value;
}

// optional double initial_primal_weight = 8;
inline bool PrimalDualHybridGradientParams::has_initial_primal_weight() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_initial_primal_weight() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initial_primal_weight_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double PrimalDualHybridGradientParams::initial_primal_weight() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.initial_primal_weight)
  return _internal_initial_primal_weight();
}
inline void PrimalDualHybridGradientParams::set_initial_primal_weight(double value) {
  _internal_set_initial_primal_weight(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.initial_primal_weight)
}
inline double PrimalDualHybridGradientParams::_internal_initial_primal_weight() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.initial_primal_weight_;
}
inline void PrimalDualHybridGradientParams::_internal_set_initial_primal_weight(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.initial_primal_weight_ = value;
}

// optional .operations_research.pdlp.PrimalDualHybridGradientParams.PresolveOptions presolve_options = 16;
inline bool PrimalDualHybridGradientParams::has_presolve_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.presolve_options_ != nullptr);
  return value;
}
inline void PrimalDualHybridGradientParams::clear_presolve_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.presolve_options_ != nullptr) _impl_.presolve_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions& PrimalDualHybridGradientParams::_internal_presolve_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* p = _impl_.presolve_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions&>(::operations_research::pdlp::_PrimalDualHybridGradientParams_PresolveOptions_default_instance_);
}
inline const ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions& PrimalDualHybridGradientParams::presolve_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.presolve_options)
  return _internal_presolve_options();
}
inline void PrimalDualHybridGradientParams::unsafe_arena_set_allocated_presolve_options(::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.presolve_options_);
  }
  _impl_.presolve_options_ = reinterpret_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.presolve_options)
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* PrimalDualHybridGradientParams::release_presolve_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* released = _impl_.presolve_options_;
  _impl_.presolve_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* PrimalDualHybridGradientParams::unsafe_arena_release_presolve_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.pdlp.PrimalDualHybridGradientParams.presolve_options)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* temp = _impl_.presolve_options_;
  _impl_.presolve_options_ = nullptr;
  return temp;
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* PrimalDualHybridGradientParams::_internal_mutable_presolve_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.presolve_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions>(GetArena());
    _impl_.presolve_options_ = reinterpret_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions*>(p);
  }
  return _impl_.presolve_options_;
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* PrimalDualHybridGradientParams::mutable_presolve_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* _msg = _internal_mutable_presolve_options();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.PrimalDualHybridGradientParams.presolve_options)
  return _msg;
}
inline void PrimalDualHybridGradientParams::set_allocated_presolve_options(::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions*>(_impl_.presolve_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.presolve_options_ = reinterpret_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_PresolveOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.presolve_options)
}

// optional int32 l_inf_ruiz_iterations = 9 [default = 5];
inline bool PrimalDualHybridGradientParams::has_l_inf_ruiz_iterations() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_l_inf_ruiz_iterations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.l_inf_ruiz_iterations_ = 5;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int32_t PrimalDualHybridGradientParams::l_inf_ruiz_iterations() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.l_inf_ruiz_iterations)
  return _internal_l_inf_ruiz_iterations();
}
inline void PrimalDualHybridGradientParams::set_l_inf_ruiz_iterations(::int32_t value) {
  _internal_set_l_inf_ruiz_iterations(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.l_inf_ruiz_iterations)
}
inline ::int32_t PrimalDualHybridGradientParams::_internal_l_inf_ruiz_iterations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.l_inf_ruiz_iterations_;
}
inline void PrimalDualHybridGradientParams::_internal_set_l_inf_ruiz_iterations(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.l_inf_ruiz_iterations_ = value;
}

// optional bool l2_norm_rescaling = 10 [default = true];
inline bool PrimalDualHybridGradientParams::has_l2_norm_rescaling() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_l2_norm_rescaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.l2_norm_rescaling_ = true;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool PrimalDualHybridGradientParams::l2_norm_rescaling() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.l2_norm_rescaling)
  return _internal_l2_norm_rescaling();
}
inline void PrimalDualHybridGradientParams::set_l2_norm_rescaling(bool value) {
  _internal_set_l2_norm_rescaling(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.l2_norm_rescaling)
}
inline bool PrimalDualHybridGradientParams::_internal_l2_norm_rescaling() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.l2_norm_rescaling_;
}
inline void PrimalDualHybridGradientParams::_internal_set_l2_norm_rescaling(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.l2_norm_rescaling_ = value;
}

// optional double sufficient_reduction_for_restart = 11 [default = 0.1];
inline bool PrimalDualHybridGradientParams::has_sufficient_reduction_for_restart() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_sufficient_reduction_for_restart() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sufficient_reduction_for_restart_ = 0.1;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline double PrimalDualHybridGradientParams::sufficient_reduction_for_restart() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.sufficient_reduction_for_restart)
  return _internal_sufficient_reduction_for_restart();
}
inline void PrimalDualHybridGradientParams::set_sufficient_reduction_for_restart(double value) {
  _internal_set_sufficient_reduction_for_restart(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.sufficient_reduction_for_restart)
}
inline double PrimalDualHybridGradientParams::_internal_sufficient_reduction_for_restart() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sufficient_reduction_for_restart_;
}
inline void PrimalDualHybridGradientParams::_internal_set_sufficient_reduction_for_restart(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.sufficient_reduction_for_restart_ = value;
}

// optional double necessary_reduction_for_restart = 17 [default = 0.9];
inline bool PrimalDualHybridGradientParams::has_necessary_reduction_for_restart() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_necessary_reduction_for_restart() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.necessary_reduction_for_restart_ = 0.9;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline double PrimalDualHybridGradientParams::necessary_reduction_for_restart() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.necessary_reduction_for_restart)
  return _internal_necessary_reduction_for_restart();
}
inline void PrimalDualHybridGradientParams::set_necessary_reduction_for_restart(double value) {
  _internal_set_necessary_reduction_for_restart(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.necessary_reduction_for_restart)
}
inline double PrimalDualHybridGradientParams::_internal_necessary_reduction_for_restart() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.necessary_reduction_for_restart_;
}
inline void PrimalDualHybridGradientParams::_internal_set_necessary_reduction_for_restart(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.necessary_reduction_for_restart_ = value;
}

// optional .operations_research.pdlp.PrimalDualHybridGradientParams.LinesearchRule linesearch_rule = 12 [default = ADAPTIVE_LINESEARCH_RULE];
inline bool PrimalDualHybridGradientParams::has_linesearch_rule() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_linesearch_rule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.linesearch_rule_ = 1;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule PrimalDualHybridGradientParams::linesearch_rule() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.linesearch_rule)
  return _internal_linesearch_rule();
}
inline void PrimalDualHybridGradientParams::set_linesearch_rule(::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule value) {
  _internal_set_linesearch_rule(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.linesearch_rule)
}
inline ::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule PrimalDualHybridGradientParams::_internal_linesearch_rule() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule>(_impl_.linesearch_rule_);
}
inline void PrimalDualHybridGradientParams::_internal_set_linesearch_rule(::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule_IsValid(value));
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.linesearch_rule_ = value;
}

// optional .operations_research.pdlp.AdaptiveLinesearchParams adaptive_linesearch_parameters = 18;
inline bool PrimalDualHybridGradientParams::has_adaptive_linesearch_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.adaptive_linesearch_parameters_ != nullptr);
  return value;
}
inline void PrimalDualHybridGradientParams::clear_adaptive_linesearch_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.adaptive_linesearch_parameters_ != nullptr) _impl_.adaptive_linesearch_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::operations_research::pdlp::AdaptiveLinesearchParams& PrimalDualHybridGradientParams::_internal_adaptive_linesearch_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::pdlp::AdaptiveLinesearchParams* p = _impl_.adaptive_linesearch_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::pdlp::AdaptiveLinesearchParams&>(::operations_research::pdlp::_AdaptiveLinesearchParams_default_instance_);
}
inline const ::operations_research::pdlp::AdaptiveLinesearchParams& PrimalDualHybridGradientParams::adaptive_linesearch_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.adaptive_linesearch_parameters)
  return _internal_adaptive_linesearch_parameters();
}
inline void PrimalDualHybridGradientParams::unsafe_arena_set_allocated_adaptive_linesearch_parameters(::operations_research::pdlp::AdaptiveLinesearchParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.adaptive_linesearch_parameters_);
  }
  _impl_.adaptive_linesearch_parameters_ = reinterpret_cast<::operations_research::pdlp::AdaptiveLinesearchParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.adaptive_linesearch_parameters)
}
inline ::operations_research::pdlp::AdaptiveLinesearchParams* PrimalDualHybridGradientParams::release_adaptive_linesearch_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::pdlp::AdaptiveLinesearchParams* released = _impl_.adaptive_linesearch_parameters_;
  _impl_.adaptive_linesearch_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::pdlp::AdaptiveLinesearchParams* PrimalDualHybridGradientParams::unsafe_arena_release_adaptive_linesearch_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.pdlp.PrimalDualHybridGradientParams.adaptive_linesearch_parameters)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::pdlp::AdaptiveLinesearchParams* temp = _impl_.adaptive_linesearch_parameters_;
  _impl_.adaptive_linesearch_parameters_ = nullptr;
  return temp;
}
inline ::operations_research::pdlp::AdaptiveLinesearchParams* PrimalDualHybridGradientParams::_internal_mutable_adaptive_linesearch_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.adaptive_linesearch_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::pdlp::AdaptiveLinesearchParams>(GetArena());
    _impl_.adaptive_linesearch_parameters_ = reinterpret_cast<::operations_research::pdlp::AdaptiveLinesearchParams*>(p);
  }
  return _impl_.adaptive_linesearch_parameters_;
}
inline ::operations_research::pdlp::AdaptiveLinesearchParams* PrimalDualHybridGradientParams::mutable_adaptive_linesearch_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::AdaptiveLinesearchParams* _msg = _internal_mutable_adaptive_linesearch_parameters();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.PrimalDualHybridGradientParams.adaptive_linesearch_parameters)
  return _msg;
}
inline void PrimalDualHybridGradientParams::set_allocated_adaptive_linesearch_parameters(::operations_research::pdlp::AdaptiveLinesearchParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::pdlp::AdaptiveLinesearchParams*>(_impl_.adaptive_linesearch_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::pdlp::AdaptiveLinesearchParams*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.adaptive_linesearch_parameters_ = reinterpret_cast<::operations_research::pdlp::AdaptiveLinesearchParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.adaptive_linesearch_parameters)
}

// optional .operations_research.pdlp.MalitskyPockParams malitsky_pock_parameters = 19;
inline bool PrimalDualHybridGradientParams::has_malitsky_pock_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.malitsky_pock_parameters_ != nullptr);
  return value;
}
inline void PrimalDualHybridGradientParams::clear_malitsky_pock_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.malitsky_pock_parameters_ != nullptr) _impl_.malitsky_pock_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::operations_research::pdlp::MalitskyPockParams& PrimalDualHybridGradientParams::_internal_malitsky_pock_parameters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::pdlp::MalitskyPockParams* p = _impl_.malitsky_pock_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::pdlp::MalitskyPockParams&>(::operations_research::pdlp::_MalitskyPockParams_default_instance_);
}
inline const ::operations_research::pdlp::MalitskyPockParams& PrimalDualHybridGradientParams::malitsky_pock_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.malitsky_pock_parameters)
  return _internal_malitsky_pock_parameters();
}
inline void PrimalDualHybridGradientParams::unsafe_arena_set_allocated_malitsky_pock_parameters(::operations_research::pdlp::MalitskyPockParams* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.malitsky_pock_parameters_);
  }
  _impl_.malitsky_pock_parameters_ = reinterpret_cast<::operations_research::pdlp::MalitskyPockParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.malitsky_pock_parameters)
}
inline ::operations_research::pdlp::MalitskyPockParams* PrimalDualHybridGradientParams::release_malitsky_pock_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::pdlp::MalitskyPockParams* released = _impl_.malitsky_pock_parameters_;
  _impl_.malitsky_pock_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::pdlp::MalitskyPockParams* PrimalDualHybridGradientParams::unsafe_arena_release_malitsky_pock_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.pdlp.PrimalDualHybridGradientParams.malitsky_pock_parameters)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::pdlp::MalitskyPockParams* temp = _impl_.malitsky_pock_parameters_;
  _impl_.malitsky_pock_parameters_ = nullptr;
  return temp;
}
inline ::operations_research::pdlp::MalitskyPockParams* PrimalDualHybridGradientParams::_internal_mutable_malitsky_pock_parameters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.malitsky_pock_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::pdlp::MalitskyPockParams>(GetArena());
    _impl_.malitsky_pock_parameters_ = reinterpret_cast<::operations_research::pdlp::MalitskyPockParams*>(p);
  }
  return _impl_.malitsky_pock_parameters_;
}
inline ::operations_research::pdlp::MalitskyPockParams* PrimalDualHybridGradientParams::mutable_malitsky_pock_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::pdlp::MalitskyPockParams* _msg = _internal_mutable_malitsky_pock_parameters();
  // @@protoc_insertion_point(field_mutable:operations_research.pdlp.PrimalDualHybridGradientParams.malitsky_pock_parameters)
  return _msg;
}
inline void PrimalDualHybridGradientParams::set_allocated_malitsky_pock_parameters(::operations_research::pdlp::MalitskyPockParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::pdlp::MalitskyPockParams*>(_impl_.malitsky_pock_parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::pdlp::MalitskyPockParams*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.malitsky_pock_parameters_ = reinterpret_cast<::operations_research::pdlp::MalitskyPockParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.pdlp.PrimalDualHybridGradientParams.malitsky_pock_parameters)
}

// optional double initial_step_size_scaling = 25 [default = 1];
inline bool PrimalDualHybridGradientParams::has_initial_step_size_scaling() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_initial_step_size_scaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.initial_step_size_scaling_ = 1;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline double PrimalDualHybridGradientParams::initial_step_size_scaling() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.initial_step_size_scaling)
  return _internal_initial_step_size_scaling();
}
inline void PrimalDualHybridGradientParams::set_initial_step_size_scaling(double value) {
  _internal_set_initial_step_size_scaling(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.initial_step_size_scaling)
}
inline double PrimalDualHybridGradientParams::_internal_initial_step_size_scaling() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.initial_step_size_scaling_;
}
inline void PrimalDualHybridGradientParams::_internal_set_initial_step_size_scaling(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.initial_step_size_scaling_ = value;
}

// repeated int32 random_projection_seeds = 28 [packed = true];
inline int PrimalDualHybridGradientParams::_internal_random_projection_seeds_size() const {
  return _internal_random_projection_seeds().size();
}
inline int PrimalDualHybridGradientParams::random_projection_seeds_size() const {
  return _internal_random_projection_seeds_size();
}
inline void PrimalDualHybridGradientParams::clear_random_projection_seeds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.random_projection_seeds_.Clear();
}
inline ::int32_t PrimalDualHybridGradientParams::random_projection_seeds(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.random_projection_seeds)
  return _internal_random_projection_seeds().Get(index);
}
inline void PrimalDualHybridGradientParams::set_random_projection_seeds(int index, ::int32_t value) {
  _internal_mutable_random_projection_seeds()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.random_projection_seeds)
}
inline void PrimalDualHybridGradientParams::add_random_projection_seeds(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_random_projection_seeds()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.pdlp.PrimalDualHybridGradientParams.random_projection_seeds)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PrimalDualHybridGradientParams::random_projection_seeds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.pdlp.PrimalDualHybridGradientParams.random_projection_seeds)
  return _internal_random_projection_seeds();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PrimalDualHybridGradientParams::mutable_random_projection_seeds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.pdlp.PrimalDualHybridGradientParams.random_projection_seeds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_random_projection_seeds();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PrimalDualHybridGradientParams::_internal_random_projection_seeds()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.random_projection_seeds_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PrimalDualHybridGradientParams::_internal_mutable_random_projection_seeds() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.random_projection_seeds_;
}

// optional double infinite_constraint_bound_threshold = 22 [default = inf];
inline bool PrimalDualHybridGradientParams::has_infinite_constraint_bound_threshold() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_infinite_constraint_bound_threshold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.infinite_constraint_bound_threshold_ = std::numeric_limits<double>::infinity();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline double PrimalDualHybridGradientParams::infinite_constraint_bound_threshold() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.infinite_constraint_bound_threshold)
  return _internal_infinite_constraint_bound_threshold();
}
inline void PrimalDualHybridGradientParams::set_infinite_constraint_bound_threshold(double value) {
  _internal_set_infinite_constraint_bound_threshold(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.infinite_constraint_bound_threshold)
}
inline double PrimalDualHybridGradientParams::_internal_infinite_constraint_bound_threshold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.infinite_constraint_bound_threshold_;
}
inline void PrimalDualHybridGradientParams::_internal_set_infinite_constraint_bound_threshold(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.infinite_constraint_bound_threshold_ = value;
}

// optional bool handle_some_primal_gradients_on_finite_bounds_as_residuals = 29 [default = true];
inline bool PrimalDualHybridGradientParams::has_handle_some_primal_gradients_on_finite_bounds_as_residuals() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_handle_some_primal_gradients_on_finite_bounds_as_residuals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.handle_some_primal_gradients_on_finite_bounds_as_residuals_ = true;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool PrimalDualHybridGradientParams::handle_some_primal_gradients_on_finite_bounds_as_residuals() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.handle_some_primal_gradients_on_finite_bounds_as_residuals)
  return _internal_handle_some_primal_gradients_on_finite_bounds_as_residuals();
}
inline void PrimalDualHybridGradientParams::set_handle_some_primal_gradients_on_finite_bounds_as_residuals(bool value) {
  _internal_set_handle_some_primal_gradients_on_finite_bounds_as_residuals(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.handle_some_primal_gradients_on_finite_bounds_as_residuals)
}
inline bool PrimalDualHybridGradientParams::_internal_handle_some_primal_gradients_on_finite_bounds_as_residuals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.handle_some_primal_gradients_on_finite_bounds_as_residuals_;
}
inline void PrimalDualHybridGradientParams::_internal_set_handle_some_primal_gradients_on_finite_bounds_as_residuals(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.handle_some_primal_gradients_on_finite_bounds_as_residuals_ = value;
}

// optional bool use_diagonal_qp_trust_region_solver = 23 [default = false];
inline bool PrimalDualHybridGradientParams::has_use_diagonal_qp_trust_region_solver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_use_diagonal_qp_trust_region_solver() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.use_diagonal_qp_trust_region_solver_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool PrimalDualHybridGradientParams::use_diagonal_qp_trust_region_solver() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.use_diagonal_qp_trust_region_solver)
  return _internal_use_diagonal_qp_trust_region_solver();
}
inline void PrimalDualHybridGradientParams::set_use_diagonal_qp_trust_region_solver(bool value) {
  _internal_set_use_diagonal_qp_trust_region_solver(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.use_diagonal_qp_trust_region_solver)
}
inline bool PrimalDualHybridGradientParams::_internal_use_diagonal_qp_trust_region_solver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.use_diagonal_qp_trust_region_solver_;
}
inline void PrimalDualHybridGradientParams::_internal_set_use_diagonal_qp_trust_region_solver(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.use_diagonal_qp_trust_region_solver_ = value;
}

// optional double diagonal_qp_trust_region_solver_tolerance = 24 [default = 1e-08];
inline bool PrimalDualHybridGradientParams::has_diagonal_qp_trust_region_solver_tolerance() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_diagonal_qp_trust_region_solver_tolerance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.diagonal_qp_trust_region_solver_tolerance_ = 1e-08;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline double PrimalDualHybridGradientParams::diagonal_qp_trust_region_solver_tolerance() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.diagonal_qp_trust_region_solver_tolerance)
  return _internal_diagonal_qp_trust_region_solver_tolerance();
}
inline void PrimalDualHybridGradientParams::set_diagonal_qp_trust_region_solver_tolerance(double value) {
  _internal_set_diagonal_qp_trust_region_solver_tolerance(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.diagonal_qp_trust_region_solver_tolerance)
}
inline double PrimalDualHybridGradientParams::_internal_diagonal_qp_trust_region_solver_tolerance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.diagonal_qp_trust_region_solver_tolerance_;
}
inline void PrimalDualHybridGradientParams::_internal_set_diagonal_qp_trust_region_solver_tolerance(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.diagonal_qp_trust_region_solver_tolerance_ = value;
}

// optional bool use_feasibility_polishing = 30 [default = false];
inline bool PrimalDualHybridGradientParams::has_use_feasibility_polishing() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void PrimalDualHybridGradientParams::clear_use_feasibility_polishing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.use_feasibility_polishing_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool PrimalDualHybridGradientParams::use_feasibility_polishing() const {
  // @@protoc_insertion_point(field_get:operations_research.pdlp.PrimalDualHybridGradientParams.use_feasibility_polishing)
  return _internal_use_feasibility_polishing();
}
inline void PrimalDualHybridGradientParams::set_use_feasibility_polishing(bool value) {
  _internal_set_use_feasibility_polishing(value);
  // @@protoc_insertion_point(field_set:operations_research.pdlp.PrimalDualHybridGradientParams.use_feasibility_polishing)
}
inline bool PrimalDualHybridGradientParams::_internal_use_feasibility_polishing() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.use_feasibility_polishing_;
}
inline void PrimalDualHybridGradientParams::_internal_set_use_feasibility_polishing(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.use_feasibility_polishing_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pdlp
}  // namespace operations_research


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy>() {
  return ::operations_research::pdlp::PrimalDualHybridGradientParams_RestartStrategy_descriptor();
}
template <>
struct is_proto_enum<::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule>() {
  return ::operations_research::pdlp::PrimalDualHybridGradientParams_LinesearchRule_descriptor();
}
template <>
struct is_proto_enum<::operations_research::pdlp::OptimalityNorm> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::operations_research::pdlp::OptimalityNorm>() {
  return ::operations_research::pdlp::OptimalityNorm_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fpdlp_2fsolvers_2eproto_2epb_2eh
