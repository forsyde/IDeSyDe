// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/model.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "ortools/math_opt/sparse_containers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2fmodel_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fmath_5fopt_2fmodel_2eproto;
namespace operations_research {
namespace math_opt {
class IndicatorConstraintProto;
struct IndicatorConstraintProtoDefaultTypeInternal;
extern IndicatorConstraintProtoDefaultTypeInternal _IndicatorConstraintProto_default_instance_;
class LinearConstraintsProto;
struct LinearConstraintsProtoDefaultTypeInternal;
extern LinearConstraintsProtoDefaultTypeInternal _LinearConstraintsProto_default_instance_;
class ModelProto;
struct ModelProtoDefaultTypeInternal;
extern ModelProtoDefaultTypeInternal _ModelProto_default_instance_;
class ModelProto_AuxiliaryObjectivesEntry_DoNotUse;
struct ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_AuxiliaryObjectivesEntry_DoNotUseDefaultTypeInternal _ModelProto_AuxiliaryObjectivesEntry_DoNotUse_default_instance_;
class ModelProto_IndicatorConstraintsEntry_DoNotUse;
struct ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_IndicatorConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_IndicatorConstraintsEntry_DoNotUse_default_instance_;
class ModelProto_QuadraticConstraintsEntry_DoNotUse;
struct ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_QuadraticConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_QuadraticConstraintsEntry_DoNotUse_default_instance_;
class ModelProto_SecondOrderConeConstraintsEntry_DoNotUse;
struct ModelProto_SecondOrderConeConstraintsEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_SecondOrderConeConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_SecondOrderConeConstraintsEntry_DoNotUse_default_instance_;
class ModelProto_Sos1ConstraintsEntry_DoNotUse;
struct ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_Sos1ConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_Sos1ConstraintsEntry_DoNotUse_default_instance_;
class ModelProto_Sos2ConstraintsEntry_DoNotUse;
struct ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal;
extern ModelProto_Sos2ConstraintsEntry_DoNotUseDefaultTypeInternal _ModelProto_Sos2ConstraintsEntry_DoNotUse_default_instance_;
class ObjectiveProto;
struct ObjectiveProtoDefaultTypeInternal;
extern ObjectiveProtoDefaultTypeInternal _ObjectiveProto_default_instance_;
class QuadraticConstraintProto;
struct QuadraticConstraintProtoDefaultTypeInternal;
extern QuadraticConstraintProtoDefaultTypeInternal _QuadraticConstraintProto_default_instance_;
class SecondOrderConeConstraintProto;
struct SecondOrderConeConstraintProtoDefaultTypeInternal;
extern SecondOrderConeConstraintProtoDefaultTypeInternal _SecondOrderConeConstraintProto_default_instance_;
class SosConstraintProto;
struct SosConstraintProtoDefaultTypeInternal;
extern SosConstraintProtoDefaultTypeInternal _SosConstraintProto_default_instance_;
class VariablesProto;
struct VariablesProtoDefaultTypeInternal;
extern VariablesProtoDefaultTypeInternal _VariablesProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace math_opt {

// ===================================================================


// -------------------------------------------------------------------

class VariablesProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.VariablesProto) */ {
 public:
  inline VariablesProto() : VariablesProto(nullptr) {}
  ~VariablesProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VariablesProto(::google::protobuf::internal::ConstantInitialized);

  inline VariablesProto(const VariablesProto& from)
      : VariablesProto(nullptr, from) {}
  VariablesProto(VariablesProto&& from) noexcept
    : VariablesProto() {
    *this = ::std::move(from);
  }

  inline VariablesProto& operator=(const VariablesProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariablesProto& operator=(VariablesProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VariablesProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const VariablesProto* internal_default_instance() {
    return reinterpret_cast<const VariablesProto*>(
               &_VariablesProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VariablesProto& a, VariablesProto& b) {
    a.Swap(&b);
  }
  inline void Swap(VariablesProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariablesProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VariablesProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VariablesProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VariablesProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VariablesProto& from) {
    VariablesProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VariablesProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.VariablesProto";
  }
  protected:
  explicit VariablesProto(::google::protobuf::Arena* arena);
  VariablesProto(::google::protobuf::Arena* arena, const VariablesProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kLowerBoundsFieldNumber = 2,
    kUpperBoundsFieldNumber = 3,
    kIntegersFieldNumber = 4,
    kNamesFieldNumber = 5,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated double lower_bounds = 2;
  int lower_bounds_size() const;
  private:
  int _internal_lower_bounds_size() const;

  public:
  void clear_lower_bounds() ;
  double lower_bounds(int index) const;
  void set_lower_bounds(int index, double value);
  void add_lower_bounds(double value);
  const ::google::protobuf::RepeatedField<double>& lower_bounds() const;
  ::google::protobuf::RepeatedField<double>* mutable_lower_bounds();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_lower_bounds() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_lower_bounds();

  public:
  // repeated double upper_bounds = 3;
  int upper_bounds_size() const;
  private:
  int _internal_upper_bounds_size() const;

  public:
  void clear_upper_bounds() ;
  double upper_bounds(int index) const;
  void set_upper_bounds(int index, double value);
  void add_upper_bounds(double value);
  const ::google::protobuf::RepeatedField<double>& upper_bounds() const;
  ::google::protobuf::RepeatedField<double>* mutable_upper_bounds();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_upper_bounds() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_upper_bounds();

  public:
  // repeated bool integers = 4;
  int integers_size() const;
  private:
  int _internal_integers_size() const;

  public:
  void clear_integers() ;
  bool integers(int index) const;
  void set_integers(int index, bool value);
  void add_integers(bool value);
  const ::google::protobuf::RepeatedField<bool>& integers() const;
  ::google::protobuf::RepeatedField<bool>* mutable_integers();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_integers() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_integers();

  public:
  // repeated string names = 5;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  void set_names(int index, const std::string& value);
  void set_names(int index, std::string&& value);
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, std::size_t size);
  void set_names(int index, absl::string_view value);
  std::string* add_names();
  void add_names(const std::string& value);
  void add_names(std::string&& value);
  void add_names(const char* value);
  void add_names(const char* value, std::size_t size);
  void add_names(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.VariablesProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> lower_bounds_;
    ::google::protobuf::RepeatedField<double> upper_bounds_;
    ::google::protobuf::RepeatedField<bool> integers_;
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class LinearConstraintsProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.LinearConstraintsProto) */ {
 public:
  inline LinearConstraintsProto() : LinearConstraintsProto(nullptr) {}
  ~LinearConstraintsProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LinearConstraintsProto(::google::protobuf::internal::ConstantInitialized);

  inline LinearConstraintsProto(const LinearConstraintsProto& from)
      : LinearConstraintsProto(nullptr, from) {}
  LinearConstraintsProto(LinearConstraintsProto&& from) noexcept
    : LinearConstraintsProto() {
    *this = ::std::move(from);
  }

  inline LinearConstraintsProto& operator=(const LinearConstraintsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline LinearConstraintsProto& operator=(LinearConstraintsProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LinearConstraintsProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const LinearConstraintsProto* internal_default_instance() {
    return reinterpret_cast<const LinearConstraintsProto*>(
               &_LinearConstraintsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LinearConstraintsProto& a, LinearConstraintsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(LinearConstraintsProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LinearConstraintsProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LinearConstraintsProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LinearConstraintsProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LinearConstraintsProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LinearConstraintsProto& from) {
    LinearConstraintsProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LinearConstraintsProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.LinearConstraintsProto";
  }
  protected:
  explicit LinearConstraintsProto(::google::protobuf::Arena* arena);
  LinearConstraintsProto(::google::protobuf::Arena* arena, const LinearConstraintsProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
    kLowerBoundsFieldNumber = 2,
    kUpperBoundsFieldNumber = 3,
    kNamesFieldNumber = 4,
  };
  // repeated int64 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int64_t ids(int index) const;
  void set_ids(int index, ::int64_t value);
  void add_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_ids();

  public:
  // repeated double lower_bounds = 2;
  int lower_bounds_size() const;
  private:
  int _internal_lower_bounds_size() const;

  public:
  void clear_lower_bounds() ;
  double lower_bounds(int index) const;
  void set_lower_bounds(int index, double value);
  void add_lower_bounds(double value);
  const ::google::protobuf::RepeatedField<double>& lower_bounds() const;
  ::google::protobuf::RepeatedField<double>* mutable_lower_bounds();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_lower_bounds() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_lower_bounds();

  public:
  // repeated double upper_bounds = 3;
  int upper_bounds_size() const;
  private:
  int _internal_upper_bounds_size() const;

  public:
  void clear_upper_bounds() ;
  double upper_bounds(int index) const;
  void set_upper_bounds(int index, double value);
  void add_upper_bounds(double value);
  const ::google::protobuf::RepeatedField<double>& upper_bounds() const;
  ::google::protobuf::RepeatedField<double>* mutable_upper_bounds();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_upper_bounds() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_upper_bounds();

  public:
  // repeated string names = 4;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  void set_names(int index, const std::string& value);
  void set_names(int index, std::string&& value);
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, std::size_t size);
  void set_names(int index, absl::string_view value);
  std::string* add_names();
  void add_names(const std::string& value);
  void add_names(std::string&& value);
  void add_names(const char* value);
  void add_names(const char* value, std::size_t size);
  void add_names(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.LinearConstraintsProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::RepeatedField<double> lower_bounds_;
    ::google::protobuf::RepeatedField<double> upper_bounds_;
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class SosConstraintProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SosConstraintProto) */ {
 public:
  inline SosConstraintProto() : SosConstraintProto(nullptr) {}
  ~SosConstraintProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SosConstraintProto(::google::protobuf::internal::ConstantInitialized);

  inline SosConstraintProto(const SosConstraintProto& from)
      : SosConstraintProto(nullptr, from) {}
  SosConstraintProto(SosConstraintProto&& from) noexcept
    : SosConstraintProto() {
    *this = ::std::move(from);
  }

  inline SosConstraintProto& operator=(const SosConstraintProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SosConstraintProto& operator=(SosConstraintProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SosConstraintProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SosConstraintProto* internal_default_instance() {
    return reinterpret_cast<const SosConstraintProto*>(
               &_SosConstraintProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SosConstraintProto& a, SosConstraintProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SosConstraintProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SosConstraintProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SosConstraintProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SosConstraintProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SosConstraintProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SosConstraintProto& from) {
    SosConstraintProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SosConstraintProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SosConstraintProto";
  }
  protected:
  explicit SosConstraintProto(::google::protobuf::Arena* arena);
  SosConstraintProto(::google::protobuf::Arena* arena, const SosConstraintProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExpressionsFieldNumber = 1,
    kWeightsFieldNumber = 2,
    kNameFieldNumber = 3,
  };
  // repeated .operations_research.math_opt.LinearExpressionProto expressions = 1;
  int expressions_size() const;
  private:
  int _internal_expressions_size() const;

  public:
  void clear_expressions() ;
  ::operations_research::math_opt::LinearExpressionProto* mutable_expressions(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto >*
      mutable_expressions();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>& _internal_expressions() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>* _internal_mutable_expressions();
  public:
  const ::operations_research::math_opt::LinearExpressionProto& expressions(int index) const;
  ::operations_research::math_opt::LinearExpressionProto* add_expressions();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto >&
      expressions() const;
  // repeated double weights = 2;
  int weights_size() const;
  private:
  int _internal_weights_size() const;

  public:
  void clear_weights() ;
  double weights(int index) const;
  void set_weights(int index, double value);
  void add_weights(double value);
  const ::google::protobuf::RepeatedField<double>& weights() const;
  ::google::protobuf::RepeatedField<double>* mutable_weights();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_weights() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_weights();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SosConstraintProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto > expressions_;
    ::google::protobuf::RepeatedField<double> weights_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class SecondOrderConeConstraintProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SecondOrderConeConstraintProto) */ {
 public:
  inline SecondOrderConeConstraintProto() : SecondOrderConeConstraintProto(nullptr) {}
  ~SecondOrderConeConstraintProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SecondOrderConeConstraintProto(::google::protobuf::internal::ConstantInitialized);

  inline SecondOrderConeConstraintProto(const SecondOrderConeConstraintProto& from)
      : SecondOrderConeConstraintProto(nullptr, from) {}
  SecondOrderConeConstraintProto(SecondOrderConeConstraintProto&& from) noexcept
    : SecondOrderConeConstraintProto() {
    *this = ::std::move(from);
  }

  inline SecondOrderConeConstraintProto& operator=(const SecondOrderConeConstraintProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SecondOrderConeConstraintProto& operator=(SecondOrderConeConstraintProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SecondOrderConeConstraintProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SecondOrderConeConstraintProto* internal_default_instance() {
    return reinterpret_cast<const SecondOrderConeConstraintProto*>(
               &_SecondOrderConeConstraintProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SecondOrderConeConstraintProto& a, SecondOrderConeConstraintProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SecondOrderConeConstraintProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SecondOrderConeConstraintProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SecondOrderConeConstraintProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SecondOrderConeConstraintProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SecondOrderConeConstraintProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SecondOrderConeConstraintProto& from) {
    SecondOrderConeConstraintProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SecondOrderConeConstraintProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SecondOrderConeConstraintProto";
  }
  protected:
  explicit SecondOrderConeConstraintProto(::google::protobuf::Arena* arena);
  SecondOrderConeConstraintProto(::google::protobuf::Arena* arena, const SecondOrderConeConstraintProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgumentsToNormFieldNumber = 2,
    kNameFieldNumber = 3,
    kUpperBoundFieldNumber = 1,
  };
  // repeated .operations_research.math_opt.LinearExpressionProto arguments_to_norm = 2;
  int arguments_to_norm_size() const;
  private:
  int _internal_arguments_to_norm_size() const;

  public:
  void clear_arguments_to_norm() ;
  ::operations_research::math_opt::LinearExpressionProto* mutable_arguments_to_norm(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto >*
      mutable_arguments_to_norm();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>& _internal_arguments_to_norm() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>* _internal_mutable_arguments_to_norm();
  public:
  const ::operations_research::math_opt::LinearExpressionProto& arguments_to_norm(int index) const;
  ::operations_research::math_opt::LinearExpressionProto* add_arguments_to_norm();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto >&
      arguments_to_norm() const;
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .operations_research.math_opt.LinearExpressionProto upper_bound = 1;
  bool has_upper_bound() const;
  void clear_upper_bound() ;
  const ::operations_research::math_opt::LinearExpressionProto& upper_bound() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::LinearExpressionProto* release_upper_bound();
  ::operations_research::math_opt::LinearExpressionProto* mutable_upper_bound();
  void set_allocated_upper_bound(::operations_research::math_opt::LinearExpressionProto* value);
  void unsafe_arena_set_allocated_upper_bound(::operations_research::math_opt::LinearExpressionProto* value);
  ::operations_research::math_opt::LinearExpressionProto* unsafe_arena_release_upper_bound();

  private:
  const ::operations_research::math_opt::LinearExpressionProto& _internal_upper_bound() const;
  ::operations_research::math_opt::LinearExpressionProto* _internal_mutable_upper_bound();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SecondOrderConeConstraintProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::LinearExpressionProto > arguments_to_norm_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::operations_research::math_opt::LinearExpressionProto* upper_bound_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class QuadraticConstraintProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.QuadraticConstraintProto) */ {
 public:
  inline QuadraticConstraintProto() : QuadraticConstraintProto(nullptr) {}
  ~QuadraticConstraintProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuadraticConstraintProto(::google::protobuf::internal::ConstantInitialized);

  inline QuadraticConstraintProto(const QuadraticConstraintProto& from)
      : QuadraticConstraintProto(nullptr, from) {}
  QuadraticConstraintProto(QuadraticConstraintProto&& from) noexcept
    : QuadraticConstraintProto() {
    *this = ::std::move(from);
  }

  inline QuadraticConstraintProto& operator=(const QuadraticConstraintProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuadraticConstraintProto& operator=(QuadraticConstraintProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuadraticConstraintProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuadraticConstraintProto* internal_default_instance() {
    return reinterpret_cast<const QuadraticConstraintProto*>(
               &_QuadraticConstraintProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QuadraticConstraintProto& a, QuadraticConstraintProto& b) {
    a.Swap(&b);
  }
  inline void Swap(QuadraticConstraintProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuadraticConstraintProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuadraticConstraintProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuadraticConstraintProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuadraticConstraintProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QuadraticConstraintProto& from) {
    QuadraticConstraintProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QuadraticConstraintProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.QuadraticConstraintProto";
  }
  protected:
  explicit QuadraticConstraintProto(::google::protobuf::Arena* arena);
  QuadraticConstraintProto(::google::protobuf::Arena* arena, const QuadraticConstraintProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 5,
    kLinearTermsFieldNumber = 1,
    kQuadraticTermsFieldNumber = 2,
    kLowerBoundFieldNumber = 3,
    kUpperBoundFieldNumber = 4,
  };
  // string name = 5;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .operations_research.math_opt.SparseDoubleVectorProto linear_terms = 1;
  bool has_linear_terms() const;
  void clear_linear_terms() ;
  const ::operations_research::math_opt::SparseDoubleVectorProto& linear_terms() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleVectorProto* release_linear_terms();
  ::operations_research::math_opt::SparseDoubleVectorProto* mutable_linear_terms();
  void set_allocated_linear_terms(::operations_research::math_opt::SparseDoubleVectorProto* value);
  void unsafe_arena_set_allocated_linear_terms(::operations_research::math_opt::SparseDoubleVectorProto* value);
  ::operations_research::math_opt::SparseDoubleVectorProto* unsafe_arena_release_linear_terms();

  private:
  const ::operations_research::math_opt::SparseDoubleVectorProto& _internal_linear_terms() const;
  ::operations_research::math_opt::SparseDoubleVectorProto* _internal_mutable_linear_terms();

  public:
  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_terms = 2;
  bool has_quadratic_terms() const;
  void clear_quadratic_terms() ;
  const ::operations_research::math_opt::SparseDoubleMatrixProto& quadratic_terms() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleMatrixProto* release_quadratic_terms();
  ::operations_research::math_opt::SparseDoubleMatrixProto* mutable_quadratic_terms();
  void set_allocated_quadratic_terms(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  void unsafe_arena_set_allocated_quadratic_terms(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  ::operations_research::math_opt::SparseDoubleMatrixProto* unsafe_arena_release_quadratic_terms();

  private:
  const ::operations_research::math_opt::SparseDoubleMatrixProto& _internal_quadratic_terms() const;
  ::operations_research::math_opt::SparseDoubleMatrixProto* _internal_mutable_quadratic_terms();

  public:
  // double lower_bound = 3;
  void clear_lower_bound() ;
  double lower_bound() const;
  void set_lower_bound(double value);

  private:
  double _internal_lower_bound() const;
  void _internal_set_lower_bound(double value);

  public:
  // double upper_bound = 4;
  void clear_upper_bound() ;
  double upper_bound() const;
  void set_upper_bound(double value);

  private:
  double _internal_upper_bound() const;
  void _internal_set_upper_bound(double value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.QuadraticConstraintProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::operations_research::math_opt::SparseDoubleVectorProto* linear_terms_;
    ::operations_research::math_opt::SparseDoubleMatrixProto* quadratic_terms_;
    double lower_bound_;
    double upper_bound_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class ObjectiveProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.ObjectiveProto) */ {
 public:
  inline ObjectiveProto() : ObjectiveProto(nullptr) {}
  ~ObjectiveProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ObjectiveProto(::google::protobuf::internal::ConstantInitialized);

  inline ObjectiveProto(const ObjectiveProto& from)
      : ObjectiveProto(nullptr, from) {}
  ObjectiveProto(ObjectiveProto&& from) noexcept
    : ObjectiveProto() {
    *this = ::std::move(from);
  }

  inline ObjectiveProto& operator=(const ObjectiveProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectiveProto& operator=(ObjectiveProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectiveProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectiveProto* internal_default_instance() {
    return reinterpret_cast<const ObjectiveProto*>(
               &_ObjectiveProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ObjectiveProto& a, ObjectiveProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectiveProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectiveProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectiveProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectiveProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObjectiveProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ObjectiveProto& from) {
    ObjectiveProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ObjectiveProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.ObjectiveProto";
  }
  protected:
  explicit ObjectiveProto(::google::protobuf::Arena* arena);
  ObjectiveProto(::google::protobuf::Arena* arena, const ObjectiveProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 5,
    kLinearCoefficientsFieldNumber = 3,
    kQuadraticCoefficientsFieldNumber = 4,
    kOffsetFieldNumber = 2,
    kPriorityFieldNumber = 6,
    kMaximizeFieldNumber = 1,
  };
  // string name = 5;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .operations_research.math_opt.SparseDoubleVectorProto linear_coefficients = 3;
  bool has_linear_coefficients() const;
  void clear_linear_coefficients() ;
  const ::operations_research::math_opt::SparseDoubleVectorProto& linear_coefficients() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleVectorProto* release_linear_coefficients();
  ::operations_research::math_opt::SparseDoubleVectorProto* mutable_linear_coefficients();
  void set_allocated_linear_coefficients(::operations_research::math_opt::SparseDoubleVectorProto* value);
  void unsafe_arena_set_allocated_linear_coefficients(::operations_research::math_opt::SparseDoubleVectorProto* value);
  ::operations_research::math_opt::SparseDoubleVectorProto* unsafe_arena_release_linear_coefficients();

  private:
  const ::operations_research::math_opt::SparseDoubleVectorProto& _internal_linear_coefficients() const;
  ::operations_research::math_opt::SparseDoubleVectorProto* _internal_mutable_linear_coefficients();

  public:
  // .operations_research.math_opt.SparseDoubleMatrixProto quadratic_coefficients = 4;
  bool has_quadratic_coefficients() const;
  void clear_quadratic_coefficients() ;
  const ::operations_research::math_opt::SparseDoubleMatrixProto& quadratic_coefficients() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleMatrixProto* release_quadratic_coefficients();
  ::operations_research::math_opt::SparseDoubleMatrixProto* mutable_quadratic_coefficients();
  void set_allocated_quadratic_coefficients(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  void unsafe_arena_set_allocated_quadratic_coefficients(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  ::operations_research::math_opt::SparseDoubleMatrixProto* unsafe_arena_release_quadratic_coefficients();

  private:
  const ::operations_research::math_opt::SparseDoubleMatrixProto& _internal_quadratic_coefficients() const;
  ::operations_research::math_opt::SparseDoubleMatrixProto* _internal_mutable_quadratic_coefficients();

  public:
  // double offset = 2;
  void clear_offset() ;
  double offset() const;
  void set_offset(double value);

  private:
  double _internal_offset() const;
  void _internal_set_offset(double value);

  public:
  // int64 priority = 6;
  void clear_priority() ;
  ::int64_t priority() const;
  void set_priority(::int64_t value);

  private:
  ::int64_t _internal_priority() const;
  void _internal_set_priority(::int64_t value);

  public:
  // bool maximize = 1;
  void clear_maximize() ;
  bool maximize() const;
  void set_maximize(bool value);

  private:
  bool _internal_maximize() const;
  void _internal_set_maximize(bool value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.ObjectiveProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::operations_research::math_opt::SparseDoubleVectorProto* linear_coefficients_;
    ::operations_research::math_opt::SparseDoubleMatrixProto* quadratic_coefficients_;
    double offset_;
    ::int64_t priority_;
    bool maximize_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class IndicatorConstraintProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.IndicatorConstraintProto) */ {
 public:
  inline IndicatorConstraintProto() : IndicatorConstraintProto(nullptr) {}
  ~IndicatorConstraintProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IndicatorConstraintProto(::google::protobuf::internal::ConstantInitialized);

  inline IndicatorConstraintProto(const IndicatorConstraintProto& from)
      : IndicatorConstraintProto(nullptr, from) {}
  IndicatorConstraintProto(IndicatorConstraintProto&& from) noexcept
    : IndicatorConstraintProto() {
    *this = ::std::move(from);
  }

  inline IndicatorConstraintProto& operator=(const IndicatorConstraintProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndicatorConstraintProto& operator=(IndicatorConstraintProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndicatorConstraintProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndicatorConstraintProto* internal_default_instance() {
    return reinterpret_cast<const IndicatorConstraintProto*>(
               &_IndicatorConstraintProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IndicatorConstraintProto& a, IndicatorConstraintProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IndicatorConstraintProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndicatorConstraintProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndicatorConstraintProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IndicatorConstraintProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndicatorConstraintProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IndicatorConstraintProto& from) {
    IndicatorConstraintProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndicatorConstraintProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.IndicatorConstraintProto";
  }
  protected:
  explicit IndicatorConstraintProto(::google::protobuf::Arena* arena);
  IndicatorConstraintProto(::google::protobuf::Arena* arena, const IndicatorConstraintProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 5,
    kExpressionFieldNumber = 2,
    kIndicatorIdFieldNumber = 1,
    kLowerBoundFieldNumber = 3,
    kUpperBoundFieldNumber = 4,
    kActivateOnZeroFieldNumber = 6,
  };
  // string name = 5;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .operations_research.math_opt.SparseDoubleVectorProto expression = 2;
  bool has_expression() const;
  void clear_expression() ;
  const ::operations_research::math_opt::SparseDoubleVectorProto& expression() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleVectorProto* release_expression();
  ::operations_research::math_opt::SparseDoubleVectorProto* mutable_expression();
  void set_allocated_expression(::operations_research::math_opt::SparseDoubleVectorProto* value);
  void unsafe_arena_set_allocated_expression(::operations_research::math_opt::SparseDoubleVectorProto* value);
  ::operations_research::math_opt::SparseDoubleVectorProto* unsafe_arena_release_expression();

  private:
  const ::operations_research::math_opt::SparseDoubleVectorProto& _internal_expression() const;
  ::operations_research::math_opt::SparseDoubleVectorProto* _internal_mutable_expression();

  public:
  // optional int64 indicator_id = 1;
  bool has_indicator_id() const;
  void clear_indicator_id() ;
  ::int64_t indicator_id() const;
  void set_indicator_id(::int64_t value);

  private:
  ::int64_t _internal_indicator_id() const;
  void _internal_set_indicator_id(::int64_t value);

  public:
  // double lower_bound = 3;
  void clear_lower_bound() ;
  double lower_bound() const;
  void set_lower_bound(double value);

  private:
  double _internal_lower_bound() const;
  void _internal_set_lower_bound(double value);

  public:
  // double upper_bound = 4;
  void clear_upper_bound() ;
  double upper_bound() const;
  void set_upper_bound(double value);

  private:
  double _internal_upper_bound() const;
  void _internal_set_upper_bound(double value);

  public:
  // bool activate_on_zero = 6;
  void clear_activate_on_zero() ;
  bool activate_on_zero() const;
  void set_activate_on_zero(bool value);

  private:
  bool _internal_activate_on_zero() const;
  void _internal_set_activate_on_zero(bool value);

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.IndicatorConstraintProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::operations_research::math_opt::SparseDoubleVectorProto* expression_;
    ::int64_t indicator_id_;
    double lower_bound_;
    double upper_bound_;
    bool activate_on_zero_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};// -------------------------------------------------------------------

class ModelProto_Sos2ConstraintsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_Sos2ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_Sos2ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_Sos2ConstraintsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_Sos2ConstraintsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_Sos2ConstraintsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_Sos2ConstraintsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_Sos2ConstraintsEntry_DoNotUse*>(
        &_ModelProto_Sos2ConstraintsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto_Sos1ConstraintsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_Sos1ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_Sos1ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_Sos1ConstraintsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_Sos1ConstraintsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_Sos1ConstraintsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_Sos1ConstraintsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_Sos1ConstraintsEntry_DoNotUse*>(
        &_ModelProto_Sos1ConstraintsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto_SecondOrderConeConstraintsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_SecondOrderConeConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_SecondOrderConeConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_SecondOrderConeConstraintsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_SecondOrderConeConstraintsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_SecondOrderConeConstraintsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_SecondOrderConeConstraintsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_SecondOrderConeConstraintsEntry_DoNotUse*>(
        &_ModelProto_SecondOrderConeConstraintsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto_QuadraticConstraintsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_QuadraticConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::QuadraticConstraintProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_QuadraticConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::QuadraticConstraintProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_QuadraticConstraintsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_QuadraticConstraintsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_QuadraticConstraintsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_QuadraticConstraintsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_QuadraticConstraintsEntry_DoNotUse*>(
        &_ModelProto_QuadraticConstraintsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto_IndicatorConstraintsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_IndicatorConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::IndicatorConstraintProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_IndicatorConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::IndicatorConstraintProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_IndicatorConstraintsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_IndicatorConstraintsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_IndicatorConstraintsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_IndicatorConstraintsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_IndicatorConstraintsEntry_DoNotUse*>(
        &_ModelProto_IndicatorConstraintsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto_AuxiliaryObjectivesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ModelProto_AuxiliaryObjectivesEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::ObjectiveProto,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ModelProto_AuxiliaryObjectivesEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::ObjectiveProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ModelProto_AuxiliaryObjectivesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto_AuxiliaryObjectivesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelProto_AuxiliaryObjectivesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelProto_AuxiliaryObjectivesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelProto_AuxiliaryObjectivesEntry_DoNotUse*>(
        &_ModelProto_AuxiliaryObjectivesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};
// -------------------------------------------------------------------

class ModelProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.ModelProto) */ {
 public:
  inline ModelProto() : ModelProto(nullptr) {}
  ~ModelProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModelProto(::google::protobuf::internal::ConstantInitialized);

  inline ModelProto(const ModelProto& from)
      : ModelProto(nullptr, from) {}
  ModelProto(ModelProto&& from) noexcept
    : ModelProto() {
    *this = ::std::move(from);
  }

  inline ModelProto& operator=(const ModelProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelProto& operator=(ModelProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelProto* internal_default_instance() {
    return reinterpret_cast<const ModelProto*>(
               &_ModelProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ModelProto& a, ModelProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModelProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModelProto& from) {
    ModelProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModelProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.ModelProto";
  }
  protected:
  explicit ModelProto(::google::protobuf::Arena* arena);
  ModelProto(::google::protobuf::Arena* arena, const ModelProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kQuadraticConstraintsFieldNumber = 6,
    kSos1ConstraintsFieldNumber = 7,
    kSos2ConstraintsFieldNumber = 8,
    kIndicatorConstraintsFieldNumber = 9,
    kAuxiliaryObjectivesFieldNumber = 10,
    kSecondOrderConeConstraintsFieldNumber = 11,
    kNameFieldNumber = 1,
    kVariablesFieldNumber = 2,
    kObjectiveFieldNumber = 3,
    kLinearConstraintsFieldNumber = 4,
    kLinearConstraintMatrixFieldNumber = 5,
  };
  // map<int64, .operations_research.math_opt.QuadraticConstraintProto> quadratic_constraints = 6;
  int quadratic_constraints_size() const;
  private:
  int _internal_quadratic_constraints_size() const;

  public:
  void clear_quadratic_constraints() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>& quadratic_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>* mutable_quadratic_constraints();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>& _internal_quadratic_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>* _internal_mutable_quadratic_constraints();

  public:
  // map<int64, .operations_research.math_opt.SosConstraintProto> sos1_constraints = 7;
  int sos1_constraints_size() const;
  private:
  int _internal_sos1_constraints_size() const;

  public:
  void clear_sos1_constraints() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& sos1_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* mutable_sos1_constraints();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& _internal_sos1_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* _internal_mutable_sos1_constraints();

  public:
  // map<int64, .operations_research.math_opt.SosConstraintProto> sos2_constraints = 8;
  int sos2_constraints_size() const;
  private:
  int _internal_sos2_constraints_size() const;

  public:
  void clear_sos2_constraints() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& sos2_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* mutable_sos2_constraints();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& _internal_sos2_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* _internal_mutable_sos2_constraints();

  public:
  // map<int64, .operations_research.math_opt.IndicatorConstraintProto> indicator_constraints = 9;
  int indicator_constraints_size() const;
  private:
  int _internal_indicator_constraints_size() const;

  public:
  void clear_indicator_constraints() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>& indicator_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>* mutable_indicator_constraints();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>& _internal_indicator_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>* _internal_mutable_indicator_constraints();

  public:
  // map<int64, .operations_research.math_opt.ObjectiveProto> auxiliary_objectives = 10;
  int auxiliary_objectives_size() const;
  private:
  int _internal_auxiliary_objectives_size() const;

  public:
  void clear_auxiliary_objectives() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>& auxiliary_objectives() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>* mutable_auxiliary_objectives();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>& _internal_auxiliary_objectives() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>* _internal_mutable_auxiliary_objectives();

  public:
  // map<int64, .operations_research.math_opt.SecondOrderConeConstraintProto> second_order_cone_constraints = 11;
  int second_order_cone_constraints_size() const;
  private:
  int _internal_second_order_cone_constraints_size() const;

  public:
  void clear_second_order_cone_constraints() ;
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>& second_order_cone_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>* mutable_second_order_cone_constraints();

  private:
  const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>& _internal_second_order_cone_constraints() const;
  ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>* _internal_mutable_second_order_cone_constraints();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .operations_research.math_opt.VariablesProto variables = 2;
  bool has_variables() const;
  void clear_variables() ;
  const ::operations_research::math_opt::VariablesProto& variables() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::VariablesProto* release_variables();
  ::operations_research::math_opt::VariablesProto* mutable_variables();
  void set_allocated_variables(::operations_research::math_opt::VariablesProto* value);
  void unsafe_arena_set_allocated_variables(::operations_research::math_opt::VariablesProto* value);
  ::operations_research::math_opt::VariablesProto* unsafe_arena_release_variables();

  private:
  const ::operations_research::math_opt::VariablesProto& _internal_variables() const;
  ::operations_research::math_opt::VariablesProto* _internal_mutable_variables();

  public:
  // .operations_research.math_opt.ObjectiveProto objective = 3;
  bool has_objective() const;
  void clear_objective() ;
  const ::operations_research::math_opt::ObjectiveProto& objective() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::ObjectiveProto* release_objective();
  ::operations_research::math_opt::ObjectiveProto* mutable_objective();
  void set_allocated_objective(::operations_research::math_opt::ObjectiveProto* value);
  void unsafe_arena_set_allocated_objective(::operations_research::math_opt::ObjectiveProto* value);
  ::operations_research::math_opt::ObjectiveProto* unsafe_arena_release_objective();

  private:
  const ::operations_research::math_opt::ObjectiveProto& _internal_objective() const;
  ::operations_research::math_opt::ObjectiveProto* _internal_mutable_objective();

  public:
  // .operations_research.math_opt.LinearConstraintsProto linear_constraints = 4;
  bool has_linear_constraints() const;
  void clear_linear_constraints() ;
  const ::operations_research::math_opt::LinearConstraintsProto& linear_constraints() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::LinearConstraintsProto* release_linear_constraints();
  ::operations_research::math_opt::LinearConstraintsProto* mutable_linear_constraints();
  void set_allocated_linear_constraints(::operations_research::math_opt::LinearConstraintsProto* value);
  void unsafe_arena_set_allocated_linear_constraints(::operations_research::math_opt::LinearConstraintsProto* value);
  ::operations_research::math_opt::LinearConstraintsProto* unsafe_arena_release_linear_constraints();

  private:
  const ::operations_research::math_opt::LinearConstraintsProto& _internal_linear_constraints() const;
  ::operations_research::math_opt::LinearConstraintsProto* _internal_mutable_linear_constraints();

  public:
  // .operations_research.math_opt.SparseDoubleMatrixProto linear_constraint_matrix = 5;
  bool has_linear_constraint_matrix() const;
  void clear_linear_constraint_matrix() ;
  const ::operations_research::math_opt::SparseDoubleMatrixProto& linear_constraint_matrix() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleMatrixProto* release_linear_constraint_matrix();
  ::operations_research::math_opt::SparseDoubleMatrixProto* mutable_linear_constraint_matrix();
  void set_allocated_linear_constraint_matrix(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  void unsafe_arena_set_allocated_linear_constraint_matrix(::operations_research::math_opt::SparseDoubleMatrixProto* value);
  ::operations_research::math_opt::SparseDoubleMatrixProto* unsafe_arena_release_linear_constraint_matrix();

  private:
  const ::operations_research::math_opt::SparseDoubleMatrixProto& _internal_linear_constraint_matrix() const;
  ::operations_research::math_opt::SparseDoubleMatrixProto* _internal_mutable_linear_constraint_matrix();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.ModelProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 11, 16,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ModelProto_QuadraticConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::QuadraticConstraintProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        quadratic_constraints_;
    ::google::protobuf::internal::MapField<ModelProto_Sos1ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        sos1_constraints_;
    ::google::protobuf::internal::MapField<ModelProto_Sos2ConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SosConstraintProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        sos2_constraints_;
    ::google::protobuf::internal::MapField<ModelProto_IndicatorConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::IndicatorConstraintProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        indicator_constraints_;
    ::google::protobuf::internal::MapField<ModelProto_AuxiliaryObjectivesEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::ObjectiveProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        auxiliary_objectives_;
    ::google::protobuf::internal::MapField<ModelProto_SecondOrderConeConstraintsEntry_DoNotUse, ::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        second_order_cone_constraints_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::operations_research::math_opt::VariablesProto* variables_;
    ::operations_research::math_opt::ObjectiveProto* objective_;
    ::operations_research::math_opt::LinearConstraintsProto* linear_constraints_;
    ::operations_research::math_opt::SparseDoubleMatrixProto* linear_constraint_matrix_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VariablesProto

// repeated int64 ids = 1;
inline int VariablesProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int VariablesProto::ids_size() const {
  return _internal_ids_size();
}
inline void VariablesProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t VariablesProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.VariablesProto.ids)
  return _internal_ids().Get(index);
}
inline void VariablesProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.ids)
}
inline void VariablesProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& VariablesProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.VariablesProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* VariablesProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.VariablesProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& VariablesProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* VariablesProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated double lower_bounds = 2;
inline int VariablesProto::_internal_lower_bounds_size() const {
  return _internal_lower_bounds().size();
}
inline int VariablesProto::lower_bounds_size() const {
  return _internal_lower_bounds_size();
}
inline void VariablesProto::clear_lower_bounds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lower_bounds_.Clear();
}
inline double VariablesProto::lower_bounds(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.VariablesProto.lower_bounds)
  return _internal_lower_bounds().Get(index);
}
inline void VariablesProto::set_lower_bounds(int index, double value) {
  _internal_mutable_lower_bounds()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.lower_bounds)
}
inline void VariablesProto::add_lower_bounds(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_lower_bounds()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.lower_bounds)
}
inline const ::google::protobuf::RepeatedField<double>& VariablesProto::lower_bounds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.VariablesProto.lower_bounds)
  return _internal_lower_bounds();
}
inline ::google::protobuf::RepeatedField<double>* VariablesProto::mutable_lower_bounds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.VariablesProto.lower_bounds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_lower_bounds();
}
inline const ::google::protobuf::RepeatedField<double>& VariablesProto::_internal_lower_bounds()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lower_bounds_;
}
inline ::google::protobuf::RepeatedField<double>* VariablesProto::_internal_mutable_lower_bounds() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.lower_bounds_;
}

// repeated double upper_bounds = 3;
inline int VariablesProto::_internal_upper_bounds_size() const {
  return _internal_upper_bounds().size();
}
inline int VariablesProto::upper_bounds_size() const {
  return _internal_upper_bounds_size();
}
inline void VariablesProto::clear_upper_bounds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.upper_bounds_.Clear();
}
inline double VariablesProto::upper_bounds(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.VariablesProto.upper_bounds)
  return _internal_upper_bounds().Get(index);
}
inline void VariablesProto::set_upper_bounds(int index, double value) {
  _internal_mutable_upper_bounds()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.upper_bounds)
}
inline void VariablesProto::add_upper_bounds(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_upper_bounds()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.upper_bounds)
}
inline const ::google::protobuf::RepeatedField<double>& VariablesProto::upper_bounds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.VariablesProto.upper_bounds)
  return _internal_upper_bounds();
}
inline ::google::protobuf::RepeatedField<double>* VariablesProto::mutable_upper_bounds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.VariablesProto.upper_bounds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_upper_bounds();
}
inline const ::google::protobuf::RepeatedField<double>& VariablesProto::_internal_upper_bounds()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upper_bounds_;
}
inline ::google::protobuf::RepeatedField<double>* VariablesProto::_internal_mutable_upper_bounds() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.upper_bounds_;
}

// repeated bool integers = 4;
inline int VariablesProto::_internal_integers_size() const {
  return _internal_integers().size();
}
inline int VariablesProto::integers_size() const {
  return _internal_integers_size();
}
inline void VariablesProto::clear_integers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.integers_.Clear();
}
inline bool VariablesProto::integers(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.VariablesProto.integers)
  return _internal_integers().Get(index);
}
inline void VariablesProto::set_integers(int index, bool value) {
  _internal_mutable_integers()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.integers)
}
inline void VariablesProto::add_integers(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_integers()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.integers)
}
inline const ::google::protobuf::RepeatedField<bool>& VariablesProto::integers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.VariablesProto.integers)
  return _internal_integers();
}
inline ::google::protobuf::RepeatedField<bool>* VariablesProto::mutable_integers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.VariablesProto.integers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_integers();
}
inline const ::google::protobuf::RepeatedField<bool>& VariablesProto::_internal_integers()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.integers_;
}
inline ::google::protobuf::RepeatedField<bool>* VariablesProto::_internal_mutable_integers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.integers_;
}

// repeated string names = 5;
inline int VariablesProto::_internal_names_size() const {
  return _internal_names().size();
}
inline int VariablesProto::names_size() const {
  return _internal_names_size();
}
inline void VariablesProto::clear_names() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.names_.Clear();
}
inline std::string* VariablesProto::add_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:operations_research.math_opt.VariablesProto.names)
  return _s;
}
inline const std::string& VariablesProto::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.VariablesProto.names)
  return _internal_names().Get(index);
}
inline std::string* VariablesProto::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.VariablesProto.names)
  return _internal_mutable_names()->Mutable(index);
}
inline void VariablesProto::set_names(int index, const std::string& value) {
  _internal_mutable_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::set_names(int index, std::string&& value) {
  _internal_mutable_names()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::set_names(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::set_names(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_names()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::set_names(int index, absl::string_view value) {
  _internal_mutable_names()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::add_names(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::add_names(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::add_names(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::add_names(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:operations_research.math_opt.VariablesProto.names)
}
inline void VariablesProto::add_names(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:operations_research.math_opt.VariablesProto.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
VariablesProto::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.VariablesProto.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
VariablesProto::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.VariablesProto.names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
VariablesProto::_internal_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
VariablesProto::_internal_mutable_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// ObjectiveProto

// bool maximize = 1;
inline void ObjectiveProto::clear_maximize() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.maximize_ = false;
}
inline bool ObjectiveProto::maximize() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.maximize)
  return _internal_maximize();
}
inline void ObjectiveProto::set_maximize(bool value) {
  _internal_set_maximize(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.ObjectiveProto.maximize)
}
inline bool ObjectiveProto::_internal_maximize() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maximize_;
}
inline void ObjectiveProto::_internal_set_maximize(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.maximize_ = value;
}

// double offset = 2;
inline void ObjectiveProto::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = 0;
}
inline double ObjectiveProto::offset() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.offset)
  return _internal_offset();
}
inline void ObjectiveProto::set_offset(double value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.ObjectiveProto.offset)
}
inline double ObjectiveProto::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void ObjectiveProto::_internal_set_offset(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// .operations_research.math_opt.SparseDoubleVectorProto linear_coefficients = 3;
inline bool ObjectiveProto::has_linear_coefficients() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_coefficients_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& ObjectiveProto::_internal_linear_coefficients() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleVectorProto* p = _impl_.linear_coefficients_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleVectorProto&>(::operations_research::math_opt::_SparseDoubleVectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& ObjectiveProto::linear_coefficients() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.linear_coefficients)
  return _internal_linear_coefficients();
}
inline void ObjectiveProto::unsafe_arena_set_allocated_linear_coefficients(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_coefficients_);
  }
  _impl_.linear_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ObjectiveProto.linear_coefficients)
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* ObjectiveProto::release_linear_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* released = _impl_.linear_coefficients_;
  _impl_.linear_coefficients_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* ObjectiveProto::unsafe_arena_release_linear_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ObjectiveProto.linear_coefficients)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* temp = _impl_.linear_coefficients_;
  _impl_.linear_coefficients_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* ObjectiveProto::_internal_mutable_linear_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.linear_coefficients_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleVectorProto>(GetArena());
    _impl_.linear_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(p);
  }
  return _impl_.linear_coefficients_;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* ObjectiveProto::mutable_linear_coefficients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleVectorProto* _msg = _internal_mutable_linear_coefficients();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ObjectiveProto.linear_coefficients)
  return _msg;
}
inline void ObjectiveProto::set_allocated_linear_coefficients(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_coefficients_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ObjectiveProto.linear_coefficients)
}

// .operations_research.math_opt.SparseDoubleMatrixProto quadratic_coefficients = 4;
inline bool ObjectiveProto::has_quadratic_coefficients() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quadratic_coefficients_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& ObjectiveProto::_internal_quadratic_coefficients() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleMatrixProto* p = _impl_.quadratic_coefficients_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleMatrixProto&>(::operations_research::math_opt::_SparseDoubleMatrixProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& ObjectiveProto::quadratic_coefficients() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.quadratic_coefficients)
  return _internal_quadratic_coefficients();
}
inline void ObjectiveProto::unsafe_arena_set_allocated_quadratic_coefficients(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quadratic_coefficients_);
  }
  _impl_.quadratic_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ObjectiveProto.quadratic_coefficients)
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ObjectiveProto::release_quadratic_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* released = _impl_.quadratic_coefficients_;
  _impl_.quadratic_coefficients_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ObjectiveProto::unsafe_arena_release_quadratic_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ObjectiveProto.quadratic_coefficients)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* temp = _impl_.quadratic_coefficients_;
  _impl_.quadratic_coefficients_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ObjectiveProto::_internal_mutable_quadratic_coefficients() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.quadratic_coefficients_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleMatrixProto>(GetArena());
    _impl_.quadratic_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(p);
  }
  return _impl_.quadratic_coefficients_;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ObjectiveProto::mutable_quadratic_coefficients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleMatrixProto* _msg = _internal_mutable_quadratic_coefficients();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ObjectiveProto.quadratic_coefficients)
  return _msg;
}
inline void ObjectiveProto::set_allocated_quadratic_coefficients(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quadratic_coefficients_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quadratic_coefficients_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ObjectiveProto.quadratic_coefficients)
}

// string name = 5;
inline void ObjectiveProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ObjectiveProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ObjectiveProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.ObjectiveProto.name)
}
inline std::string* ObjectiveProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ObjectiveProto.name)
  return _s;
}
inline const std::string& ObjectiveProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ObjectiveProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ObjectiveProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ObjectiveProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ObjectiveProto.name)
  return _impl_.name_.Release();
}
inline void ObjectiveProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ObjectiveProto.name)
}

// int64 priority = 6;
inline void ObjectiveProto::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = ::int64_t{0};
}
inline ::int64_t ObjectiveProto::priority() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ObjectiveProto.priority)
  return _internal_priority();
}
inline void ObjectiveProto::set_priority(::int64_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.ObjectiveProto.priority)
}
inline ::int64_t ObjectiveProto::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void ObjectiveProto::_internal_set_priority(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// LinearConstraintsProto

// repeated int64 ids = 1;
inline int LinearConstraintsProto::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int LinearConstraintsProto::ids_size() const {
  return _internal_ids_size();
}
inline void LinearConstraintsProto::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ids_.Clear();
}
inline ::int64_t LinearConstraintsProto::ids(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearConstraintsProto.ids)
  return _internal_ids().Get(index);
}
inline void LinearConstraintsProto::set_ids(int index, ::int64_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearConstraintsProto.ids)
}
inline void LinearConstraintsProto::add_ids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearConstraintsProto.ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& LinearConstraintsProto::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearConstraintsProto.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* LinearConstraintsProto::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearConstraintsProto.ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& LinearConstraintsProto::_internal_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* LinearConstraintsProto::_internal_mutable_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ids_;
}

// repeated double lower_bounds = 2;
inline int LinearConstraintsProto::_internal_lower_bounds_size() const {
  return _internal_lower_bounds().size();
}
inline int LinearConstraintsProto::lower_bounds_size() const {
  return _internal_lower_bounds_size();
}
inline void LinearConstraintsProto::clear_lower_bounds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lower_bounds_.Clear();
}
inline double LinearConstraintsProto::lower_bounds(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearConstraintsProto.lower_bounds)
  return _internal_lower_bounds().Get(index);
}
inline void LinearConstraintsProto::set_lower_bounds(int index, double value) {
  _internal_mutable_lower_bounds()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearConstraintsProto.lower_bounds)
}
inline void LinearConstraintsProto::add_lower_bounds(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_lower_bounds()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearConstraintsProto.lower_bounds)
}
inline const ::google::protobuf::RepeatedField<double>& LinearConstraintsProto::lower_bounds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearConstraintsProto.lower_bounds)
  return _internal_lower_bounds();
}
inline ::google::protobuf::RepeatedField<double>* LinearConstraintsProto::mutable_lower_bounds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearConstraintsProto.lower_bounds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_lower_bounds();
}
inline const ::google::protobuf::RepeatedField<double>& LinearConstraintsProto::_internal_lower_bounds()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lower_bounds_;
}
inline ::google::protobuf::RepeatedField<double>* LinearConstraintsProto::_internal_mutable_lower_bounds() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.lower_bounds_;
}

// repeated double upper_bounds = 3;
inline int LinearConstraintsProto::_internal_upper_bounds_size() const {
  return _internal_upper_bounds().size();
}
inline int LinearConstraintsProto::upper_bounds_size() const {
  return _internal_upper_bounds_size();
}
inline void LinearConstraintsProto::clear_upper_bounds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.upper_bounds_.Clear();
}
inline double LinearConstraintsProto::upper_bounds(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearConstraintsProto.upper_bounds)
  return _internal_upper_bounds().Get(index);
}
inline void LinearConstraintsProto::set_upper_bounds(int index, double value) {
  _internal_mutable_upper_bounds()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearConstraintsProto.upper_bounds)
}
inline void LinearConstraintsProto::add_upper_bounds(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_upper_bounds()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearConstraintsProto.upper_bounds)
}
inline const ::google::protobuf::RepeatedField<double>& LinearConstraintsProto::upper_bounds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearConstraintsProto.upper_bounds)
  return _internal_upper_bounds();
}
inline ::google::protobuf::RepeatedField<double>* LinearConstraintsProto::mutable_upper_bounds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearConstraintsProto.upper_bounds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_upper_bounds();
}
inline const ::google::protobuf::RepeatedField<double>& LinearConstraintsProto::_internal_upper_bounds()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upper_bounds_;
}
inline ::google::protobuf::RepeatedField<double>* LinearConstraintsProto::_internal_mutable_upper_bounds() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.upper_bounds_;
}

// repeated string names = 4;
inline int LinearConstraintsProto::_internal_names_size() const {
  return _internal_names().size();
}
inline int LinearConstraintsProto::names_size() const {
  return _internal_names_size();
}
inline void LinearConstraintsProto::clear_names() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.names_.Clear();
}
inline std::string* LinearConstraintsProto::add_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:operations_research.math_opt.LinearConstraintsProto.names)
  return _s;
}
inline const std::string& LinearConstraintsProto::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.LinearConstraintsProto.names)
  return _internal_names().Get(index);
}
inline std::string* LinearConstraintsProto::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.LinearConstraintsProto.names)
  return _internal_mutable_names()->Mutable(index);
}
inline void LinearConstraintsProto::set_names(int index, const std::string& value) {
  _internal_mutable_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::set_names(int index, std::string&& value) {
  _internal_mutable_names()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::set_names(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::set_names(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_names()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::set_names(int index, absl::string_view value) {
  _internal_mutable_names()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::add_names(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::add_names(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::add_names(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::add_names(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:operations_research.math_opt.LinearConstraintsProto.names)
}
inline void LinearConstraintsProto::add_names(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_names()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:operations_research.math_opt.LinearConstraintsProto.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LinearConstraintsProto::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.LinearConstraintsProto.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LinearConstraintsProto::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.LinearConstraintsProto.names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LinearConstraintsProto::_internal_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LinearConstraintsProto::_internal_mutable_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// QuadraticConstraintProto

// .operations_research.math_opt.SparseDoubleVectorProto linear_terms = 1;
inline bool QuadraticConstraintProto::has_linear_terms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_terms_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& QuadraticConstraintProto::_internal_linear_terms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleVectorProto* p = _impl_.linear_terms_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleVectorProto&>(::operations_research::math_opt::_SparseDoubleVectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& QuadraticConstraintProto::linear_terms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.QuadraticConstraintProto.linear_terms)
  return _internal_linear_terms();
}
inline void QuadraticConstraintProto::unsafe_arena_set_allocated_linear_terms(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_terms_);
  }
  _impl_.linear_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.QuadraticConstraintProto.linear_terms)
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* QuadraticConstraintProto::release_linear_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* released = _impl_.linear_terms_;
  _impl_.linear_terms_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* QuadraticConstraintProto::unsafe_arena_release_linear_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.QuadraticConstraintProto.linear_terms)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* temp = _impl_.linear_terms_;
  _impl_.linear_terms_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* QuadraticConstraintProto::_internal_mutable_linear_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.linear_terms_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleVectorProto>(GetArena());
    _impl_.linear_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(p);
  }
  return _impl_.linear_terms_;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* QuadraticConstraintProto::mutable_linear_terms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleVectorProto* _msg = _internal_mutable_linear_terms();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.QuadraticConstraintProto.linear_terms)
  return _msg;
}
inline void QuadraticConstraintProto::set_allocated_linear_terms(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_terms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.QuadraticConstraintProto.linear_terms)
}

// .operations_research.math_opt.SparseDoubleMatrixProto quadratic_terms = 2;
inline bool QuadraticConstraintProto::has_quadratic_terms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quadratic_terms_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& QuadraticConstraintProto::_internal_quadratic_terms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleMatrixProto* p = _impl_.quadratic_terms_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleMatrixProto&>(::operations_research::math_opt::_SparseDoubleMatrixProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& QuadraticConstraintProto::quadratic_terms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.QuadraticConstraintProto.quadratic_terms)
  return _internal_quadratic_terms();
}
inline void QuadraticConstraintProto::unsafe_arena_set_allocated_quadratic_terms(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quadratic_terms_);
  }
  _impl_.quadratic_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.QuadraticConstraintProto.quadratic_terms)
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* QuadraticConstraintProto::release_quadratic_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* released = _impl_.quadratic_terms_;
  _impl_.quadratic_terms_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* QuadraticConstraintProto::unsafe_arena_release_quadratic_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.QuadraticConstraintProto.quadratic_terms)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* temp = _impl_.quadratic_terms_;
  _impl_.quadratic_terms_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* QuadraticConstraintProto::_internal_mutable_quadratic_terms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.quadratic_terms_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleMatrixProto>(GetArena());
    _impl_.quadratic_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(p);
  }
  return _impl_.quadratic_terms_;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* QuadraticConstraintProto::mutable_quadratic_terms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleMatrixProto* _msg = _internal_mutable_quadratic_terms();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.QuadraticConstraintProto.quadratic_terms)
  return _msg;
}
inline void QuadraticConstraintProto::set_allocated_quadratic_terms(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quadratic_terms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quadratic_terms_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.QuadraticConstraintProto.quadratic_terms)
}

// double lower_bound = 3;
inline void QuadraticConstraintProto::clear_lower_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lower_bound_ = 0;
}
inline double QuadraticConstraintProto::lower_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.QuadraticConstraintProto.lower_bound)
  return _internal_lower_bound();
}
inline void QuadraticConstraintProto::set_lower_bound(double value) {
  _internal_set_lower_bound(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.QuadraticConstraintProto.lower_bound)
}
inline double QuadraticConstraintProto::_internal_lower_bound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lower_bound_;
}
inline void QuadraticConstraintProto::_internal_set_lower_bound(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lower_bound_ = value;
}

// double upper_bound = 4;
inline void QuadraticConstraintProto::clear_upper_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.upper_bound_ = 0;
}
inline double QuadraticConstraintProto::upper_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.QuadraticConstraintProto.upper_bound)
  return _internal_upper_bound();
}
inline void QuadraticConstraintProto::set_upper_bound(double value) {
  _internal_set_upper_bound(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.QuadraticConstraintProto.upper_bound)
}
inline double QuadraticConstraintProto::_internal_upper_bound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upper_bound_;
}
inline void QuadraticConstraintProto::_internal_set_upper_bound(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.upper_bound_ = value;
}

// string name = 5;
inline void QuadraticConstraintProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& QuadraticConstraintProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.QuadraticConstraintProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuadraticConstraintProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.QuadraticConstraintProto.name)
}
inline std::string* QuadraticConstraintProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.QuadraticConstraintProto.name)
  return _s;
}
inline const std::string& QuadraticConstraintProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void QuadraticConstraintProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* QuadraticConstraintProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* QuadraticConstraintProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.QuadraticConstraintProto.name)
  return _impl_.name_.Release();
}
inline void QuadraticConstraintProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.QuadraticConstraintProto.name)
}

// -------------------------------------------------------------------

// SecondOrderConeConstraintProto

// .operations_research.math_opt.LinearExpressionProto upper_bound = 1;
inline bool SecondOrderConeConstraintProto::has_upper_bound() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_bound_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::LinearExpressionProto& SecondOrderConeConstraintProto::_internal_upper_bound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::LinearExpressionProto* p = _impl_.upper_bound_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::LinearExpressionProto&>(::operations_research::math_opt::_LinearExpressionProto_default_instance_);
}
inline const ::operations_research::math_opt::LinearExpressionProto& SecondOrderConeConstraintProto::upper_bound() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SecondOrderConeConstraintProto.upper_bound)
  return _internal_upper_bound();
}
inline void SecondOrderConeConstraintProto::unsafe_arena_set_allocated_upper_bound(::operations_research::math_opt::LinearExpressionProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_bound_);
  }
  _impl_.upper_bound_ = reinterpret_cast<::operations_research::math_opt::LinearExpressionProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SecondOrderConeConstraintProto.upper_bound)
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::release_upper_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::LinearExpressionProto* released = _impl_.upper_bound_;
  _impl_.upper_bound_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::unsafe_arena_release_upper_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SecondOrderConeConstraintProto.upper_bound)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::LinearExpressionProto* temp = _impl_.upper_bound_;
  _impl_.upper_bound_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::_internal_mutable_upper_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.upper_bound_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::LinearExpressionProto>(GetArena());
    _impl_.upper_bound_ = reinterpret_cast<::operations_research::math_opt::LinearExpressionProto*>(p);
  }
  return _impl_.upper_bound_;
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::mutable_upper_bound() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::LinearExpressionProto* _msg = _internal_mutable_upper_bound();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SecondOrderConeConstraintProto.upper_bound)
  return _msg;
}
inline void SecondOrderConeConstraintProto::set_allocated_upper_bound(::operations_research::math_opt::LinearExpressionProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_bound_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.upper_bound_ = reinterpret_cast<::operations_research::math_opt::LinearExpressionProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SecondOrderConeConstraintProto.upper_bound)
}

// repeated .operations_research.math_opt.LinearExpressionProto arguments_to_norm = 2;
inline int SecondOrderConeConstraintProto::_internal_arguments_to_norm_size() const {
  return _internal_arguments_to_norm().size();
}
inline int SecondOrderConeConstraintProto::arguments_to_norm_size() const {
  return _internal_arguments_to_norm_size();
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::mutable_arguments_to_norm(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SecondOrderConeConstraintProto.arguments_to_norm)
  return _internal_mutable_arguments_to_norm()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>* SecondOrderConeConstraintProto::mutable_arguments_to_norm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SecondOrderConeConstraintProto.arguments_to_norm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_arguments_to_norm();
}
inline const ::operations_research::math_opt::LinearExpressionProto& SecondOrderConeConstraintProto::arguments_to_norm(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SecondOrderConeConstraintProto.arguments_to_norm)
  return _internal_arguments_to_norm().Get(index);
}
inline ::operations_research::math_opt::LinearExpressionProto* SecondOrderConeConstraintProto::add_arguments_to_norm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::math_opt::LinearExpressionProto* _add = _internal_mutable_arguments_to_norm()->Add();
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SecondOrderConeConstraintProto.arguments_to_norm)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>& SecondOrderConeConstraintProto::arguments_to_norm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SecondOrderConeConstraintProto.arguments_to_norm)
  return _internal_arguments_to_norm();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>&
SecondOrderConeConstraintProto::_internal_arguments_to_norm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arguments_to_norm_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>*
SecondOrderConeConstraintProto::_internal_mutable_arguments_to_norm() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.arguments_to_norm_;
}

// string name = 3;
inline void SecondOrderConeConstraintProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SecondOrderConeConstraintProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SecondOrderConeConstraintProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SecondOrderConeConstraintProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SecondOrderConeConstraintProto.name)
}
inline std::string* SecondOrderConeConstraintProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SecondOrderConeConstraintProto.name)
  return _s;
}
inline const std::string& SecondOrderConeConstraintProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SecondOrderConeConstraintProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SecondOrderConeConstraintProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SecondOrderConeConstraintProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SecondOrderConeConstraintProto.name)
  return _impl_.name_.Release();
}
inline void SecondOrderConeConstraintProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SecondOrderConeConstraintProto.name)
}

// -------------------------------------------------------------------

// SosConstraintProto

// repeated .operations_research.math_opt.LinearExpressionProto expressions = 1;
inline int SosConstraintProto::_internal_expressions_size() const {
  return _internal_expressions().size();
}
inline int SosConstraintProto::expressions_size() const {
  return _internal_expressions_size();
}
inline ::operations_research::math_opt::LinearExpressionProto* SosConstraintProto::mutable_expressions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SosConstraintProto.expressions)
  return _internal_mutable_expressions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>* SosConstraintProto::mutable_expressions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SosConstraintProto.expressions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_expressions();
}
inline const ::operations_research::math_opt::LinearExpressionProto& SosConstraintProto::expressions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SosConstraintProto.expressions)
  return _internal_expressions().Get(index);
}
inline ::operations_research::math_opt::LinearExpressionProto* SosConstraintProto::add_expressions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::math_opt::LinearExpressionProto* _add = _internal_mutable_expressions()->Add();
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SosConstraintProto.expressions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>& SosConstraintProto::expressions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SosConstraintProto.expressions)
  return _internal_expressions();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>&
SosConstraintProto::_internal_expressions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.expressions_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::LinearExpressionProto>*
SosConstraintProto::_internal_mutable_expressions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.expressions_;
}

// repeated double weights = 2;
inline int SosConstraintProto::_internal_weights_size() const {
  return _internal_weights().size();
}
inline int SosConstraintProto::weights_size() const {
  return _internal_weights_size();
}
inline void SosConstraintProto::clear_weights() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.weights_.Clear();
}
inline double SosConstraintProto::weights(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SosConstraintProto.weights)
  return _internal_weights().Get(index);
}
inline void SosConstraintProto::set_weights(int index, double value) {
  _internal_mutable_weights()->Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SosConstraintProto.weights)
}
inline void SosConstraintProto::add_weights(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_weights()->Add(value);
  // @@protoc_insertion_point(field_add:operations_research.math_opt.SosConstraintProto.weights)
}
inline const ::google::protobuf::RepeatedField<double>& SosConstraintProto::weights() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.SosConstraintProto.weights)
  return _internal_weights();
}
inline ::google::protobuf::RepeatedField<double>* SosConstraintProto::mutable_weights()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.SosConstraintProto.weights)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_weights();
}
inline const ::google::protobuf::RepeatedField<double>& SosConstraintProto::_internal_weights()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.weights_;
}
inline ::google::protobuf::RepeatedField<double>* SosConstraintProto::_internal_mutable_weights() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.weights_;
}

// string name = 3;
inline void SosConstraintProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SosConstraintProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SosConstraintProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SosConstraintProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.SosConstraintProto.name)
}
inline std::string* SosConstraintProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SosConstraintProto.name)
  return _s;
}
inline const std::string& SosConstraintProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SosConstraintProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SosConstraintProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SosConstraintProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SosConstraintProto.name)
  return _impl_.name_.Release();
}
inline void SosConstraintProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SosConstraintProto.name)
}

// -------------------------------------------------------------------

// IndicatorConstraintProto

// optional int64 indicator_id = 1;
inline bool IndicatorConstraintProto::has_indicator_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void IndicatorConstraintProto::clear_indicator_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.indicator_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t IndicatorConstraintProto::indicator_id() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.indicator_id)
  return _internal_indicator_id();
}
inline void IndicatorConstraintProto::set_indicator_id(::int64_t value) {
  _internal_set_indicator_id(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.IndicatorConstraintProto.indicator_id)
}
inline ::int64_t IndicatorConstraintProto::_internal_indicator_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.indicator_id_;
}
inline void IndicatorConstraintProto::_internal_set_indicator_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.indicator_id_ = value;
}

// bool activate_on_zero = 6;
inline void IndicatorConstraintProto::clear_activate_on_zero() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.activate_on_zero_ = false;
}
inline bool IndicatorConstraintProto::activate_on_zero() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.activate_on_zero)
  return _internal_activate_on_zero();
}
inline void IndicatorConstraintProto::set_activate_on_zero(bool value) {
  _internal_set_activate_on_zero(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.IndicatorConstraintProto.activate_on_zero)
}
inline bool IndicatorConstraintProto::_internal_activate_on_zero() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.activate_on_zero_;
}
inline void IndicatorConstraintProto::_internal_set_activate_on_zero(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.activate_on_zero_ = value;
}

// .operations_research.math_opt.SparseDoubleVectorProto expression = 2;
inline bool IndicatorConstraintProto::has_expression() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expression_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& IndicatorConstraintProto::_internal_expression() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleVectorProto* p = _impl_.expression_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleVectorProto&>(::operations_research::math_opt::_SparseDoubleVectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& IndicatorConstraintProto::expression() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.expression)
  return _internal_expression();
}
inline void IndicatorConstraintProto::unsafe_arena_set_allocated_expression(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expression_);
  }
  _impl_.expression_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.IndicatorConstraintProto.expression)
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* IndicatorConstraintProto::release_expression() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* released = _impl_.expression_;
  _impl_.expression_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* IndicatorConstraintProto::unsafe_arena_release_expression() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.IndicatorConstraintProto.expression)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* temp = _impl_.expression_;
  _impl_.expression_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* IndicatorConstraintProto::_internal_mutable_expression() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.expression_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleVectorProto>(GetArena());
    _impl_.expression_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(p);
  }
  return _impl_.expression_;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* IndicatorConstraintProto::mutable_expression() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleVectorProto* _msg = _internal_mutable_expression();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.IndicatorConstraintProto.expression)
  return _msg;
}
inline void IndicatorConstraintProto::set_allocated_expression(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expression_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.expression_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.IndicatorConstraintProto.expression)
}

// double lower_bound = 3;
inline void IndicatorConstraintProto::clear_lower_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lower_bound_ = 0;
}
inline double IndicatorConstraintProto::lower_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.lower_bound)
  return _internal_lower_bound();
}
inline void IndicatorConstraintProto::set_lower_bound(double value) {
  _internal_set_lower_bound(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.IndicatorConstraintProto.lower_bound)
}
inline double IndicatorConstraintProto::_internal_lower_bound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lower_bound_;
}
inline void IndicatorConstraintProto::_internal_set_lower_bound(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lower_bound_ = value;
}

// double upper_bound = 4;
inline void IndicatorConstraintProto::clear_upper_bound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.upper_bound_ = 0;
}
inline double IndicatorConstraintProto::upper_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.upper_bound)
  return _internal_upper_bound();
}
inline void IndicatorConstraintProto::set_upper_bound(double value) {
  _internal_set_upper_bound(value);
  // @@protoc_insertion_point(field_set:operations_research.math_opt.IndicatorConstraintProto.upper_bound)
}
inline double IndicatorConstraintProto::_internal_upper_bound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.upper_bound_;
}
inline void IndicatorConstraintProto::_internal_set_upper_bound(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.upper_bound_ = value;
}

// string name = 5;
inline void IndicatorConstraintProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& IndicatorConstraintProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.IndicatorConstraintProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndicatorConstraintProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.IndicatorConstraintProto.name)
}
inline std::string* IndicatorConstraintProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.IndicatorConstraintProto.name)
  return _s;
}
inline const std::string& IndicatorConstraintProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void IndicatorConstraintProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* IndicatorConstraintProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* IndicatorConstraintProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.IndicatorConstraintProto.name)
  return _impl_.name_.Release();
}
inline void IndicatorConstraintProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.IndicatorConstraintProto.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ModelProto

// string name = 1;
inline void ModelProto::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ModelProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelProto::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:operations_research.math_opt.ModelProto.name)
}
inline std::string* ModelProto::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelProto.name)
  return _s;
}
inline const std::string& ModelProto::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ModelProto::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ModelProto::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ModelProto::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelProto.name)
  return _impl_.name_.Release();
}
inline void ModelProto::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelProto.name)
}

// .operations_research.math_opt.VariablesProto variables = 2;
inline bool ModelProto::has_variables() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.variables_ != nullptr);
  return value;
}
inline void ModelProto::clear_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.variables_ != nullptr) _impl_.variables_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::operations_research::math_opt::VariablesProto& ModelProto::_internal_variables() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::VariablesProto* p = _impl_.variables_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::VariablesProto&>(::operations_research::math_opt::_VariablesProto_default_instance_);
}
inline const ::operations_research::math_opt::VariablesProto& ModelProto::variables() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelProto.variables)
  return _internal_variables();
}
inline void ModelProto::unsafe_arena_set_allocated_variables(::operations_research::math_opt::VariablesProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.variables_);
  }
  _impl_.variables_ = reinterpret_cast<::operations_research::math_opt::VariablesProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelProto.variables)
}
inline ::operations_research::math_opt::VariablesProto* ModelProto::release_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::VariablesProto* released = _impl_.variables_;
  _impl_.variables_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::VariablesProto* ModelProto::unsafe_arena_release_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelProto.variables)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::VariablesProto* temp = _impl_.variables_;
  _impl_.variables_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::VariablesProto* ModelProto::_internal_mutable_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.variables_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::VariablesProto>(GetArena());
    _impl_.variables_ = reinterpret_cast<::operations_research::math_opt::VariablesProto*>(p);
  }
  return _impl_.variables_;
}
inline ::operations_research::math_opt::VariablesProto* ModelProto::mutable_variables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::VariablesProto* _msg = _internal_mutable_variables();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelProto.variables)
  return _msg;
}
inline void ModelProto::set_allocated_variables(::operations_research::math_opt::VariablesProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::math_opt::VariablesProto*>(_impl_.variables_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::math_opt::VariablesProto*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.variables_ = reinterpret_cast<::operations_research::math_opt::VariablesProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelProto.variables)
}

// .operations_research.math_opt.ObjectiveProto objective = 3;
inline bool ModelProto::has_objective() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.objective_ != nullptr);
  return value;
}
inline void ModelProto::clear_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.objective_ != nullptr) _impl_.objective_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::operations_research::math_opt::ObjectiveProto& ModelProto::_internal_objective() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::ObjectiveProto* p = _impl_.objective_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::ObjectiveProto&>(::operations_research::math_opt::_ObjectiveProto_default_instance_);
}
inline const ::operations_research::math_opt::ObjectiveProto& ModelProto::objective() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelProto.objective)
  return _internal_objective();
}
inline void ModelProto::unsafe_arena_set_allocated_objective(::operations_research::math_opt::ObjectiveProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.objective_);
  }
  _impl_.objective_ = reinterpret_cast<::operations_research::math_opt::ObjectiveProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelProto.objective)
}
inline ::operations_research::math_opt::ObjectiveProto* ModelProto::release_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::ObjectiveProto* released = _impl_.objective_;
  _impl_.objective_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::ObjectiveProto* ModelProto::unsafe_arena_release_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelProto.objective)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::ObjectiveProto* temp = _impl_.objective_;
  _impl_.objective_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::ObjectiveProto* ModelProto::_internal_mutable_objective() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.objective_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::ObjectiveProto>(GetArena());
    _impl_.objective_ = reinterpret_cast<::operations_research::math_opt::ObjectiveProto*>(p);
  }
  return _impl_.objective_;
}
inline ::operations_research::math_opt::ObjectiveProto* ModelProto::mutable_objective() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::ObjectiveProto* _msg = _internal_mutable_objective();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelProto.objective)
  return _msg;
}
inline void ModelProto::set_allocated_objective(::operations_research::math_opt::ObjectiveProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::math_opt::ObjectiveProto*>(_impl_.objective_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::math_opt::ObjectiveProto*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.objective_ = reinterpret_cast<::operations_research::math_opt::ObjectiveProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelProto.objective)
}

// map<int64, .operations_research.math_opt.ObjectiveProto> auxiliary_objectives = 10;
inline int ModelProto::_internal_auxiliary_objectives_size() const {
  return _internal_auxiliary_objectives().size();
}
inline int ModelProto::auxiliary_objectives_size() const {
  return _internal_auxiliary_objectives_size();
}
inline void ModelProto::clear_auxiliary_objectives() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auxiliary_objectives_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>& ModelProto::_internal_auxiliary_objectives() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auxiliary_objectives_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>& ModelProto::auxiliary_objectives() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.auxiliary_objectives)
  return _internal_auxiliary_objectives();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>* ModelProto::_internal_mutable_auxiliary_objectives() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.auxiliary_objectives_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::ObjectiveProto>* ModelProto::mutable_auxiliary_objectives() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.auxiliary_objectives)
  return _internal_mutable_auxiliary_objectives();
}

// .operations_research.math_opt.LinearConstraintsProto linear_constraints = 4;
inline bool ModelProto::has_linear_constraints() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_constraints_ != nullptr);
  return value;
}
inline void ModelProto::clear_linear_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.linear_constraints_ != nullptr) _impl_.linear_constraints_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::operations_research::math_opt::LinearConstraintsProto& ModelProto::_internal_linear_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::LinearConstraintsProto* p = _impl_.linear_constraints_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::LinearConstraintsProto&>(::operations_research::math_opt::_LinearConstraintsProto_default_instance_);
}
inline const ::operations_research::math_opt::LinearConstraintsProto& ModelProto::linear_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelProto.linear_constraints)
  return _internal_linear_constraints();
}
inline void ModelProto::unsafe_arena_set_allocated_linear_constraints(::operations_research::math_opt::LinearConstraintsProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_constraints_);
  }
  _impl_.linear_constraints_ = reinterpret_cast<::operations_research::math_opt::LinearConstraintsProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelProto.linear_constraints)
}
inline ::operations_research::math_opt::LinearConstraintsProto* ModelProto::release_linear_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::LinearConstraintsProto* released = _impl_.linear_constraints_;
  _impl_.linear_constraints_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::LinearConstraintsProto* ModelProto::unsafe_arena_release_linear_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelProto.linear_constraints)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::LinearConstraintsProto* temp = _impl_.linear_constraints_;
  _impl_.linear_constraints_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::LinearConstraintsProto* ModelProto::_internal_mutable_linear_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.linear_constraints_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::LinearConstraintsProto>(GetArena());
    _impl_.linear_constraints_ = reinterpret_cast<::operations_research::math_opt::LinearConstraintsProto*>(p);
  }
  return _impl_.linear_constraints_;
}
inline ::operations_research::math_opt::LinearConstraintsProto* ModelProto::mutable_linear_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::LinearConstraintsProto* _msg = _internal_mutable_linear_constraints();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelProto.linear_constraints)
  return _msg;
}
inline void ModelProto::set_allocated_linear_constraints(::operations_research::math_opt::LinearConstraintsProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::operations_research::math_opt::LinearConstraintsProto*>(_impl_.linear_constraints_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::operations_research::math_opt::LinearConstraintsProto*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.linear_constraints_ = reinterpret_cast<::operations_research::math_opt::LinearConstraintsProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelProto.linear_constraints)
}

// .operations_research.math_opt.SparseDoubleMatrixProto linear_constraint_matrix = 5;
inline bool ModelProto::has_linear_constraint_matrix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_constraint_matrix_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& ModelProto::_internal_linear_constraint_matrix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleMatrixProto* p = _impl_.linear_constraint_matrix_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleMatrixProto&>(::operations_research::math_opt::_SparseDoubleMatrixProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleMatrixProto& ModelProto::linear_constraint_matrix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelProto.linear_constraint_matrix)
  return _internal_linear_constraint_matrix();
}
inline void ModelProto::unsafe_arena_set_allocated_linear_constraint_matrix(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_constraint_matrix_);
  }
  _impl_.linear_constraint_matrix_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelProto.linear_constraint_matrix)
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ModelProto::release_linear_constraint_matrix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* released = _impl_.linear_constraint_matrix_;
  _impl_.linear_constraint_matrix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ModelProto::unsafe_arena_release_linear_constraint_matrix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelProto.linear_constraint_matrix)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::SparseDoubleMatrixProto* temp = _impl_.linear_constraint_matrix_;
  _impl_.linear_constraint_matrix_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ModelProto::_internal_mutable_linear_constraint_matrix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.linear_constraint_matrix_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleMatrixProto>(GetArena());
    _impl_.linear_constraint_matrix_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(p);
  }
  return _impl_.linear_constraint_matrix_;
}
inline ::operations_research::math_opt::SparseDoubleMatrixProto* ModelProto::mutable_linear_constraint_matrix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleMatrixProto* _msg = _internal_mutable_linear_constraint_matrix();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelProto.linear_constraint_matrix)
  return _msg;
}
inline void ModelProto::set_allocated_linear_constraint_matrix(::operations_research::math_opt::SparseDoubleMatrixProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_constraint_matrix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.linear_constraint_matrix_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleMatrixProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelProto.linear_constraint_matrix)
}

// map<int64, .operations_research.math_opt.QuadraticConstraintProto> quadratic_constraints = 6;
inline int ModelProto::_internal_quadratic_constraints_size() const {
  return _internal_quadratic_constraints().size();
}
inline int ModelProto::quadratic_constraints_size() const {
  return _internal_quadratic_constraints_size();
}
inline void ModelProto::clear_quadratic_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quadratic_constraints_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>& ModelProto::_internal_quadratic_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quadratic_constraints_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>& ModelProto::quadratic_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.quadratic_constraints)
  return _internal_quadratic_constraints();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>* ModelProto::_internal_mutable_quadratic_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.quadratic_constraints_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::QuadraticConstraintProto>* ModelProto::mutable_quadratic_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.quadratic_constraints)
  return _internal_mutable_quadratic_constraints();
}

// map<int64, .operations_research.math_opt.SecondOrderConeConstraintProto> second_order_cone_constraints = 11;
inline int ModelProto::_internal_second_order_cone_constraints_size() const {
  return _internal_second_order_cone_constraints().size();
}
inline int ModelProto::second_order_cone_constraints_size() const {
  return _internal_second_order_cone_constraints_size();
}
inline void ModelProto::clear_second_order_cone_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.second_order_cone_constraints_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>& ModelProto::_internal_second_order_cone_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.second_order_cone_constraints_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>& ModelProto::second_order_cone_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.second_order_cone_constraints)
  return _internal_second_order_cone_constraints();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>* ModelProto::_internal_mutable_second_order_cone_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.second_order_cone_constraints_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SecondOrderConeConstraintProto>* ModelProto::mutable_second_order_cone_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.second_order_cone_constraints)
  return _internal_mutable_second_order_cone_constraints();
}

// map<int64, .operations_research.math_opt.SosConstraintProto> sos1_constraints = 7;
inline int ModelProto::_internal_sos1_constraints_size() const {
  return _internal_sos1_constraints().size();
}
inline int ModelProto::sos1_constraints_size() const {
  return _internal_sos1_constraints_size();
}
inline void ModelProto::clear_sos1_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sos1_constraints_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& ModelProto::_internal_sos1_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sos1_constraints_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& ModelProto::sos1_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.sos1_constraints)
  return _internal_sos1_constraints();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* ModelProto::_internal_mutable_sos1_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.sos1_constraints_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* ModelProto::mutable_sos1_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.sos1_constraints)
  return _internal_mutable_sos1_constraints();
}

// map<int64, .operations_research.math_opt.SosConstraintProto> sos2_constraints = 8;
inline int ModelProto::_internal_sos2_constraints_size() const {
  return _internal_sos2_constraints().size();
}
inline int ModelProto::sos2_constraints_size() const {
  return _internal_sos2_constraints_size();
}
inline void ModelProto::clear_sos2_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sos2_constraints_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& ModelProto::_internal_sos2_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sos2_constraints_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>& ModelProto::sos2_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.sos2_constraints)
  return _internal_sos2_constraints();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* ModelProto::_internal_mutable_sos2_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.sos2_constraints_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::SosConstraintProto>* ModelProto::mutable_sos2_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.sos2_constraints)
  return _internal_mutable_sos2_constraints();
}

// map<int64, .operations_research.math_opt.IndicatorConstraintProto> indicator_constraints = 9;
inline int ModelProto::_internal_indicator_constraints_size() const {
  return _internal_indicator_constraints().size();
}
inline int ModelProto::indicator_constraints_size() const {
  return _internal_indicator_constraints_size();
}
inline void ModelProto::clear_indicator_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.indicator_constraints_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>& ModelProto::_internal_indicator_constraints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.indicator_constraints_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>& ModelProto::indicator_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:operations_research.math_opt.ModelProto.indicator_constraints)
  return _internal_indicator_constraints();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>* ModelProto::_internal_mutable_indicator_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.indicator_constraints_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::operations_research::math_opt::IndicatorConstraintProto>* ModelProto::mutable_indicator_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:operations_research.math_opt.ModelProto.indicator_constraints)
  return _internal_mutable_indicator_constraints();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_2eproto_2epb_2eh
