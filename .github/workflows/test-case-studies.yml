---
name: "Testing known case studies"

on:
  push:
    branches:
      - "master"
      - "develop"

concurrency:
  group: Testing known case studies
  cancel-in-progress: true

jobs:
  build-and-test-on-linux:
    strategy:
      matrix:
        jabba_jdk: [temurin@17, amazon-corretto@17, zulu@17, microsoft@17]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Build and Test cases
        run: |
          sudo apt-get update
          sudo apt-get install -y curl bash build-essential libssl-dev pkg-config mingw-w64 musl-dev musl-tools dos2unix
          cd ${{ github.workspace }}
          # for whatever reason, for the moment nothing seems to work except an extreme manual approach.
          # this should be corrected later when misterious external errors stop happening
          wget -c https://github.com/Jabba-Team/jabba/releases/download/0.13.0/jabba-0.13.0-linux-amd64 -O ./jabba-linux-amd64
          chmod +x jabba-linux-amd64
          ./jabba-linux-amd64 install ${{ matrix.jabba_jdk }} -o /opt/jdk
          export JAVA_HOME=/opt/jdk
          export PATH=$PATH:$JAVA_HOME/bin
          curl -fL "https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-linux-static.gz" | gzip -d > cs
          chmod +x ./cs
          ./cs setup --yes
          dos2unix ./gradlew # make sure that gradlew is not with CRLF
          bash ./scripts/make-all-linux.sh
          python -m pip install robotframework
          python -m robot --exclude slow TestsBenchmark.robot
      # - name: Cache-out outputs
      #   uses: actions/cache@v3
      #   with:
      #     enableCrossOsArchive: true
      #     path: ${{ github.workspace }}/dist
      #     key: ${{ github.ref }}-${{ matrix.jabba_jdk }}-dist
  # test-cases-linux:
  #   strategy:
  #     matrix:
  #       jabba_jdk: [temurin@17, amazon-corretto@17, zulu@17, microsoft@17]
  #       target: [x86_64-unknown-linux-musl]
  #   runs-on: ubuntu-latest
  #   needs: build-on-linux
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache-in outputs
  #       uses: actions/cache@v3
  #       with:
  #         enableCrossOsArchive: true
  #         path: ${{ github.workspace }}/dist
  #         key: ${{ github.ref }}-${{ matrix.jabba_jdk }}-dist
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10' 
  #     - run: |
  #         cd ${{ github.workspace }}
  #         cp -r ${{ github.workspace }}/dist/x86_64-unknown-linux-musl/* .
  #         mkdir -p /opt/jdk
  #         curl -sL https://github.com/Jabba-Team/jabba/raw/main/install.sh | JABBA_COMMAND="install ${{ matrix.jabba_jdk }} -o /opt/jdk" bash
  #         export JAVA_HOME=/opt/jdk
  #         export PATH="$JAVA_HOME/bin:$PATH"
  #         python -m pip install robotframework
  #         python -m robot --exclude slow TestsBenchmark.robot
  # test-cases-win:
  #   strategy:
  #     matrix:
  #       jabba_jdk: [temurin@17, amazon-corretto@17, zulu@17, microsoft@17]
  #   runs-on: windows-latest
  #   needs: build-on-linux
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10' 
  #     - name: Cache-in outputs
  #       uses: actions/cache@v3
  #       with:
  #         enableCrossOsArchive: true
  #         path: ${{ github.workspace }}/dist
  #         key: ${{ github.ref }}-${{ matrix.jabba_jdk }}-dist
  #     - run: |
  #         cd ${{ github.workspace }}
  #         cp -r ${{ github.workspace }}/dist/x86_64-pc-windows-gnu/* .
  #         [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
  #         Invoke-Expression (
  #           Invoke-WebRequest https://github.com/Jabba-Team/jabba/raw/master/install.ps1 -UseBasicParsing
  #         ).Content
  #         jabba install ${{ matrix.jabba_jdk }}
  #         jabba alias default ${{ matrix.jabba_jdk }}
  #         python -m pip install robotframework
  #         python -m robot --exclude slow TestsBenchmark.robot
