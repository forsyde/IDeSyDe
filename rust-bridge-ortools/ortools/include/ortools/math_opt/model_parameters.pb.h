// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/math_opt/model_parameters.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "ortools/math_opt/solution.pb.h"
#include "ortools/math_opt/sparse_containers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto;
namespace operations_research {
namespace math_opt {
class ModelSolveParametersProto;
struct ModelSolveParametersProtoDefaultTypeInternal;
extern ModelSolveParametersProtoDefaultTypeInternal _ModelSolveParametersProto_default_instance_;
class SolutionHintProto;
struct SolutionHintProtoDefaultTypeInternal;
extern SolutionHintProtoDefaultTypeInternal _SolutionHintProto_default_instance_;
}  // namespace math_opt
}  // namespace operations_research
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace operations_research {
namespace math_opt {

// ===================================================================


// -------------------------------------------------------------------

class SolutionHintProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.SolutionHintProto) */ {
 public:
  inline SolutionHintProto() : SolutionHintProto(nullptr) {}
  ~SolutionHintProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SolutionHintProto(::google::protobuf::internal::ConstantInitialized);

  inline SolutionHintProto(const SolutionHintProto& from)
      : SolutionHintProto(nullptr, from) {}
  SolutionHintProto(SolutionHintProto&& from) noexcept
    : SolutionHintProto() {
    *this = ::std::move(from);
  }

  inline SolutionHintProto& operator=(const SolutionHintProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolutionHintProto& operator=(SolutionHintProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SolutionHintProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const SolutionHintProto* internal_default_instance() {
    return reinterpret_cast<const SolutionHintProto*>(
               &_SolutionHintProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SolutionHintProto& a, SolutionHintProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SolutionHintProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolutionHintProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SolutionHintProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SolutionHintProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SolutionHintProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SolutionHintProto& from) {
    SolutionHintProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SolutionHintProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.SolutionHintProto";
  }
  protected:
  explicit SolutionHintProto(::google::protobuf::Arena* arena);
  SolutionHintProto(::google::protobuf::Arena* arena, const SolutionHintProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValuesFieldNumber = 1,
    kDualValuesFieldNumber = 2,
  };
  // .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
  bool has_variable_values() const;
  void clear_variable_values() ;
  const ::operations_research::math_opt::SparseDoubleVectorProto& variable_values() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleVectorProto* release_variable_values();
  ::operations_research::math_opt::SparseDoubleVectorProto* mutable_variable_values();
  void set_allocated_variable_values(::operations_research::math_opt::SparseDoubleVectorProto* value);
  void unsafe_arena_set_allocated_variable_values(::operations_research::math_opt::SparseDoubleVectorProto* value);
  ::operations_research::math_opt::SparseDoubleVectorProto* unsafe_arena_release_variable_values();

  private:
  const ::operations_research::math_opt::SparseDoubleVectorProto& _internal_variable_values() const;
  ::operations_research::math_opt::SparseDoubleVectorProto* _internal_mutable_variable_values();

  public:
  // .operations_research.math_opt.SparseDoubleVectorProto dual_values = 2;
  bool has_dual_values() const;
  void clear_dual_values() ;
  const ::operations_research::math_opt::SparseDoubleVectorProto& dual_values() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseDoubleVectorProto* release_dual_values();
  ::operations_research::math_opt::SparseDoubleVectorProto* mutable_dual_values();
  void set_allocated_dual_values(::operations_research::math_opt::SparseDoubleVectorProto* value);
  void unsafe_arena_set_allocated_dual_values(::operations_research::math_opt::SparseDoubleVectorProto* value);
  ::operations_research::math_opt::SparseDoubleVectorProto* unsafe_arena_release_dual_values();

  private:
  const ::operations_research::math_opt::SparseDoubleVectorProto& _internal_dual_values() const;
  ::operations_research::math_opt::SparseDoubleVectorProto* _internal_mutable_dual_values();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.SolutionHintProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::operations_research::math_opt::SparseDoubleVectorProto* variable_values_;
    ::operations_research::math_opt::SparseDoubleVectorProto* dual_values_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto;
};// -------------------------------------------------------------------

class ModelSolveParametersProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.math_opt.ModelSolveParametersProto) */ {
 public:
  inline ModelSolveParametersProto() : ModelSolveParametersProto(nullptr) {}
  ~ModelSolveParametersProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModelSolveParametersProto(::google::protobuf::internal::ConstantInitialized);

  inline ModelSolveParametersProto(const ModelSolveParametersProto& from)
      : ModelSolveParametersProto(nullptr, from) {}
  ModelSolveParametersProto(ModelSolveParametersProto&& from) noexcept
    : ModelSolveParametersProto() {
    *this = ::std::move(from);
  }

  inline ModelSolveParametersProto& operator=(const ModelSolveParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelSolveParametersProto& operator=(ModelSolveParametersProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelSolveParametersProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelSolveParametersProto* internal_default_instance() {
    return reinterpret_cast<const ModelSolveParametersProto*>(
               &_ModelSolveParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModelSolveParametersProto& a, ModelSolveParametersProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelSolveParametersProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelSolveParametersProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelSolveParametersProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModelSolveParametersProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelSolveParametersProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModelSolveParametersProto& from) {
    ModelSolveParametersProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModelSolveParametersProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "operations_research.math_opt.ModelSolveParametersProto";
  }
  protected:
  explicit ModelSolveParametersProto(::google::protobuf::Arena* arena);
  ModelSolveParametersProto(::google::protobuf::Arena* arena, const ModelSolveParametersProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSolutionHintsFieldNumber = 5,
    kVariableValuesFilterFieldNumber = 1,
    kDualValuesFilterFieldNumber = 2,
    kReducedCostsFilterFieldNumber = 3,
    kInitialBasisFieldNumber = 4,
    kBranchingPrioritiesFieldNumber = 6,
  };
  // repeated .operations_research.math_opt.SolutionHintProto solution_hints = 5;
  int solution_hints_size() const;
  private:
  int _internal_solution_hints_size() const;

  public:
  void clear_solution_hints() ;
  ::operations_research::math_opt::SolutionHintProto* mutable_solution_hints(int index);
  ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::SolutionHintProto >*
      mutable_solution_hints();
  private:
  const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>& _internal_solution_hints() const;
  ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>* _internal_mutable_solution_hints();
  public:
  const ::operations_research::math_opt::SolutionHintProto& solution_hints(int index) const;
  ::operations_research::math_opt::SolutionHintProto* add_solution_hints();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::SolutionHintProto >&
      solution_hints() const;
  // .operations_research.math_opt.SparseVectorFilterProto variable_values_filter = 1;
  bool has_variable_values_filter() const;
  void clear_variable_values_filter() ;
  const ::operations_research::math_opt::SparseVectorFilterProto& variable_values_filter() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseVectorFilterProto* release_variable_values_filter();
  ::operations_research::math_opt::SparseVectorFilterProto* mutable_variable_values_filter();
  void set_allocated_variable_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  void unsafe_arena_set_allocated_variable_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  ::operations_research::math_opt::SparseVectorFilterProto* unsafe_arena_release_variable_values_filter();

  private:
  const ::operations_research::math_opt::SparseVectorFilterProto& _internal_variable_values_filter() const;
  ::operations_research::math_opt::SparseVectorFilterProto* _internal_mutable_variable_values_filter();

  public:
  // .operations_research.math_opt.SparseVectorFilterProto dual_values_filter = 2;
  bool has_dual_values_filter() const;
  void clear_dual_values_filter() ;
  const ::operations_research::math_opt::SparseVectorFilterProto& dual_values_filter() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseVectorFilterProto* release_dual_values_filter();
  ::operations_research::math_opt::SparseVectorFilterProto* mutable_dual_values_filter();
  void set_allocated_dual_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  void unsafe_arena_set_allocated_dual_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  ::operations_research::math_opt::SparseVectorFilterProto* unsafe_arena_release_dual_values_filter();

  private:
  const ::operations_research::math_opt::SparseVectorFilterProto& _internal_dual_values_filter() const;
  ::operations_research::math_opt::SparseVectorFilterProto* _internal_mutable_dual_values_filter();

  public:
  // .operations_research.math_opt.SparseVectorFilterProto reduced_costs_filter = 3;
  bool has_reduced_costs_filter() const;
  void clear_reduced_costs_filter() ;
  const ::operations_research::math_opt::SparseVectorFilterProto& reduced_costs_filter() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseVectorFilterProto* release_reduced_costs_filter();
  ::operations_research::math_opt::SparseVectorFilterProto* mutable_reduced_costs_filter();
  void set_allocated_reduced_costs_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  void unsafe_arena_set_allocated_reduced_costs_filter(::operations_research::math_opt::SparseVectorFilterProto* value);
  ::operations_research::math_opt::SparseVectorFilterProto* unsafe_arena_release_reduced_costs_filter();

  private:
  const ::operations_research::math_opt::SparseVectorFilterProto& _internal_reduced_costs_filter() const;
  ::operations_research::math_opt::SparseVectorFilterProto* _internal_mutable_reduced_costs_filter();

  public:
  // .operations_research.math_opt.BasisProto initial_basis = 4;
  bool has_initial_basis() const;
  void clear_initial_basis() ;
  const ::operations_research::math_opt::BasisProto& initial_basis() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::BasisProto* release_initial_basis();
  ::operations_research::math_opt::BasisProto* mutable_initial_basis();
  void set_allocated_initial_basis(::operations_research::math_opt::BasisProto* value);
  void unsafe_arena_set_allocated_initial_basis(::operations_research::math_opt::BasisProto* value);
  ::operations_research::math_opt::BasisProto* unsafe_arena_release_initial_basis();

  private:
  const ::operations_research::math_opt::BasisProto& _internal_initial_basis() const;
  ::operations_research::math_opt::BasisProto* _internal_mutable_initial_basis();

  public:
  // .operations_research.math_opt.SparseInt32VectorProto branching_priorities = 6;
  bool has_branching_priorities() const;
  void clear_branching_priorities() ;
  const ::operations_research::math_opt::SparseInt32VectorProto& branching_priorities() const;
  PROTOBUF_NODISCARD ::operations_research::math_opt::SparseInt32VectorProto* release_branching_priorities();
  ::operations_research::math_opt::SparseInt32VectorProto* mutable_branching_priorities();
  void set_allocated_branching_priorities(::operations_research::math_opt::SparseInt32VectorProto* value);
  void unsafe_arena_set_allocated_branching_priorities(::operations_research::math_opt::SparseInt32VectorProto* value);
  ::operations_research::math_opt::SparseInt32VectorProto* unsafe_arena_release_branching_priorities();

  private:
  const ::operations_research::math_opt::SparseInt32VectorProto& _internal_branching_priorities() const;
  ::operations_research::math_opt::SparseInt32VectorProto* _internal_mutable_branching_priorities();

  public:
  // @@protoc_insertion_point(class_scope:operations_research.math_opt.ModelSolveParametersProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::operations_research::math_opt::SolutionHintProto > solution_hints_;
    ::operations_research::math_opt::SparseVectorFilterProto* variable_values_filter_;
    ::operations_research::math_opt::SparseVectorFilterProto* dual_values_filter_;
    ::operations_research::math_opt::SparseVectorFilterProto* reduced_costs_filter_;
    ::operations_research::math_opt::BasisProto* initial_basis_;
    ::operations_research::math_opt::SparseInt32VectorProto* branching_priorities_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SolutionHintProto

// .operations_research.math_opt.SparseDoubleVectorProto variable_values = 1;
inline bool SolutionHintProto::has_variable_values() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.variable_values_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& SolutionHintProto::_internal_variable_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleVectorProto* p = _impl_.variable_values_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleVectorProto&>(::operations_research::math_opt::_SparseDoubleVectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& SolutionHintProto::variable_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolutionHintProto.variable_values)
  return _internal_variable_values();
}
inline void SolutionHintProto::unsafe_arena_set_allocated_variable_values(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.variable_values_);
  }
  _impl_.variable_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolutionHintProto.variable_values)
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::release_variable_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* released = _impl_.variable_values_;
  _impl_.variable_values_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::unsafe_arena_release_variable_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolutionHintProto.variable_values)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseDoubleVectorProto* temp = _impl_.variable_values_;
  _impl_.variable_values_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::_internal_mutable_variable_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.variable_values_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleVectorProto>(GetArena());
    _impl_.variable_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(p);
  }
  return _impl_.variable_values_;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::mutable_variable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleVectorProto* _msg = _internal_mutable_variable_values();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolutionHintProto.variable_values)
  return _msg;
}
inline void SolutionHintProto::set_allocated_variable_values(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.variable_values_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.variable_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolutionHintProto.variable_values)
}

// .operations_research.math_opt.SparseDoubleVectorProto dual_values = 2;
inline bool SolutionHintProto::has_dual_values() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dual_values_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& SolutionHintProto::_internal_dual_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseDoubleVectorProto* p = _impl_.dual_values_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseDoubleVectorProto&>(::operations_research::math_opt::_SparseDoubleVectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseDoubleVectorProto& SolutionHintProto::dual_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.SolutionHintProto.dual_values)
  return _internal_dual_values();
}
inline void SolutionHintProto::unsafe_arena_set_allocated_dual_values(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dual_values_);
  }
  _impl_.dual_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.SolutionHintProto.dual_values)
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::release_dual_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleVectorProto* released = _impl_.dual_values_;
  _impl_.dual_values_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::unsafe_arena_release_dual_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.SolutionHintProto.dual_values)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseDoubleVectorProto* temp = _impl_.dual_values_;
  _impl_.dual_values_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::_internal_mutable_dual_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.dual_values_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseDoubleVectorProto>(GetArena());
    _impl_.dual_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(p);
  }
  return _impl_.dual_values_;
}
inline ::operations_research::math_opt::SparseDoubleVectorProto* SolutionHintProto::mutable_dual_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseDoubleVectorProto* _msg = _internal_mutable_dual_values();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.SolutionHintProto.dual_values)
  return _msg;
}
inline void SolutionHintProto::set_allocated_dual_values(::operations_research::math_opt::SparseDoubleVectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dual_values_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dual_values_ = reinterpret_cast<::operations_research::math_opt::SparseDoubleVectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.SolutionHintProto.dual_values)
}

// -------------------------------------------------------------------

// ModelSolveParametersProto

// .operations_research.math_opt.SparseVectorFilterProto variable_values_filter = 1;
inline bool ModelSolveParametersProto::has_variable_values_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.variable_values_filter_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::_internal_variable_values_filter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseVectorFilterProto* p = _impl_.variable_values_filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseVectorFilterProto&>(::operations_research::math_opt::_SparseVectorFilterProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::variable_values_filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.variable_values_filter)
  return _internal_variable_values_filter();
}
inline void ModelSolveParametersProto::unsafe_arena_set_allocated_variable_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.variable_values_filter_);
  }
  _impl_.variable_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelSolveParametersProto.variable_values_filter)
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::release_variable_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseVectorFilterProto* released = _impl_.variable_values_filter_;
  _impl_.variable_values_filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::unsafe_arena_release_variable_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelSolveParametersProto.variable_values_filter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::SparseVectorFilterProto* temp = _impl_.variable_values_filter_;
  _impl_.variable_values_filter_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::_internal_mutable_variable_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.variable_values_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseVectorFilterProto>(GetArena());
    _impl_.variable_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(p);
  }
  return _impl_.variable_values_filter_;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::mutable_variable_values_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseVectorFilterProto* _msg = _internal_mutable_variable_values_filter();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.variable_values_filter)
  return _msg;
}
inline void ModelSolveParametersProto::set_allocated_variable_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.variable_values_filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.variable_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelSolveParametersProto.variable_values_filter)
}

// .operations_research.math_opt.SparseVectorFilterProto dual_values_filter = 2;
inline bool ModelSolveParametersProto::has_dual_values_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dual_values_filter_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::_internal_dual_values_filter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseVectorFilterProto* p = _impl_.dual_values_filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseVectorFilterProto&>(::operations_research::math_opt::_SparseVectorFilterProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::dual_values_filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.dual_values_filter)
  return _internal_dual_values_filter();
}
inline void ModelSolveParametersProto::unsafe_arena_set_allocated_dual_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dual_values_filter_);
  }
  _impl_.dual_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelSolveParametersProto.dual_values_filter)
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::release_dual_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseVectorFilterProto* released = _impl_.dual_values_filter_;
  _impl_.dual_values_filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::unsafe_arena_release_dual_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelSolveParametersProto.dual_values_filter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::operations_research::math_opt::SparseVectorFilterProto* temp = _impl_.dual_values_filter_;
  _impl_.dual_values_filter_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::_internal_mutable_dual_values_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.dual_values_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseVectorFilterProto>(GetArena());
    _impl_.dual_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(p);
  }
  return _impl_.dual_values_filter_;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::mutable_dual_values_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseVectorFilterProto* _msg = _internal_mutable_dual_values_filter();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.dual_values_filter)
  return _msg;
}
inline void ModelSolveParametersProto::set_allocated_dual_values_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dual_values_filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dual_values_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelSolveParametersProto.dual_values_filter)
}

// .operations_research.math_opt.SparseVectorFilterProto reduced_costs_filter = 3;
inline bool ModelSolveParametersProto::has_reduced_costs_filter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reduced_costs_filter_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::_internal_reduced_costs_filter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseVectorFilterProto* p = _impl_.reduced_costs_filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseVectorFilterProto&>(::operations_research::math_opt::_SparseVectorFilterProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseVectorFilterProto& ModelSolveParametersProto::reduced_costs_filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.reduced_costs_filter)
  return _internal_reduced_costs_filter();
}
inline void ModelSolveParametersProto::unsafe_arena_set_allocated_reduced_costs_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reduced_costs_filter_);
  }
  _impl_.reduced_costs_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelSolveParametersProto.reduced_costs_filter)
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::release_reduced_costs_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::SparseVectorFilterProto* released = _impl_.reduced_costs_filter_;
  _impl_.reduced_costs_filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::unsafe_arena_release_reduced_costs_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelSolveParametersProto.reduced_costs_filter)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::operations_research::math_opt::SparseVectorFilterProto* temp = _impl_.reduced_costs_filter_;
  _impl_.reduced_costs_filter_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::_internal_mutable_reduced_costs_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.reduced_costs_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseVectorFilterProto>(GetArena());
    _impl_.reduced_costs_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(p);
  }
  return _impl_.reduced_costs_filter_;
}
inline ::operations_research::math_opt::SparseVectorFilterProto* ModelSolveParametersProto::mutable_reduced_costs_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseVectorFilterProto* _msg = _internal_mutable_reduced_costs_filter();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.reduced_costs_filter)
  return _msg;
}
inline void ModelSolveParametersProto::set_allocated_reduced_costs_filter(::operations_research::math_opt::SparseVectorFilterProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reduced_costs_filter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.reduced_costs_filter_ = reinterpret_cast<::operations_research::math_opt::SparseVectorFilterProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelSolveParametersProto.reduced_costs_filter)
}

// .operations_research.math_opt.BasisProto initial_basis = 4;
inline bool ModelSolveParametersProto::has_initial_basis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_basis_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::BasisProto& ModelSolveParametersProto::_internal_initial_basis() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::BasisProto* p = _impl_.initial_basis_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::BasisProto&>(::operations_research::math_opt::_BasisProto_default_instance_);
}
inline const ::operations_research::math_opt::BasisProto& ModelSolveParametersProto::initial_basis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.initial_basis)
  return _internal_initial_basis();
}
inline void ModelSolveParametersProto::unsafe_arena_set_allocated_initial_basis(::operations_research::math_opt::BasisProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_basis_);
  }
  _impl_.initial_basis_ = reinterpret_cast<::operations_research::math_opt::BasisProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelSolveParametersProto.initial_basis)
}
inline ::operations_research::math_opt::BasisProto* ModelSolveParametersProto::release_initial_basis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::BasisProto* released = _impl_.initial_basis_;
  _impl_.initial_basis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::BasisProto* ModelSolveParametersProto::unsafe_arena_release_initial_basis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelSolveParametersProto.initial_basis)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::operations_research::math_opt::BasisProto* temp = _impl_.initial_basis_;
  _impl_.initial_basis_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::BasisProto* ModelSolveParametersProto::_internal_mutable_initial_basis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.initial_basis_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::BasisProto>(GetArena());
    _impl_.initial_basis_ = reinterpret_cast<::operations_research::math_opt::BasisProto*>(p);
  }
  return _impl_.initial_basis_;
}
inline ::operations_research::math_opt::BasisProto* ModelSolveParametersProto::mutable_initial_basis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::BasisProto* _msg = _internal_mutable_initial_basis();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.initial_basis)
  return _msg;
}
inline void ModelSolveParametersProto::set_allocated_initial_basis(::operations_research::math_opt::BasisProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_basis_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.initial_basis_ = reinterpret_cast<::operations_research::math_opt::BasisProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelSolveParametersProto.initial_basis)
}

// repeated .operations_research.math_opt.SolutionHintProto solution_hints = 5;
inline int ModelSolveParametersProto::_internal_solution_hints_size() const {
  return _internal_solution_hints().size();
}
inline int ModelSolveParametersProto::solution_hints_size() const {
  return _internal_solution_hints_size();
}
inline void ModelSolveParametersProto::clear_solution_hints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.solution_hints_.Clear();
}
inline ::operations_research::math_opt::SolutionHintProto* ModelSolveParametersProto::mutable_solution_hints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.solution_hints)
  return _internal_mutable_solution_hints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>* ModelSolveParametersProto::mutable_solution_hints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:operations_research.math_opt.ModelSolveParametersProto.solution_hints)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_solution_hints();
}
inline const ::operations_research::math_opt::SolutionHintProto& ModelSolveParametersProto::solution_hints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.solution_hints)
  return _internal_solution_hints().Get(index);
}
inline ::operations_research::math_opt::SolutionHintProto* ModelSolveParametersProto::add_solution_hints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::operations_research::math_opt::SolutionHintProto* _add = _internal_mutable_solution_hints()->Add();
  // @@protoc_insertion_point(field_add:operations_research.math_opt.ModelSolveParametersProto.solution_hints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>& ModelSolveParametersProto::solution_hints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:operations_research.math_opt.ModelSolveParametersProto.solution_hints)
  return _internal_solution_hints();
}
inline const ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>&
ModelSolveParametersProto::_internal_solution_hints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.solution_hints_;
}
inline ::google::protobuf::RepeatedPtrField<::operations_research::math_opt::SolutionHintProto>*
ModelSolveParametersProto::_internal_mutable_solution_hints() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.solution_hints_;
}

// .operations_research.math_opt.SparseInt32VectorProto branching_priorities = 6;
inline bool ModelSolveParametersProto::has_branching_priorities() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.branching_priorities_ != nullptr);
  return value;
}
inline const ::operations_research::math_opt::SparseInt32VectorProto& ModelSolveParametersProto::_internal_branching_priorities() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::operations_research::math_opt::SparseInt32VectorProto* p = _impl_.branching_priorities_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::SparseInt32VectorProto&>(::operations_research::math_opt::_SparseInt32VectorProto_default_instance_);
}
inline const ::operations_research::math_opt::SparseInt32VectorProto& ModelSolveParametersProto::branching_priorities() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:operations_research.math_opt.ModelSolveParametersProto.branching_priorities)
  return _internal_branching_priorities();
}
inline void ModelSolveParametersProto::unsafe_arena_set_allocated_branching_priorities(::operations_research::math_opt::SparseInt32VectorProto* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.branching_priorities_);
  }
  _impl_.branching_priorities_ = reinterpret_cast<::operations_research::math_opt::SparseInt32VectorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:operations_research.math_opt.ModelSolveParametersProto.branching_priorities)
}
inline ::operations_research::math_opt::SparseInt32VectorProto* ModelSolveParametersProto::release_branching_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::operations_research::math_opt::SparseInt32VectorProto* released = _impl_.branching_priorities_;
  _impl_.branching_priorities_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::operations_research::math_opt::SparseInt32VectorProto* ModelSolveParametersProto::unsafe_arena_release_branching_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:operations_research.math_opt.ModelSolveParametersProto.branching_priorities)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::operations_research::math_opt::SparseInt32VectorProto* temp = _impl_.branching_priorities_;
  _impl_.branching_priorities_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::SparseInt32VectorProto* ModelSolveParametersProto::_internal_mutable_branching_priorities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.branching_priorities_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::SparseInt32VectorProto>(GetArena());
    _impl_.branching_priorities_ = reinterpret_cast<::operations_research::math_opt::SparseInt32VectorProto*>(p);
  }
  return _impl_.branching_priorities_;
}
inline ::operations_research::math_opt::SparseInt32VectorProto* ModelSolveParametersProto::mutable_branching_priorities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::operations_research::math_opt::SparseInt32VectorProto* _msg = _internal_mutable_branching_priorities();
  // @@protoc_insertion_point(field_mutable:operations_research.math_opt.ModelSolveParametersProto.branching_priorities)
  return _msg;
}
inline void ModelSolveParametersProto::set_allocated_branching_priorities(::operations_research::math_opt::SparseInt32VectorProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.branching_priorities_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.branching_priorities_ = reinterpret_cast<::operations_research::math_opt::SparseInt32VectorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:operations_research.math_opt.ModelSolveParametersProto.branching_priorities)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace math_opt
}  // namespace operations_research


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ortools_2fmath_5fopt_2fmodel_5fparameters_2eproto_2epb_2eh
